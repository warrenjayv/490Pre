
+ the log reached 10 mb; it has been cleared 
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 09:39:04pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 469
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 09:39:08pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1088
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 09:45:48pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1708
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 10:09:05pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 2328
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 2
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 2 will now be graded.
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 2
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                    [1] => Array
                        (
                            [id] => 5
                            [desc] => Write a function called sub() that takes two integers and prints their difference.
                            [topic] => Subtraction
                            [diff] => 1
                        )

                    [2] => Array
                        (
                            [id] => 1
                            [desc] => Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string "error".
                            [topic] => Operators
                            [diff] => 2
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 3
            [1] => 5
            [2] => 1
        )

    [testId] => 2
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c):
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

            [1] => Array
                (
                    [qId] => 5
                    [text] => def sub(a, b)
    return a - b
                    [tests] => Array
                        (
                            [0] => sub(3,4)="-1"
                            [1] => sub(4,3)="1"
                        )

                )

            [2] => Array
                (
                    [qId] => 1
                    [text] => def operation(op, a, b):
    if (op == '+'):
           return a+b
    if (op == '-'):
           return a-b
    if (op == '*'):
           return a*b
    if (op == '/'):
           return a/b
    if (op == '%'):
           return a%b
     
                    [tests] => Array
                        (
                            [0] => operation('+',3,3)=6
                            [1] => operation('-',3,3)=0
                            [2] => operation('/',3,3)=1
                            [3] => operation('*',3,3)=9
                            [4] => operation('%',3,3)=0
                            [5] => operation('?',3,3)="error"
                            [6] => operation('hi',3,3)="error"
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c):
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

    [1] => Array
        (
            [qId] => 5
            [text] => def sub(a, b)
    return a - b
            [tests] => Array
                (
                    [0] => sub(3,4)="-1"
                    [1] => sub(4,3)="1"
                )

        )

    [2] => Array
        (
            [qId] => 1
            [text] => def operation(op, a, b):
    if (op == '+'):
           return a+b
    if (op == '-'):
           return a-b
    if (op == '*'):
           return a*b
    if (op == '/'):
           return a/b
    if (op == '%'):
           return a%b
     
            [tests] => Array
                (
                    [0] => operation('+',3,3)=6
                    [1] => operation('-',3,3)=0
                    [2] => operation('/',3,3)=1
                    [3] => operation('*',3,3)=9
                    [4] => operation('%',3,3)=0
                    [5] => operation('?',3,3)="error"
                    [6] => operation('hi',3,3)="error"
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 3
    [feedback] => gp missing colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 3
    [feedback] => g5p missing colon [:] in user answer
    [points] => 100
    [max] => 5
)

+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 3
    [feedback] => np expecting function [addThree] in answer found!
    [subpoints] => 0
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 3
    [feedback] => n0p expecting function [addThree] in answer found!
    [points] => 100
    [max] => 5
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 2, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ running execom() with pars for id : 2, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(100, 200, 300)], expected: [600], got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 3
    [feedback] => gp called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 100
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 100
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 100
    [max] => 20
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 3
    [feedback] => gp called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 100
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 100
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 100
    [max] => 20
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 3
    [feedback] => gp called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 100
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 100
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 100
    [max] => 20
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(1,2,3)], expected: [6], got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 3
    [feedback] => gp called [addThree(1,2,3)], expected: [6], got user answer [6]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 100
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 100
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 100
    [max] => 20
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(4,5,6)], expected: [15], got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 3
    [feedback] => gp called [addThree(4,5,6)], expected: [15], got user answer [15]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 3
    [feedback] => g20p called [addThree(4,5,6)], expected: [15], got user answer [15]
    [points] => 100
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 3
    [feedback] => g20p called [addThree(4,5,6)], expected: [15], got user answer [15]
    [points] => 100
    [max] => 20
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 100
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 100
    [max] => 80
)

+  page accessed by getCons 2019-04-12 10:09:06pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 5
+ clearning the python file for 5
+ colon was not found in user answer
+ new answer: 
 def sub(a, b):
    return a - b
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 5
    [feedback] => bp missing colon [:] in user answer
    [subpoints] => .05
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 5
    [feedback] => b5p missing colon [:] in user answer
    [points] => 95
    [max] => 5
)

+ operating funcom for userAnswer: def sub(a, b):
    return a - b
+ obtained function sub with funcom()
+ finding if sub is in user answer def sub(a, b):
    return a - b
+ obtained function sub with funcom()
+ finding if sub is in user answer def sub(a, b):
    return a - b
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 5
    [feedback] => np expecting function [sub] in answer found!
    [subpoints] => 0
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 5
    [feedback] => n0p expecting function [sub] in answer found!
    [points] => 95
    [max] => 5
)

+ writing answer to python file: def sub(a, b):
    return a - b
+ current testcase :  sub(3,4)="-1"
+ current function : sub(3,4)
+ printout : print(sub(3,4))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "-1"
)

+ now we are writing the testcase function sub(3,4) on the python file : 
+ current testcase :  sub(4,3)="1"
+ current function : sub(4,3)
+ printout : print(sub(4,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "-1"
    [1] => "1"
)

+ now we are writing the testcase function sub(4,3) on the python file : 
+ running execom() with pars for id : 2, qId : 5
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ running execom() with pars for id : 2, qId : 5
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ comparing sub(3,4)="-1" with output : "-1"
+ comparing c: -1 with output : "-1"
fail!
+ calling updatePoints() to provide feedback
+ bp called [sub(3,4)]  expected answer: ["-1"], got user answer ["-1"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 5
    [feedback] => bp called [sub(3,4)]  expected answer: ["-1"], got user answer ["-1"]
    [subpoints] => .20
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 5
    [feedback] => b19p called [sub(3,4)]  expected answer: ["-1"], got user answer ["-1"]
    [points] => 76
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 5
    [feedback] => b19p called [sub(3,4)]  expected answer: ["-1"], got user answer ["-1"]
    [points] => 76
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 5
    [feedback] => b19p called [sub(3,4)]  expected answer: ["-1"], got user answer ["-1"]
    [points] => 76
    [max] => 20
)

+ comparing sub(4,3)="1" with output : "1"
+ comparing c: 1 with output : "1"
fail!
+ calling updatePoints() to provide feedback
+ bp called [sub(4,3)]  expected answer: ["1"], got user answer ["1"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 5
    [feedback] => bp called [sub(4,3)]  expected answer: ["1"], got user answer ["1"]
    [subpoints] => .20
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 5
    [feedback] => b15.2p called [sub(4,3)]  expected answer: ["1"], got user answer ["1"]
    [points] => 61
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 5
    [feedback] => b15.2p called [sub(4,3)]  expected answer: ["1"], got user answer ["1"]
    [points] => 61
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 5
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 5
    [feedback] => n0p user program succesfully executed. 
    [points] => 61
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 5
    [feedback] => n0p user program succesfully executed. 
    [points] => 61
    [max] => 80
)

+  page accessed by getCons 2019-04-12 10:09:07pm
+ received data : 
Array
(
    [qId] => 5
)

+ getCons() in backend  was succesful. data: 
{"cons":["print"]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
    [0] => print
)

+ getCons (5) success:
Array
(
    [0] => print
)

+ checkCons() is checking if constraints are found in user answer
+ checkCons() did not find print in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 5
    [feedback] => bp constraint [print]  was not found.
    [subpoints] => .2
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 5
    [feedback] => b12.2p constraint [print]  was not found.
    [points] => 49
    [max] => 20
)

+ checkCons() was succesful at test 2, qid 5
counter is 3
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 1
+ clearning the python file for 1
def operation(op, a, b):
    if (op == '+'):
           return a+b
    if (op == '-'):
           return a-b
    if (op == '*'):
           return a*b
    if (op == '/'):
           return a/b
    if (op == '%'):
           return a%b
     
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => gp missing colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => g5p missing colon [:] in user answer
    [points] => 100
    [max] => 5
)

+ operating funcom for userAnswer: def operation(op, a, b):
    if (op == '+'):
           return a+b
    if (op == '-'):
           return a-b
    if (op == '*'):
           return a*b
    if (op == '/'):
           return a/b
    if (op == '%'):
           return a%b
     
+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if (op == '+'):
           return a+b
    if (op == '-'):
           return a-b
    if (op == '*'):
           return a*b
    if (op == '/'):
           return a/b
    if (op == '%'):
           return a%b
     
+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if (op == '+'):
           return a+b
    if (op == '-'):
           return a-b
    if (op == '*'):
           return a*b
    if (op == '/'):
           return a/b
    if (op == '%'):
           return a%b
     
+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if (op == '+'):
           return a+b
    if (op == '-'):
           return a-b
    if (op == '*'):
           return a*b
    if (op == '/'):
           return a/b
    if (op == '%'):
           return a%b
     
+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if (op == '+'):
           return a+b
    if (op == '-'):
           return a-b
    if (op == '*'):
           return a*b
    if (op == '/'):
           return a/b
    if (op == '%'):
           return a%b
     
+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if (op == '+'):
           return a+b
    if (op == '-'):
           return a-b
    if (op == '*'):
           return a*b
    if (op == '/'):
           return a/b
    if (op == '%'):
           return a%b
     
+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if (op == '+'):
           return a+b
    if (op == '-'):
           return a-b
    if (op == '*'):
           return a*b
    if (op == '/'):
           return a/b
    if (op == '%'):
           return a%b
     
+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if (op == '+'):
           return a+b
    if (op == '-'):
           return a-b
    if (op == '*'):
           return a*b
    if (op == '/'):
           return a/b
    if (op == '%'):
           return a%b
     
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => np expecting function [operation] in answer found!
    [subpoints] => 0
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => n0p expecting function [operation] in answer found!
    [points] => 100
    [max] => 5
)

+ writing answer to python file: def operation(op, a, b):
    if (op == '+'):
           return a+b
    if (op == '-'):
           return a-b
    if (op == '*'):
           return a*b
    if (op == '/'):
           return a/b
    if (op == '%'):
           return a%b
     
+ current testcase :  operation('+',3,3)=6
+ current function : operation('+',3,3)
+ printout : print(operation('+',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
)

+ now we are writing the testcase function operation('+',3,3) on the python file : 
substr failed at getOut()+ current testcase :  operation('-',3,3)=0
+ current function : operation('-',3,3)
+ printout : print(operation('-',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
)

+ now we are writing the testcase function operation('-',3,3) on the python file : 
+ current testcase :  operation('/',3,3)=1
+ current function : operation('/',3,3)
+ printout : print(operation('/',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
)

+ now we are writing the testcase function operation('/',3,3) on the python file : 
+ current testcase :  operation('*',3,3)=9
+ current function : operation('*',3,3)
+ printout : print(operation('*',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
)

+ now we are writing the testcase function operation('*',3,3) on the python file : 
substr failed at getOut()+ current testcase :  operation('%',3,3)=0
+ current function : operation('%',3,3)
+ printout : print(operation('%',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
)

+ now we are writing the testcase function operation('%',3,3) on the python file : 
+ current testcase :  operation('?',3,3)="error"
+ current function : operation('?',3,3)
+ printout : print(operation('?',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
    [5] => "error"
)

+ now we are writing the testcase function operation('?',3,3) on the python file : 
+ current testcase :  operation('hi',3,3)="error"
+ current function : operation('hi',3,3)
+ printout : print(operation('hi',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
    [5] => "error"
    [6] => "error"
)

+ now we are writing the testcase function operation('hi',3,3) on the python file : 
+ running execom() with pars for id : 2, qId : 1
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ running execom() with pars for id : 2, qId : 1
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ comparing operation('+',3,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp called [operation('+',3,3)], expected: [6], got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => gp called [operation('+',3,3)], expected: [6], got user answer [6]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => g20p called [operation('+',3,3)], expected: [6], got user answer [6]
    [points] => 100
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => g20p called [operation('+',3,3)], expected: [6], got user answer [6]
    [points] => 100
    [max] => 20
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ 0 is an empty or null output. skipping!
+ comparing operation('/',3,3)=1 with output : 1
+ comparing c: 1 with output : 1
pass!
+ calling updatePoints() to provide feedback
+ gp called [operation('/',3,3)], expected: [1], got user answer [1]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => gp called [operation('/',3,3)], expected: [1], got user answer [1]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => g20p called [operation('/',3,3)], expected: [1], got user answer [1]
    [points] => 100
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => g20p called [operation('/',3,3)], expected: [1], got user answer [1]
    [points] => 100
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => g20p called [operation('/',3,3)], expected: [1], got user answer [1]
    [points] => 100
    [max] => 20
)

+ comparing operation('*',3,3)=9 with output : 9
+ comparing c: 9 with output : 9
pass!
+ calling updatePoints() to provide feedback
+ gp called [operation('*',3,3)], expected: [9], got user answer [9]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => gp called [operation('*',3,3)], expected: [9], got user answer [9]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => g20p called [operation('*',3,3)], expected: [9], got user answer [9]
    [points] => 100
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => g20p called [operation('*',3,3)], expected: [9], got user answer [9]
    [points] => 100
    [max] => 20
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ 0 is an empty or null output. skipping!
+ comparing operation('?',3,3)="error" with output : "error"
+ comparing c: None with output : "error"
fail!
+ calling updatePoints() to provide feedback
+ bp called [operation('?',3,3)]  expected answer: ["error"], got user answer ["error"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => bp called [operation('?',3,3)]  expected answer: ["error"], got user answer ["error"]
    [subpoints] => .20
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => b20p called [operation('?',3,3)]  expected answer: ["error"], got user answer ["error"]
    [points] => 80
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => b20p called [operation('?',3,3)]  expected answer: ["error"], got user answer ["error"]
    [points] => 80
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => b20p called [operation('?',3,3)]  expected answer: ["error"], got user answer ["error"]
    [points] => 80
    [max] => 20
)

+ comparing operation('hi',3,3)="error" with output : "error"
+ comparing c: None with output : "error"
fail!
+ calling updatePoints() to provide feedback
+ bp called [operation('hi',3,3)]  expected answer: ["error"], got user answer ["error"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => bp called [operation('hi',3,3)]  expected answer: ["error"], got user answer ["error"]
    [subpoints] => .20
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => b16p called [operation('hi',3,3)]  expected answer: ["error"], got user answer ["error"]
    [points] => 64
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => b16p called [operation('hi',3,3)]  expected answer: ["error"], got user answer ["error"]
    [points] => 64
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => n0p user program succesfully executed. 
    [points] => 64
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => n0p user program succesfully executed. 
    [points] => 64
    [max] => 80
)

+  page accessed by getCons 2019-04-12 10:09:08pm
+ received data : 
Array
(
    [qId] => 1
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(1) failed
[+] page accessed AUTOGRADER 2019-04-12 10:10:12pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 38207
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 10:22:21pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 38828
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 10:22:33pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 39449
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 10:23:02pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 40070
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 10:23:04pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 40691
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 10:23:15pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 41312
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 10:23:35pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 41933
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 10:23:48pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 42554
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 10:31:31pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 43175
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 2
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 2 will now be graded.
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 2
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 1
                            [desc] => Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string "error".
                            [topic] => Operators
                            [diff] => 2
                        )

                    [1] => Array
                        (
                            [id] => 2
                            [desc] => Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.
                            [topic] => Printing string
                            [diff] => 3
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 1
            [1] => 2
        )

    [testId] => 2
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 1
                    [text] => def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
                    [tests] => Array
                        (
                            [0] => operation('+',3,3)=6
                            [1] => operation('-',3,3)=0
                            [2] => operation('/',3,3)=1
                            [3] => operation('*',3,3)=9
                            [4] => operation('%',3,3)=0
                            [5] => operation('?',3,3)="error"
                            [6] => operation('hi',3,3)="error"
                        )

                )

            [1] => Array
                (
                    [qId] => 2
                    [text] => def strMult(s, n):
    return s * n
                    [tests] => Array
                        (
                            [0] => strMult("hello",1)="hello"
                            [1] => strMult("up", 4)="upupupup"
                            [2] => strMult("hey", 3)="heyheyhey"
                            [3] => strMult("aba", 2)="abaaba"
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 1
            [text] => def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
            [tests] => Array
                (
                    [0] => operation('+',3,3)=6
                    [1] => operation('-',3,3)=0
                    [2] => operation('/',3,3)=1
                    [3] => operation('*',3,3)=9
                    [4] => operation('%',3,3)=0
                    [5] => operation('?',3,3)="error"
                    [6] => operation('hi',3,3)="error"
                )

        )

    [1] => Array
        (
            [qId] => 2
            [text] => def strMult(s, n):
    return s * n
            [tests] => Array
                (
                    [0] => strMult("hello",1)="hello"
                    [1] => strMult("up", 4)="upupupup"
                    [2] => strMult("hey", 3)="heyheyhey"
                    [3] => strMult("aba", 2)="abaaba"
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 1
+ clearning the python file for 1
def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => gp missing colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => g5p missing colon [:] in user answer
    [points] => 120
    [max] => 5
)

+ operating funcom for userAnswer: def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ function was not found at all in the user answer
+ returning the correct function : operation
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => bp expecting function name [operation] in answer was not found!
    [subpoints] => .05
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => b6p expecting function name [operation] in answer was not found!
    [points] => 114
    [max] => 5
)

+ replacing def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b  with operation
+ funrep() called, old answer: def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ funrep() called, new answer: def operation(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ writing correct answer to python file: def operation(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ current testcase :  operation('+',3,3)=6
+ current function : operation('+',3,3)
+ printout : print(operation('+',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
)

+ now we are writing the testcase function operation('+',3,3) on the python file : 
substr failed at getOut()+ current testcase :  operation('-',3,3)=0
+ current function : operation('-',3,3)
+ printout : print(operation('-',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
)

+ now we are writing the testcase function operation('-',3,3) on the python file : 
+ current testcase :  operation('/',3,3)=1
+ current function : operation('/',3,3)
+ printout : print(operation('/',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
)

+ now we are writing the testcase function operation('/',3,3) on the python file : 
+ current testcase :  operation('*',3,3)=9
+ current function : operation('*',3,3)
+ printout : print(operation('*',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
)

+ now we are writing the testcase function operation('*',3,3) on the python file : 
substr failed at getOut()+ current testcase :  operation('%',3,3)=0
+ current function : operation('%',3,3)
+ printout : print(operation('%',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
)

+ now we are writing the testcase function operation('%',3,3) on the python file : 
+ current testcase :  operation('?',3,3)="error"
+ current function : operation('?',3,3)
+ printout : print(operation('?',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
    [5] => "error"
)

+ now we are writing the testcase function operation('?',3,3) on the python file : 
+ current testcase :  operation('hi',3,3)="error"
+ current function : operation('hi',3,3)
+ printout : print(operation('hi',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
    [5] => "error"
    [6] => "error"
)

+ now we are writing the testcase function operation('hi',3,3) on the python file : 
+ running execom() with pars for id : 2, qId : 1
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ exec() failed. returning 0. function did not match testcase or program syntax errors 		
+ execom failed. pls check logs. 
+ execom failed. pls check logs. 
+ calling updatePoints() to provide feedback
+ bp user program failed to execute. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => bp user program failed to execute. 
    [subpoints] => .8
    [max] => 80
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => b91.2p user program failed to execute. 
    [points] => 23
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => b91.2p user program failed to execute. 
    [points] => 23
    [max] => 80
)

+  page accessed by getCons 2019-04-12 10:31:32pm
+ received data : 
Array
(
    [qId] => 1
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(1) failed
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 2
+ clearning the python file for 2
def strMult(s, n):
    return s * n
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => gp missing colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g5p missing colon [:] in user answer
    [points] => 120
    [max] => 5
)

+ operating funcom for userAnswer: def strMult(s, n):
    return s * n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s * n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s * n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s * n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s * n
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => np expecting function [strMult] in answer found!
    [subpoints] => 0
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => n0p expecting function [strMult] in answer found!
    [points] => 120
    [max] => 5
)

+ writing answer to python file: def strMult(s, n):
    return s * n
+ current testcase :  strMult("hello",1)="hello"
+ current function : strMult("hello",1)
+ printout : print(strMult("hello",1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "hello"
)

+ now we are writing the testcase function strMult("hello",1) on the python file : 
+ current testcase :  strMult("up", 4)="upupupup"
+ current function : strMult("up", 4)
+ printout : print(strMult("up", 4))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "hello"
    [1] => "upupupup"
)

+ now we are writing the testcase function strMult("up", 4) on the python file : 
+ current testcase :  strMult("hey", 3)="heyheyhey"
+ current function : strMult("hey", 3)
+ printout : print(strMult("hey", 3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "hello"
    [1] => "upupupup"
    [2] => "heyheyhey"
)

+ now we are writing the testcase function strMult("hey", 3) on the python file : 
+ current testcase :  strMult("aba", 2)="abaaba"
+ current function : strMult("aba", 2)
+ printout : print(strMult("aba", 2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "hello"
    [1] => "upupupup"
    [2] => "heyheyhey"
    [3] => "abaaba"
)

+ now we are writing the testcase function strMult("aba", 2) on the python file : 
+ running execom() with pars for id : 2, qId : 2
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ running execom() with pars for id : 2, qId : 2
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ comparing strMult("hello",1)="hello" with output : "hello"
+ comparing c: hello with output : "hello"
fail!
+ calling updatePoints() to provide feedback
+ bp called [strMult("hello",1)]  expected answer: ["hello"], got user answer ["hello"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => bp called [strMult("hello",1)]  expected answer: ["hello"], got user answer ["hello"]
    [subpoints] => .20
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => b24p called [strMult("hello",1)]  expected answer: ["hello"], got user answer ["hello"]
    [points] => 96
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => b24p called [strMult("hello",1)]  expected answer: ["hello"], got user answer ["hello"]
    [points] => 96
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => b24p called [strMult("hello",1)]  expected answer: ["hello"], got user answer ["hello"]
    [points] => 96
    [max] => 20
)

+ comparing strMult("up", 4)="upupupup" with output : "upupupup"
+ comparing c: upupupup with output : "upupupup"
fail!
+ calling updatePoints() to provide feedback
+ bp called [strMult("up", 4)]  expected answer: ["upupupup"], got user answer ["upupupup"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => bp called [strMult("up", 4)]  expected answer: ["upupupup"], got user answer ["upupupup"]
    [subpoints] => .20
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => b19.2p called [strMult("up", 4)]  expected answer: ["upupupup"], got user answer ["upupupup"]
    [points] => 77
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => b19.2p called [strMult("up", 4)]  expected answer: ["upupupup"], got user answer ["upupupup"]
    [points] => 77
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => b19.2p called [strMult("up", 4)]  expected answer: ["upupupup"], got user answer ["upupupup"]
    [points] => 77
    [max] => 20
)

+ comparing strMult("hey", 3)="heyheyhey" with output : "heyheyhey"
+ comparing c: heyheyhey with output : "heyheyhey"
fail!
+ calling updatePoints() to provide feedback
+ bp called [strMult("hey", 3)]  expected answer: ["heyheyhey"], got user answer ["heyheyhey"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => bp called [strMult("hey", 3)]  expected answer: ["heyheyhey"], got user answer ["heyheyhey"]
    [subpoints] => .20
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => b15.4p called [strMult("hey", 3)]  expected answer: ["heyheyhey"], got user answer ["heyheyhey"]
    [points] => 62
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => b15.4p called [strMult("hey", 3)]  expected answer: ["heyheyhey"], got user answer ["heyheyhey"]
    [points] => 62
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => b15.4p called [strMult("hey", 3)]  expected answer: ["heyheyhey"], got user answer ["heyheyhey"]
    [points] => 62
    [max] => 20
)

+ comparing strMult("aba", 2)="abaaba" with output : "abaaba"
+ comparing c: abaaba with output : "abaaba"
fail!
+ calling updatePoints() to provide feedback
+ bp called [strMult("aba", 2)]  expected answer: ["abaaba"], got user answer ["abaaba"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => bp called [strMult("aba", 2)]  expected answer: ["abaaba"], got user answer ["abaaba"]
    [subpoints] => .20
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => b12.4p called [strMult("aba", 2)]  expected answer: ["abaaba"], got user answer ["abaaba"]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => b12.4p called [strMult("aba", 2)]  expected answer: ["abaaba"], got user answer ["abaaba"]
    [points] => 50
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => n0p user program succesfully executed. 
    [points] => 50
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => n0p user program succesfully executed. 
    [points] => 50
    [max] => 80
)

+  page accessed by getCons 2019-04-12 10:31:32pm
+ received data : 
Array
(
    [qId] => 2
)

+ getCons() in backend  was succesful. data: 
{"cons":["for","print"]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
    [0] => for
    [1] => print
)

+ getCons (2) success:
Array
(
    [0] => for
    [1] => print
)

+ checkCons() is checking if constraints are found in user answer
+ checkCons() did not find for in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => bp constraint [for]  was not found.
    [subpoints] => .2
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => b10p constraint [for]  was not found.
    [points] => 40
    [max] => 20
)

+ checkCons() did not find print in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => bp constraint [print]  was not found.
    [subpoints] => .2
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => b8p constraint [print]  was not found.
    [points] => 32
    [max] => 20
)

+ checkCons() was succesful at test 2, qid 2
[+] page accessed AUTOGRADER 2019-04-12 10:31:38pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 67073
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 10:54:07pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 67694
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 10:54:11pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 68315
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 10:55:31pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 68936
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 1
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 1 will now be graded.
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 2
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 2 will now be graded.
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 1
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 4
                            [desc] => Write a function called factorial() which takes one integer parameter n, and returns n!. 
                            [topic] => Math Factorial
                            [diff] => 4
                        )

                    [1] => Array
                        (
                            [id] => 2
                            [desc] => Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.
                            [topic] => Printing string
                            [diff] => 3
                        )

                    [2] => Array
                        (
                            [id] => 5
                            [desc] => Write a function called sub() that takes two integers and prints their difference.
                            [topic] => Subtraction
                            [diff] => 1
                        )

                )

        )

    [1] => Array
        (
            [id] => 2
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 1
                            [desc] => Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string "error".
                            [topic] => Operators
                            [diff] => 2
                        )

                    [1] => Array
                        (
                            [id] => 2
                            [desc] => Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.
                            [topic] => Printing string
                            [diff] => 3
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 4
            [1] => 2
            [2] => 5
        )

    [testId] => 1
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 4
                    [text] => def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
                    [tests] => Array
                        (
                            [0] => factorial(2)=2
                            [1] => factorial(5)=120
                            [2] => factorial(3)=6
                            [3] => factorial(1)=1
                        )

                )

            [1] => Array
                (
                    [qId] => 2
                    [text] => def strMult(s, n):
    return s*n
                    [tests] => Array
                        (
                            [0] => strMult("hello",1)=hello
                            [1] => strMult("up", 4)=upupupup
                            [2] => strMult("hey", 3)=heyheyhey
                            [3] => strMult("aba", 2)=abaaba
                        )

                )

            [2] => Array
                (
                    [qId] => 5
                    [text] => def subtract(a,b)
    print a - b
                    [tests] => Array
                        (
                            [0] => sub(3,4)="-1"
                            [1] => sub(4,3)="1"
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 4
            [text] => def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
            [tests] => Array
                (
                    [0] => factorial(2)=2
                    [1] => factorial(5)=120
                    [2] => factorial(3)=6
                    [3] => factorial(1)=1
                )

        )

    [1] => Array
        (
            [qId] => 2
            [text] => def strMult(s, n):
    return s*n
            [tests] => Array
                (
                    [0] => strMult("hello",1)=hello
                    [1] => strMult("up", 4)=upupupup
                    [2] => strMult("hey", 3)=heyheyhey
                    [3] => strMult("aba", 2)=abaaba
                )

        )

    [2] => Array
        (
            [qId] => 5
            [text] => def subtract(a,b)
    print a - b
            [tests] => Array
                (
                    [0] => sub(3,4)="-1"
                    [1] => sub(4,3)="1"
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 4
+ clearning the python file for 4
def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => gp missing colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g5p missing colon [:] in user answer
    [points] => 25
    [max] => 5
)

+ operating funcom for userAnswer: def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ obtained function factorial with funcom()
+ finding if factorial is in user answer def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ obtained function factorial with funcom()
+ finding if factorial is in user answer def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ obtained function factorial with funcom()
+ finding if factorial is in user answer def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ obtained function factorial with funcom()
+ finding if factorial is in user answer def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => np expecting function [factorial] in answer found!
    [subpoints] => 0
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => n0p expecting function [factorial] in answer found!
    [points] => 25
    [max] => 5
)

+ writing answer to python file: def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ current testcase :  factorial(2)=2
+ current function : factorial(2)
+ printout : print(factorial(2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 2
)

+ now we are writing the testcase function factorial(2) on the python file : 
+ current testcase :  factorial(5)=120
+ current function : factorial(5)
+ printout : print(factorial(5))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 2
    [1] => 120
)

+ now we are writing the testcase function factorial(5) on the python file : 
+ current testcase :  factorial(3)=6
+ current function : factorial(3)
+ printout : print(factorial(3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 2
    [1] => 120
    [2] => 6
)

+ now we are writing the testcase function factorial(3) on the python file : 
+ current testcase :  factorial(1)=1
+ current function : factorial(1)
+ printout : print(factorial(1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 2
    [1] => 120
    [2] => 6
    [3] => 1
)

+ now we are writing the testcase function factorial(1) on the python file : 
+ running execom() with pars for id : 1, qId : 4
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
print(factorial(2))
print(factorial(5))
print(factorial(3))
print(factorial(1))
+ running execom() with pars for id : 1, qId : 4
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
print(factorial(2))
print(factorial(5))
print(factorial(3))
print(factorial(1))
+ comparing factorial(2)=2 with output : 2
+ comparing c: 2 with output : 2
pass!
+ calling updatePoints() to provide feedback
+ gp called [factorial(2)], expected: [2], got user answer [2]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => gp called [factorial(2)], expected: [2], got user answer [2]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(2)], expected: [2], got user answer [2]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(2)], expected: [2], got user answer [2]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(2)], expected: [2], got user answer [2]
    [points] => 25
    [max] => 20
)

+ comparing factorial(5)=120 with output : 120
+ comparing c: 120 with output : 120
pass!
+ calling updatePoints() to provide feedback
+ gp called [factorial(5)], expected: [120], got user answer [120]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => gp called [factorial(5)], expected: [120], got user answer [120]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(5)], expected: [120], got user answer [120]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(5)], expected: [120], got user answer [120]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(5)], expected: [120], got user answer [120]
    [points] => 25
    [max] => 20
)

+ comparing factorial(3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp called [factorial(3)], expected: [6], got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => gp called [factorial(3)], expected: [6], got user answer [6]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(3)], expected: [6], got user answer [6]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(3)], expected: [6], got user answer [6]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(3)], expected: [6], got user answer [6]
    [points] => 25
    [max] => 20
)

+ comparing factorial(1)=1 with output : 1
+ comparing c: 1 with output : 1
pass!
+ calling updatePoints() to provide feedback
+ gp called [factorial(1)], expected: [1], got user answer [1]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => gp called [factorial(1)], expected: [1], got user answer [1]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(1)], expected: [1], got user answer [1]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(1)], expected: [1], got user answer [1]
    [points] => 25
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => n0p user program succesfully executed. 
    [points] => 25
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => n0p user program succesfully executed. 
    [points] => 25
    [max] => 80
)

+  page accessed by getCons 2019-04-12 10:55:33pm
+ received data : 
Array
(
    [qId] => 4
)

+ getCons() in backend  was succesful. data: 
{"cons":["while"]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
    [0] => while
)

+ getCons (4) success:
Array
(
    [0] => while
)

+ checkCons() is checking if constraints are found in user answer
+ checkCons() did not find while in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => bp constraint [while]  was not found.
    [subpoints] => .2
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => b5p constraint [while]  was not found.
    [points] => 20
    [max] => 20
)

+ checkCons() was succesful at test 1, qid 4
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 2
+ clearning the python file for 2
def strMult(s, n):
    return s*n
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => gp missing colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g5p missing colon [:] in user answer
    [points] => 50
    [max] => 5
)

+ operating funcom for userAnswer: def strMult(s, n):
    return s*n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s*n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s*n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s*n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s*n
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => np expecting function [strMult] in answer found!
    [subpoints] => 0
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => n0p expecting function [strMult] in answer found!
    [points] => 50
    [max] => 5
)

+ writing answer to python file: def strMult(s, n):
    return s*n
+ current testcase :  strMult("hello",1)=hello
+ current function : strMult("hello",1)
+ printout : print(strMult("hello",1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
)

+ now we are writing the testcase function strMult("hello",1) on the python file : 
+ current testcase :  strMult("up", 4)=upupupup
+ current function : strMult("up", 4)
+ printout : print(strMult("up", 4))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
)

+ now we are writing the testcase function strMult("up", 4) on the python file : 
+ current testcase :  strMult("hey", 3)=heyheyhey
+ current function : strMult("hey", 3)
+ printout : print(strMult("hey", 3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
    [2] => heyheyhey
)

+ now we are writing the testcase function strMult("hey", 3) on the python file : 
+ current testcase :  strMult("aba", 2)=abaaba
+ current function : strMult("aba", 2)
+ printout : print(strMult("aba", 2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
    [2] => heyheyhey
    [3] => abaaba
)

+ now we are writing the testcase function strMult("aba", 2) on the python file : 
+ running execom() with pars for id : 1, qId : 2
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def strMult(s, n):
    return s*n
print(strMult("hello",1))
print(strMult("up", 4))
print(strMult("hey", 3))
print(strMult("aba", 2))
+ running execom() with pars for id : 1, qId : 2
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def strMult(s, n):
    return s*n
print(strMult("hello",1))
print(strMult("up", 4))
print(strMult("hey", 3))
print(strMult("aba", 2))
+ comparing strMult("hello",1)=hello with output : hello
+ comparing c: hello with output : hello
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("hello",1)], expected: [hello], got user answer [hello]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => gp called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 50
    [max] => 20
)

+ comparing strMult("up", 4)=upupupup with output : upupupup
+ comparing c: upupupup with output : upupupup
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => gp called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [points] => 50
    [max] => 20
)

+ comparing strMult("hey", 3)=heyheyhey with output : heyheyhey
+ comparing c: heyheyhey with output : heyheyhey
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => gp called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [points] => 50
    [max] => 20
)

+ comparing strMult("aba", 2)=abaaba with output : abaaba
+ comparing c: abaaba with output : abaaba
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => gp called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
    [points] => 50
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => n0p user program succesfully executed. 
    [points] => 50
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => n0p user program succesfully executed. 
    [points] => 50
    [max] => 80
)

+  page accessed by getCons 2019-04-12 10:55:34pm
+ received data : 
Array
(
    [qId] => 2
)

+ getCons() in backend  was succesful. data: 
{"cons":["for","print"]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
    [0] => for
    [1] => print
)

+ getCons (2) success:
Array
(
    [0] => for
    [1] => print
)

+ checkCons() is checking if constraints are found in user answer
+ checkCons() did not find for in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => bp constraint [for]  was not found.
    [subpoints] => .2
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => b10p constraint [for]  was not found.
    [points] => 40
    [max] => 20
)

+ checkCons() did not find print in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => bp constraint [print]  was not found.
    [subpoints] => .2
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => b8p constraint [print]  was not found.
    [points] => 32
    [max] => 20
)

+ checkCons() was succesful at test 1, qid 2
counter is 3
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 5
+ clearning the python file for 5
+ colon was not found in user answer
+ new answer: 
 def subtract(a,b):
    print a - b
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 5
    [feedback] => bp missing colon [:] in user answer
    [subpoints] => .05
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 5
    [feedback] => b1.25p missing colon [:] in user answer
    [points] => 24
    [max] => 5
)

+ operating funcom for userAnswer: def subtract(a,b):
    print a - b
+ obtained function sub with funcom()
+ finding if sub is in user answer def subtract(a,b):
    print a - b
+ obtained function sub with funcom()
+ finding if sub is in user answer def subtract(a,b):
    print a - b
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 5
    [feedback] => np expecting function [sub] in answer found!
    [subpoints] => 0
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 5
    [feedback] => n0p expecting function [sub] in answer found!
    [points] => 24
    [max] => 5
)

+ writing answer to python file: def subtract(a,b):
    print a - b
+ current testcase :  sub(3,4)="-1"
+ current function : sub(3,4)
+ printout : print(sub(3,4))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "-1"
)

+ now we are writing the testcase function sub(3,4) on the python file : 
+ current testcase :  sub(4,3)="1"
+ current function : sub(4,3)
+ printout : print(sub(4,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "-1"
    [1] => "1"
)

+ now we are writing the testcase function sub(4,3) on the python file : 
+ running execom() with pars for id : 1, qId : 5
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def subtract(a,b):
    print a - b
print(sub(3,4))
print(sub(4,3))
+ exec() failed. returning 0. function did not match testcase or program syntax errors 		
+ execom failed. pls check logs. 
+ execom failed. pls check logs. 
+ calling updatePoints() to provide feedback
+ bp user program failed to execute. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 5
    [feedback] => bp user program failed to execute. 
    [subpoints] => .8
    [max] => 80
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 5
    [feedback] => b19.2p user program failed to execute. 
    [points] => 5
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 5
    [feedback] => b19.2p user program failed to execute. 
    [points] => 5
    [max] => 80
)

+  page accessed by getCons 2019-04-12 10:55:34pm
+ received data : 
Array
(
    [qId] => 5
)

+ getCons() in backend  was succesful. data: 
{"cons":["print"]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
    [0] => print
)

+ getCons (5) success:
Array
(
    [0] => print
)

+ checkCons() is checking if constraints are found in user answer
+ checkCons() found print in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 5
    [feedback] => gp constraint [print] was found.
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 5
    [feedback] => g20p constraint [print] was found.
    [points] => 5
    [max] => 20
)

+ checkCons() was succesful at test 1, qid 5
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 1
            [1] => 2
        )

    [testId] => 2
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 1
                    [text] => def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
                    [tests] => Array
                        (
                            [0] => operation('+',3,3)=6
                            [1] => operation('-',3,3)=0
                            [2] => operation('/',3,3)=1
                            [3] => operation('*',3,3)=9
                            [4] => operation('%',3,3)=0
                            [5] => operation('?',3,3)="error"
                            [6] => operation('hi',3,3)="error"
                        )

                )

            [1] => Array
                (
                    [qId] => 2
                    [text] => def strMult(s, n):
    return s * n
                    [tests] => Array
                        (
                            [0] => strMult("hello",1)=hello
                            [1] => strMult("up", 4)=upupupup
                            [2] => strMult("hey", 3)=heyheyhey
                            [3] => strMult("aba", 2)=abaaba
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 1
            [text] => def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
            [tests] => Array
                (
                    [0] => operation('+',3,3)=6
                    [1] => operation('-',3,3)=0
                    [2] => operation('/',3,3)=1
                    [3] => operation('*',3,3)=9
                    [4] => operation('%',3,3)=0
                    [5] => operation('?',3,3)="error"
                    [6] => operation('hi',3,3)="error"
                )

        )

    [1] => Array
        (
            [qId] => 2
            [text] => def strMult(s, n):
    return s * n
            [tests] => Array
                (
                    [0] => strMult("hello",1)=hello
                    [1] => strMult("up", 4)=upupupup
                    [2] => strMult("hey", 3)=heyheyhey
                    [3] => strMult("aba", 2)=abaaba
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 1
+ clearning the python file for 1
def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => gp missing colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => g5p missing colon [:] in user answer
    [points] => 120
    [max] => 5
)

+ operating funcom for userAnswer: def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ function was not found at all in the user answer
+ returning the correct function : operation
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => bp expecting function name [operation] in answer was not found!
    [subpoints] => .05
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => b6p expecting function name [operation] in answer was not found!
    [points] => 114
    [max] => 5
)

+ replacing def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b  with operation
+ funrep() called, old answer: def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ funrep() called, new answer: def operation(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ writing correct answer to python file: def operation(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ current testcase :  operation('+',3,3)=6
+ current function : operation('+',3,3)
+ printout : print(operation('+',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
)

+ now we are writing the testcase function operation('+',3,3) on the python file : 
substr failed at getOut()+ current testcase :  operation('-',3,3)=0
+ current function : operation('-',3,3)
+ printout : print(operation('-',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
)

+ now we are writing the testcase function operation('-',3,3) on the python file : 
+ current testcase :  operation('/',3,3)=1
+ current function : operation('/',3,3)
+ printout : print(operation('/',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
)

+ now we are writing the testcase function operation('/',3,3) on the python file : 
+ current testcase :  operation('*',3,3)=9
+ current function : operation('*',3,3)
+ printout : print(operation('*',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
)

+ now we are writing the testcase function operation('*',3,3) on the python file : 
substr failed at getOut()+ current testcase :  operation('%',3,3)=0
+ current function : operation('%',3,3)
+ printout : print(operation('%',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
)

+ now we are writing the testcase function operation('%',3,3) on the python file : 
+ current testcase :  operation('?',3,3)="error"
+ current function : operation('?',3,3)
+ printout : print(operation('?',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
    [5] => "error"
)

+ now we are writing the testcase function operation('?',3,3) on the python file : 
+ current testcase :  operation('hi',3,3)="error"
+ current function : operation('hi',3,3)
+ printout : print(operation('hi',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
    [5] => "error"
    [6] => "error"
)

+ now we are writing the testcase function operation('hi',3,3) on the python file : 
+ running execom() with pars for id : 2, qId : 1
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def operation(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
print(operation('+',3,3))
print(operation('-',3,3))
print(operation('/',3,3))
print(operation('*',3,3))
print(operation('%',3,3))
print(operation('?',3,3))
print(operation('hi',3,3))
+ exec() failed. returning 0. function did not match testcase or program syntax errors 		
+ execom failed. pls check logs. 
+ execom failed. pls check logs. 
+ calling updatePoints() to provide feedback
+ bp user program failed to execute. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => bp user program failed to execute. 
    [subpoints] => .8
    [max] => 80
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => b91.2p user program failed to execute. 
    [points] => 23
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => b91.2p user program failed to execute. 
    [points] => 23
    [max] => 80
)

+  page accessed by getCons 2019-04-12 10:55:35pm
+ received data : 
Array
(
    [qId] => 1
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(1) failed
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 2
+ clearning the python file for 2
def strMult(s, n):
    return s * n
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => gp missing colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g5p missing colon [:] in user answer
    [points] => 120
    [max] => 5
)

+ operating funcom for userAnswer: def strMult(s, n):
    return s * n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s * n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s * n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s * n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s * n
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => np expecting function [strMult] in answer found!
    [subpoints] => 0
    [max] => 5
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => n0p expecting function [strMult] in answer found!
    [points] => 120
    [max] => 5
)

+ writing answer to python file: def strMult(s, n):
    return s * n
+ current testcase :  strMult("hello",1)=hello
+ current function : strMult("hello",1)
+ printout : print(strMult("hello",1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
)

+ now we are writing the testcase function strMult("hello",1) on the python file : 
+ current testcase :  strMult("up", 4)=upupupup
+ current function : strMult("up", 4)
+ printout : print(strMult("up", 4))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
)

+ now we are writing the testcase function strMult("up", 4) on the python file : 
+ current testcase :  strMult("hey", 3)=heyheyhey
+ current function : strMult("hey", 3)
+ printout : print(strMult("hey", 3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
    [2] => heyheyhey
)

+ now we are writing the testcase function strMult("hey", 3) on the python file : 
+ current testcase :  strMult("aba", 2)=abaaba
+ current function : strMult("aba", 2)
+ printout : print(strMult("aba", 2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
    [2] => heyheyhey
    [3] => abaaba
)

+ now we are writing the testcase function strMult("aba", 2) on the python file : 
+ running execom() with pars for id : 2, qId : 2
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def strMult(s, n):
    return s * n
print(strMult("hello",1))
print(strMult("up", 4))
print(strMult("hey", 3))
print(strMult("aba", 2))
+ running execom() with pars for id : 2, qId : 2
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def strMult(s, n):
    return s * n
print(strMult("hello",1))
print(strMult("up", 4))
print(strMult("hey", 3))
print(strMult("aba", 2))
+ comparing strMult("hello",1)=hello with output : hello
+ comparing c: hello with output : hello
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("hello",1)], expected: [hello], got user answer [hello]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => gp called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 120
    [max] => 20
)

+ comparing strMult("up", 4)=upupupup with output : upupupup
+ comparing c: upupupup with output : upupupup
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => gp called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [points] => 120
    [max] => 20
)

+ comparing strMult("hey", 3)=heyheyhey with output : heyheyhey
+ comparing c: heyheyhey with output : heyheyhey
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => gp called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [points] => 120
    [max] => 20
)

+ comparing strMult("aba", 2)=abaaba with output : abaaba
+ comparing c: abaaba with output : abaaba
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => gp called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
    [subpoints] => 0
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
    [points] => 120
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => n0p user program succesfully executed. 
    [points] => 120
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => n0p user program succesfully executed. 
    [points] => 120
    [max] => 80
)

+  page accessed by getCons 2019-04-12 10:55:36pm
+ received data : 
Array
(
    [qId] => 2
)

+ getCons() in backend  was succesful. data: 
{"cons":["for","print"]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
    [0] => for
    [1] => print
)

+ getCons (2) success:
Array
(
    [0] => for
    [1] => print
)

+ checkCons() is checking if constraints are found in user answer
+ checkCons() did not find for in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => bp constraint [for]  was not found.
    [subpoints] => .2
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => b24p constraint [for]  was not found.
    [points] => 96
    [max] => 20
)

+ checkCons() did not find print in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => bp constraint [print]  was not found.
    [subpoints] => .2
    [max] => 20
)

error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => b19.2p constraint [print]  was not found.
    [points] => 77
    [max] => 20
)

+ checkCons() was succesful at test 2, qid 2
[+] page accessed AUTOGRADER 2019-04-12 10:55:44pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 122282
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 10:56:22pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 122904
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 10:56:40pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 123526
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 10:56:43pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 124148
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-12 11:05:42pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 124770
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 03:25:38am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 125392
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 03:25:51am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 126014
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 03:31:40am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 126636
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 03:31:48am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 127258
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 03:52:48am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 127880
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 03:52:59am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 128502
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 03:53:04am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 129124
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 03:53:07am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 129746
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 03:53:12am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 130368
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 03:53:22am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 130990
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 03:57:19am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 131612
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 03:57:31am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 132234
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 03:58:23am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 132856
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 03:58:44am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 133478
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 03:59:04am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 134100
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 03:59:16am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 134722
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 04:00:55am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 135344
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 04:01:45am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 135966
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 04:02:00am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 136588
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 04:02:03am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 137210
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 04:04:37am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 137832
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 04:04:42am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 138454
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 04:05:11am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 139076
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 04:05:14am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 139698
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 04:06:19am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 140320
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 04:07:34am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 140942
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 07:55:57am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 141564
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 08:08:34am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 142186
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 08:52:06am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 142808
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 09:14:30am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 143430
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 09:14:52am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 144052
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 09:25:37am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 144674
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 09:25:52am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 145296
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 09:29:06am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 145918
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 09:53:22am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 146540
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 09:54:59am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 147162
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 09:58:26am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 147784
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 06:28:57pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 148406
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 06:45:00pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 149028
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-13 06:47:06pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 149650
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-14 01:14:20pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 150272
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-16 01:18:51am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 150894
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-16 01:18:59am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 151516
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-17 10:32:02am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 152138
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-17 10:32:52am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 152760
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-17 10:33:39am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 153382
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-17 10:43:08am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 154004
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-17 01:02:24pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 154626
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-17 01:02:32pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 155248
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-17 01:02:36pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 155870
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-17 01:02:40pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 156492
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-17 01:02:45pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 157114
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-17 01:02:47pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 157736
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-17 09:12:52pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 158358
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-17 09:14:21pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 158980
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-17 09:14:26pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 159602
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-18 03:55:09pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 160224
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-18 03:56:24pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 160846
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-18 06:59:00pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 161468
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-18 07:08:13pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 162090
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-18 07:21:10pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 162712
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-18 07:22:05pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 163334
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-18 07:22:42pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 163956
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-18 07:23:10pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 164578
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-18 07:24:10pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 165200
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-18 07:24:14pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 165822
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-18 07:25:41pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 166444
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-18 07:39:13pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 167066
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-18 07:39:44pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 167688
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ an array of submittedTests: 
Array
(
)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
[+] page accessed AUTOGRADER 2019-04-19 02:45:50pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 168310
+ called checkGrade for testId . 1
[+] page accessed AUTOGRADER 2019-04-19 02:46:48pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 168545
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 02:48:50pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 169107
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 02:48:53pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 169669
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 02:49:02pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 170231
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:02:03pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 170793
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)="six"
                            [1] => stringSub(9, 9)="zero"
                            [2] => stringSub(50,9)="fourty-nine"
                            [3] => stringSub(5,2)="three"
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c):
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)="six"
                    [1] => stringSub(9, 9)="zero"
                    [2] => stringSub(50,9)="fourty-nine"
                    [3] => stringSub(5,2)="three"
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c):
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp missing colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'g5p missing co' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'g5p missing co' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'g5p missing co' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => g5p missing colon [:] in user answer
    [points] => 10
    [max] => 5
)

+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function [stringSub] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'n0p expecting ' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'n0p expecting ' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'n0p expecting ' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => n0p expecting function [stringSub] in answer found!
    [points] => 10
    [max] => 5
)

+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)="six"
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "six"
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)="zero"
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "six"
    [1] => "zero"
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)="fourty-nine"
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "six"
    [1] => "zero"
    [2] => "fourty-nine"
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)="three"
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "six"
    [1] => "zero"
    [2] => "fourty-nine"
    [3] => "three"
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ comparing stringSub(-3, -9)="six" with output : "six"
+ comparing c: six with output : "six"
fail!
+ calling updatePoints() to provide feedback
+ bp called [stringSub(-3, -9)]  expected answer: ["six"], got user answer ["six"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp called [stringSub(-3, -9)]  expected answer: ["six"], got user answer ["six"]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b2p called [st' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b2p called [st' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b2p called [st' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(-3, -9)]  expected answer: ["six"], got user answer ["six"]
    [points] => 8
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b2p called [st' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(-3, -9)]  expected answer: ["six"], got user answer ["six"]
    [points] => 8
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b2p called [st' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(-3, -9)]  expected answer: ["six"], got user answer ["six"]
    [points] => 8
    [max] => 20
)

+ comparing stringSub(9, 9)="zero" with output : "zero"
+ comparing c: zero with output : "zero"
fail!
+ calling updatePoints() to provide feedback
+ bp called [stringSub(9, 9)]  expected answer: ["zero"], got user answer ["zero"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp called [stringSub(9, 9)]  expected answer: ["zero"], got user answer ["zero"]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b1.6p called [' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b1.6p called [' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b1.6p called [' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b1.6p called [stringSub(9, 9)]  expected answer: ["zero"], got user answer ["zero"]
    [points] => 6
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b1.6p called [' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b1.6p called [stringSub(9, 9)]  expected answer: ["zero"], got user answer ["zero"]
    [points] => 6
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b1.6p called [' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b1.6p called [stringSub(9, 9)]  expected answer: ["zero"], got user answer ["zero"]
    [points] => 6
    [max] => 20
)

+ comparing stringSub(50,9)="fourty-nine" with output : "fourty-nine"
+ comparing c: nothing with output : "fourty-nine"
fail!
+ calling updatePoints() to provide feedback
+ bp called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b1.2p called [' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b1.2p called [' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b1.2p called [' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b1.2p called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
    [points] => 5
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b1.2p called [' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b1.2p called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
    [points] => 5
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b1.2p called [' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b1.2p called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
    [points] => 5
    [max] => 20
)

+ comparing stringSub(5,2)="three" with output : "three"
+ comparing c: three with output : "three"
fail!
+ calling updatePoints() to provide feedback
+ bp called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b1p called [st' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b1p called [st' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b1p called [st' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b1p called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
    [points] => 4
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'b1p called [st' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b1p called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
    [points] => 4
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'n0p user progr' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'n0p user progr' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'n0p user progr' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 4
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6',
    'n0p user progr' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 4
    [max] => 80
)

+  page accessed by getCons 2019-04-19 03:02:05pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp missing colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g5p missing co' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g5p missing co' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g5p missing co' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g5p missing colon [:] in user answer
    [points] => 10
    [max] => 5
)

+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function [addThree] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'n0p expecting ' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'n0p expecting ' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'n0p expecting ' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => n0p expecting function [addThree] in answer found!
    [points] => 10
    [max] => 5
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(100, 200, 300)], expected: [600], got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 10
    [max] => 20
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 10
    [max] => 20
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 10
    [max] => 20
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(1,2,3)], expected: [6], got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(1,2,3)], expected: [6], got user answer [6]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 10
    [max] => 20
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(4,5,6)], expected: [15], got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(4,5,6)], expected: [15], got user answer [15]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(4,5,6)], expected: [15], got user answer [15]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'g20p called [a' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(4,5,6)], expected: [15], got user answer [15]
    [points] => 10
    [max] => 20
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'n0p user progr' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'n0p user progr' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'n0p user progr' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 10
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3',
    'n0p user progr' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 10
    [max] => 80
)

+  page accessed by getCons 2019-04-19 03:02:06pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed
[+] page accessed AUTOGRADER 2019-04-19 03:02:11pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 215349
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:02:21pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 216057
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:02:28pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 216765
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:02:30pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 217473
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:02:32pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 218181
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:11:50pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 218889
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)="six"
                            [1] => stringSub(9, 9)="zero"
                            [2] => stringSub(50,9)="fourty-nine"
                            [3] => stringSub(5,2)="three"
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c):
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)="six"
                    [1] => stringSub(9, 9)="zero"
                    [2] => stringSub(50,9)="fourty-nine"
                    [3] => stringSub(5,2)="three"
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c):
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp missing colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','g5p missing colon [:' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','g5p missing colon [:' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','g5p missing colon [:' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => g5p missing colon [:] in user answer
    [points] => 10
    [max] => 5
)

+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function [stringSub] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','n0p expecting functi' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','n0p expecting functi' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','n0p expecting functi' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => n0p expecting function [stringSub] in answer found!
    [points] => 10
    [max] => 5
)

+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)="six"
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "six"
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)="zero"
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "six"
    [1] => "zero"
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)="fourty-nine"
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "six"
    [1] => "zero"
    [2] => "fourty-nine"
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)="three"
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "six"
    [1] => "zero"
    [2] => "fourty-nine"
    [3] => "three"
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ comparing stringSub(-3, -9)="six" with output : "six"
+ comparing c: six with output : "six"
fail!
+ calling updatePoints() to provide feedback
+ bp called [stringSub(-3, -9)]  expected answer: ["six"], got user answer ["six"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp called [stringSub(-3, -9)]  expected answer: ["six"], got user answer ["six"]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b2p called [stringSu' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b2p called [stringSu' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b2p called [stringSu' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(-3, -9)]  expected answer: ["six"], got user answer ["six"]
    [points] => 8
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b2p called [stringSu' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(-3, -9)]  expected answer: ["six"], got user answer ["six"]
    [points] => 8
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b2p called [stringSu' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(-3, -9)]  expected answer: ["six"], got user answer ["six"]
    [points] => 8
    [max] => 20
)

+ comparing stringSub(9, 9)="zero" with output : "zero"
+ comparing c: zero with output : "zero"
fail!
+ calling updatePoints() to provide feedback
+ bp called [stringSub(9, 9)]  expected answer: ["zero"], got user answer ["zero"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp called [stringSub(9, 9)]  expected answer: ["zero"], got user answer ["zero"]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b1.6p called [string' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b1.6p called [string' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b1.6p called [string' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b1.6p called [stringSub(9, 9)]  expected answer: ["zero"], got user answer ["zero"]
    [points] => 6
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b1.6p called [string' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b1.6p called [stringSub(9, 9)]  expected answer: ["zero"], got user answer ["zero"]
    [points] => 6
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b1.6p called [string' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b1.6p called [stringSub(9, 9)]  expected answer: ["zero"], got user answer ["zero"]
    [points] => 6
    [max] => 20
)

+ comparing stringSub(50,9)="fourty-nine" with output : "fourty-nine"
+ comparing c: nothing with output : "fourty-nine"
fail!
+ calling updatePoints() to provide feedback
+ bp called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b1.2p called [string' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b1.2p called [string' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b1.2p called [string' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b1.2p called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
    [points] => 5
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b1.2p called [string' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b1.2p called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
    [points] => 5
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b1.2p called [string' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b1.2p called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
    [points] => 5
    [max] => 20
)

+ comparing stringSub(5,2)="three" with output : "three"
+ comparing c: three with output : "three"
fail!
+ calling updatePoints() to provide feedback
+ bp called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b1p called [stringSu' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b1p called [stringSu' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b1p called [stringSu' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b1p called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
    [points] => 4
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','b1p called [stringSu' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => b1p called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
    [points] => 4
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','n0p user program suc' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','n0p user program suc' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','n0p user program suc' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 4
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '6','n0p user program suc' at line 1 
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 4
    [max] => 80
)

+  page accessed by getCons 2019-04-19 03:11:52pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp missing colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g5p missing colon [:' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g5p missing colon [:' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g5p missing colon [:' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g5p missing colon [:] in user answer
    [points] => 10
    [max] => 5
)

+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function [addThree] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','n0p expecting functi' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','n0p expecting functi' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','n0p expecting functi' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => n0p expecting function [addThree] in answer found!
    [points] => 10
    [max] => 5
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(100, 200, 300)], expected: [600], got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 10
    [max] => 20
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 10
    [max] => 20
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 10
    [max] => 20
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(1,2,3)], expected: [6], got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(1,2,3)], expected: [6], got user answer [6]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 10
    [max] => 20
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(4,5,6)], expected: [15], got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(4,5,6)], expected: [15], got user answer [15]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(4,5,6)], expected: [15], got user answer [15]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','g20p called [addThre' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(4,5,6)], expected: [15], got user answer [15]
    [points] => 10
    [max] => 20
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
updatePoints SQL : sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','n0p user program suc' at line 1 
error: sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','n0p user program suc' at line 1 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','n0p user program suc' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 10
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'index, testId, questionId, feedback) VALUES ('1', '4', '3','n0p user program suc' at line 1 
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 10
    [max] => 80
)

+  page accessed by getCons 2019-04-19 03:11:53pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed
[+] page accessed AUTOGRADER 2019-04-19 03:12:03pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 263445
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
+ updatePoints() 2 was called. Received:  

+ modA was able to retrieve all rows from feedback for testId =  and qId = 
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 
    [qId] => 
    [feedback] => 
    [points] => 
    [max] => 
)

+ updatePoints() 2 was called. Received:  

+ modA was able to retrieve all rows from feedback for testId =  and qId = 
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 
    [qId] => 
    [feedback] => 
    [points] => 
    [max] => 
)

[+] page accessed AUTOGRADER 2019-04-19 03:17:12pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 264797
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)="six"
                            [1] => stringSub(9, 9)="zero"
                            [2] => stringSub(50,9)="fourty-nine"
                            [3] => stringSub(5,2)="three"
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c):
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)="six"
                    [1] => stringSub(9, 9)="zero"
                    [2] => stringSub(50,9)="fourty-nine"
                    [3] => stringSub(5,2)="three"
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c):
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp missing colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g5p missing colon [:] in user answer
    [points] => 10
    [max] => 5
)

+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function [stringSub] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p expecting function [stringSub] in answer found!
    [points] => 10
    [max] => 5
)

+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)="six"
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "six"
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)="zero"
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "six"
    [1] => "zero"
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)="fourty-nine"
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "six"
    [1] => "zero"
    [2] => "fourty-nine"
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)="three"
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => "six"
    [1] => "zero"
    [2] => "fourty-nine"
    [3] => "three"
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ comparing stringSub(-3, -9)="six" with output : "six"
+ comparing c: six with output : "six"
fail!
+ calling updatePoints() to provide feedback
+ bp called [stringSub(-3, -9)]  expected answer: ["six"], got user answer ["six"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp called [stringSub(-3, -9)]  expected answer: ["six"], got user answer ["six"]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(-3, -9)]  expected answer: ["six"], got user answer ["six"]
    [points] => 8
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(-3, -9)]  expected answer: ["six"], got user answer ["six"]
    [points] => 8
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(-3, -9)]  expected answer: ["six"], got user answer ["six"]
    [points] => 8
    [max] => 20
)

+ comparing stringSub(9, 9)="zero" with output : "zero"
+ comparing c: zero with output : "zero"
fail!
+ calling updatePoints() to provide feedback
+ bp called [stringSub(9, 9)]  expected answer: ["zero"], got user answer ["zero"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp called [stringSub(9, 9)]  expected answer: ["zero"], got user answer ["zero"]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b1.6p called [stringSub(9, 9)]  expected answer: ["zero"], got user answer ["zero"]
    [points] => 6
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b1.6p called [stringSub(9, 9)]  expected answer: ["zero"], got user answer ["zero"]
    [points] => 6
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b1.6p called [stringSub(9, 9)]  expected answer: ["zero"], got user answer ["zero"]
    [points] => 6
    [max] => 20
)

+ comparing stringSub(50,9)="fourty-nine" with output : "fourty-nine"
+ comparing c: nothing with output : "fourty-nine"
fail!
+ calling updatePoints() to provide feedback
+ bp called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b1.2p called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
    [points] => 5
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b1.2p called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
    [points] => 5
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b1.2p called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
    [points] => 5
    [max] => 20
)

+ comparing stringSub(5,2)="three" with output : "three"
+ comparing c: three with output : "three"
fail!
+ calling updatePoints() to provide feedback
+ bp called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b1p called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
    [points] => 4
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b1p called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
    [points] => 4
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 4
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 4
    [max] => 80
)

+  page accessed by getCons 2019-04-19 03:17:15pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp missing colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g5p missing colon [:] in user answer
    [points] => 10
    [max] => 5
)

+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function [addThree] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p expecting function [addThree] in answer found!
    [points] => 10
    [max] => 5
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(100, 200, 300)], expected: [600], got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 10
    [max] => 20
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 10
    [max] => 20
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 10
    [max] => 20
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(1,2,3)], expected: [6], got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(1,2,3)], expected: [6], got user answer [6]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 10
    [max] => 20
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(4,5,6)], expected: [15], got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(4,5,6)], expected: [15], got user answer [15]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(4,5,6)], expected: [15], got user answer [15]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(4,5,6)], expected: [15], got user answer [15]
    [points] => 10
    [max] => 20
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 10
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 10
    [max] => 80
)

+  page accessed by getCons 2019-04-19 03:17:17pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed
[+] page accessed AUTOGRADER 2019-04-19 03:17:22pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 294548
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:18:43pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 295256
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:20:46pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 295964
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:20:51pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 296672
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:20:54pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 297380
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:20:56pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 298088
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:20:57pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 298796
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:21:01pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 299504
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:21:05pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 300212
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:21:07pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 300920
+ called checkGrade for testId . 1
[+] page accessed AUTOGRADER 2019-04-19 03:21:09pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 301155
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:21:25pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 301863
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)=six
                            [1] => stringSub(9, 9)=zero
                            [2] => stringSub(50,9)="fourty-nine"
                            [3] => stringSub(5,2)="three"
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c):
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)=six
                    [1] => stringSub(9, 9)=zero
                    [2] => stringSub(50,9)="fourty-nine"
                    [3] => stringSub(5,2)="three"
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c):
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g5p colon [:] in user answer
    [points] => 10
    [max] => 5
)

+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function [stringSub] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p expecting function [stringSub] in answer found!
    [points] => 10
    [max] => 5
)

+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)=six
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)=zero
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)="fourty-nine"
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => "fourty-nine"
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)="three"
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => "fourty-nine"
    [3] => "three"
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ comparing stringSub(-3, -9)=six with output : six
+ comparing c: six with output : six
pass!
+ calling updatePoints() to provide feedback
+ gp called [stringSub(-3, -9)], expected: [six], got user answer [six]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp called [stringSub(-3, -9)], expected: [six], got user answer [six]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g20p called [stringSub(-3, -9)], expected: [six], got user answer [six]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g20p called [stringSub(-3, -9)], expected: [six], got user answer [six]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g20p called [stringSub(-3, -9)], expected: [six], got user answer [six]
    [points] => 10
    [max] => 20
)

+ comparing stringSub(9, 9)=zero with output : zero
+ comparing c: zero with output : zero
pass!
+ calling updatePoints() to provide feedback
+ gp called [stringSub(9, 9)], expected: [zero], got user answer [zero]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp called [stringSub(9, 9)], expected: [zero], got user answer [zero]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g20p called [stringSub(9, 9)], expected: [zero], got user answer [zero]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g20p called [stringSub(9, 9)], expected: [zero], got user answer [zero]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g20p called [stringSub(9, 9)], expected: [zero], got user answer [zero]
    [points] => 10
    [max] => 20
)

+ comparing stringSub(50,9)="fourty-nine" with output : "fourty-nine"
+ comparing c: nothing with output : "fourty-nine"
fail!
+ calling updatePoints() to provide feedback
+ bp called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
    [points] => 8
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
    [points] => 8
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
    [points] => 8
    [max] => 20
)

+ comparing stringSub(5,2)="three" with output : "three"
+ comparing c: three with output : "three"
fail!
+ calling updatePoints() to provide feedback
+ bp called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b1.6p called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
    [points] => 6
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b1.6p called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
    [points] => 6
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 6
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 6
    [max] => 80
)

+  page accessed by getCons 2019-04-19 03:21:27pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g5p colon [:] in user answer
    [points] => 10
    [max] => 5
)

+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function [addThree] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p expecting function [addThree] in answer found!
    [points] => 10
    [max] => 5
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(100, 200, 300)], expected: [600], got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 10
    [max] => 20
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 10
    [max] => 20
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 10
    [max] => 20
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(1,2,3)], expected: [6], got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(1,2,3)], expected: [6], got user answer [6]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 10
    [max] => 20
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(4,5,6)], expected: [15], got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp called [addThree(4,5,6)], expected: [15], got user answer [15]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(4,5,6)], expected: [15], got user answer [15]
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g20p called [addThree(4,5,6)], expected: [15], got user answer [15]
    [points] => 10
    [max] => 20
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 10
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 10
    [max] => 80
)

+  page accessed by getCons 2019-04-19 03:21:30pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed
[+] page accessed AUTOGRADER 2019-04-19 03:21:33pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 331434
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:29:42pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 332142
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 1
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 1 will now be graded.
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 2
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 2 will now be graded.
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 1
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 4
                            [desc] => Write a function called factorial() which takes one integer parameter n, and returns n!. 
                            [topic] => Math Factorial
                            [diff] => 4
                        )

                    [1] => Array
                        (
                            [id] => 2
                            [desc] => Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.
                            [topic] => Printing string
                            [diff] => 3
                        )

                    [2] => Array
                        (
                            [id] => 5
                            [desc] => Write a function called sub() that takes two integers and prints their difference.
                            [topic] => Subtraction
                            [diff] => 1
                        )

                )

        )

    [1] => Array
        (
            [id] => 2
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 1
                            [desc] => Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string "error".
                            [topic] => Operators
                            [diff] => 2
                        )

                    [1] => Array
                        (
                            [id] => 2
                            [desc] => Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.
                            [topic] => Printing string
                            [diff] => 3
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 4
            [1] => 2
            [2] => 5
        )

    [testId] => 1
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 4
                    [text] => def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
                    [tests] => Array
                        (
                            [0] => factorial(2)=2
                            [1] => factorial(5)=120
                            [2] => factorial(3)=6
                            [3] => factorial(1)=1
                        )

                )

            [1] => Array
                (
                    [qId] => 2
                    [text] => def strMult(s, n):
    return s*n
                    [tests] => Array
                        (
                            [0] => strMult("hello",1)=hello
                            [1] => strMult("up", 4)=upupupup
                            [2] => strMult("hey", 3)=heyheyhey
                            [3] => strMult("aba", 2)=abaaba
                        )

                )

            [2] => Array
                (
                    [qId] => 5
                    [text] => def subtract(a,b)
    print a - b
                    [tests] => Array
                        (
                            [0] => sub(3,4)=-1
                            [1] => sub(4,3)=1
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 4
            [text] => def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
            [tests] => Array
                (
                    [0] => factorial(2)=2
                    [1] => factorial(5)=120
                    [2] => factorial(3)=6
                    [3] => factorial(1)=1
                )

        )

    [1] => Array
        (
            [qId] => 2
            [text] => def strMult(s, n):
    return s*n
            [tests] => Array
                (
                    [0] => strMult("hello",1)=hello
                    [1] => strMult("up", 4)=upupupup
                    [2] => strMult("hey", 3)=heyheyhey
                    [3] => strMult("aba", 2)=abaaba
                )

        )

    [2] => Array
        (
            [qId] => 5
            [text] => def subtract(a,b)
    print a - b
            [tests] => Array
                (
                    [0] => sub(3,4)=-1
                    [1] => sub(4,3)=1
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 4
+ clearning the python file for 4
def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 4
    [feedback] => g5p colon [:] in user answer
    [points] => 25
    [max] => 5
)

+ operating funcom for userAnswer: def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ obtained function factorial with funcom()
+ finding if factorial is in user answer def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ obtained function factorial with funcom()
+ finding if factorial is in user answer def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ obtained function factorial with funcom()
+ finding if factorial is in user answer def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ obtained function factorial with funcom()
+ finding if factorial is in user answer def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => np expecting function [factorial] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 4
    [feedback] => n0p expecting function [factorial] in answer found!
    [points] => 25
    [max] => 5
)

+ writing answer to python file: def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ current testcase :  factorial(2)=2
+ current function : factorial(2)
+ printout : print(factorial(2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 2
)

+ now we are writing the testcase function factorial(2) on the python file : 
+ current testcase :  factorial(5)=120
+ current function : factorial(5)
+ printout : print(factorial(5))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 2
    [1] => 120
)

+ now we are writing the testcase function factorial(5) on the python file : 
+ current testcase :  factorial(3)=6
+ current function : factorial(3)
+ printout : print(factorial(3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 2
    [1] => 120
    [2] => 6
)

+ now we are writing the testcase function factorial(3) on the python file : 
+ current testcase :  factorial(1)=1
+ current function : factorial(1)
+ printout : print(factorial(1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 2
    [1] => 120
    [2] => 6
    [3] => 1
)

+ now we are writing the testcase function factorial(1) on the python file : 
+ running execom() with pars for id : 1, qId : 4
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
print(factorial(2))
print(factorial(5))
print(factorial(3))
print(factorial(1))
+ running execom() with pars for id : 1, qId : 4
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
print(factorial(2))
print(factorial(5))
print(factorial(3))
print(factorial(1))
+ comparing factorial(2)=2 with output : 2
+ comparing c: 2 with output : 2
pass!
+ calling updatePoints() to provide feedback
+ gp called [factorial(2)], expected: [2], got user answer [2]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => gp called [factorial(2)], expected: [2], got user answer [2]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(2)], expected: [2], got user answer [2]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(2)], expected: [2], got user answer [2]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(2)], expected: [2], got user answer [2]
    [points] => 25
    [max] => 20
)

+ comparing factorial(5)=120 with output : 120
+ comparing c: 120 with output : 120
pass!
+ calling updatePoints() to provide feedback
+ gp called [factorial(5)], expected: [120], got user answer [120]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => gp called [factorial(5)], expected: [120], got user answer [120]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(5)], expected: [120], got user answer [120]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(5)], expected: [120], got user answer [120]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(5)], expected: [120], got user answer [120]
    [points] => 25
    [max] => 20
)

+ comparing factorial(3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp called [factorial(3)], expected: [6], got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => gp called [factorial(3)], expected: [6], got user answer [6]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(3)], expected: [6], got user answer [6]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(3)], expected: [6], got user answer [6]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(3)], expected: [6], got user answer [6]
    [points] => 25
    [max] => 20
)

+ comparing factorial(1)=1 with output : 1
+ comparing c: 1 with output : 1
pass!
+ calling updatePoints() to provide feedback
+ gp called [factorial(1)], expected: [1], got user answer [1]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => gp called [factorial(1)], expected: [1], got user answer [1]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(1)], expected: [1], got user answer [1]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(1)], expected: [1], got user answer [1]
    [points] => 25
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 4
    [feedback] => n0p user program succesfully executed. 
    [points] => 25
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 4
    [feedback] => n0p user program succesfully executed. 
    [points] => 25
    [max] => 80
)

+  page accessed by getCons 2019-04-19 03:29:45pm
+ received data : 
Array
(
    [qId] => 4
)

+ getCons() in backend  was succesful. data: 
{"cons":["while"]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
    [0] => while
)

+ getCons (4) success:
Array
(
    [0] => while
)

+ checkCons() is checking if constraints are found in user answer
+ checkCons() did not find while in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => bp constraint [while]  was not found.
    [subpoints] => .2
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 4
    [feedback] => b5p constraint [while]  was not found.
    [points] => 20
    [max] => 20
)

+ checkCons() was succesful at test 1, qid 4
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 2
+ clearning the python file for 2
def strMult(s, n):
    return s*n
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 2
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 2
    [feedback] => g5p colon [:] in user answer
    [points] => 50
    [max] => 5
)

+ operating funcom for userAnswer: def strMult(s, n):
    return s*n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s*n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s*n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s*n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s*n
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => np expecting function [strMult] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 2
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 2
    [feedback] => n0p expecting function [strMult] in answer found!
    [points] => 50
    [max] => 5
)

+ writing answer to python file: def strMult(s, n):
    return s*n
+ current testcase :  strMult("hello",1)=hello
+ current function : strMult("hello",1)
+ printout : print(strMult("hello",1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
)

+ now we are writing the testcase function strMult("hello",1) on the python file : 
+ current testcase :  strMult("up", 4)=upupupup
+ current function : strMult("up", 4)
+ printout : print(strMult("up", 4))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
)

+ now we are writing the testcase function strMult("up", 4) on the python file : 
+ current testcase :  strMult("hey", 3)=heyheyhey
+ current function : strMult("hey", 3)
+ printout : print(strMult("hey", 3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
    [2] => heyheyhey
)

+ now we are writing the testcase function strMult("hey", 3) on the python file : 
+ current testcase :  strMult("aba", 2)=abaaba
+ current function : strMult("aba", 2)
+ printout : print(strMult("aba", 2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
    [2] => heyheyhey
    [3] => abaaba
)

+ now we are writing the testcase function strMult("aba", 2) on the python file : 
+ running execom() with pars for id : 1, qId : 2
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def strMult(s, n):
    return s*n
print(strMult("hello",1))
print(strMult("up", 4))
print(strMult("hey", 3))
print(strMult("aba", 2))
+ running execom() with pars for id : 1, qId : 2
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def strMult(s, n):
    return s*n
print(strMult("hello",1))
print(strMult("up", 4))
print(strMult("hey", 3))
print(strMult("aba", 2))
+ comparing strMult("hello",1)=hello with output : hello
+ comparing c: hello with output : hello
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("hello",1)], expected: [hello], got user answer [hello]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => gp called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 2
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 50
    [max] => 20
)

+ comparing strMult("up", 4)=upupupup with output : upupupup
+ comparing c: upupupup with output : upupupup
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => gp called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 2
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [points] => 50
    [max] => 20
)

+ comparing strMult("hey", 3)=heyheyhey with output : heyheyhey
+ comparing c: heyheyhey with output : heyheyhey
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => gp called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 2
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [points] => 50
    [max] => 20
)

+ comparing strMult("aba", 2)=abaaba with output : abaaba
+ comparing c: abaaba with output : abaaba
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => gp called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 2
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
    [points] => 50
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 2
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 2
    [feedback] => n0p user program succesfully executed. 
    [points] => 50
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 2
    [feedback] => n0p user program succesfully executed. 
    [points] => 50
    [max] => 80
)

+  page accessed by getCons 2019-04-19 03:29:47pm
+ received data : 
Array
(
    [qId] => 2
)

+ getCons() in backend  was succesful. data: 
{"cons":["for","print"]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
    [0] => for
    [1] => print
)

+ getCons (2) success:
Array
(
    [0] => for
    [1] => print
)

+ checkCons() is checking if constraints are found in user answer
+ checkCons() did not find for in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => bp constraint [for]  was not found.
    [subpoints] => .2
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 2
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 2
    [feedback] => b10p constraint [for]  was not found.
    [points] => 40
    [max] => 20
)

+ checkCons() did not find print in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => bp constraint [print]  was not found.
    [subpoints] => .2
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 2
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 2
    [feedback] => b8p constraint [print]  was not found.
    [points] => 32
    [max] => 20
)

+ checkCons() was succesful at test 1, qid 2
counter is 3
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 5
+ clearning the python file for 5
+ colon was not found in user answer
+ new answer: 
 def subtract(a,b):
    print a - b
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 5
    [feedback] => bp missing colon [:] in user answer
    [subpoints] => .05
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 5
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 5
    [feedback] => b1.25p missing colon [:] in user answer
    [points] => 24
    [max] => 5
)

+ operating funcom for userAnswer: def subtract(a,b):
    print a - b
+ obtained function sub with funcom()
+ finding if sub is in user answer def subtract(a,b):
    print a - b
+ obtained function sub with funcom()
+ finding if sub is in user answer def subtract(a,b):
    print a - b
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 5
    [feedback] => np expecting function [sub] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 5
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 5
    [feedback] => n0p expecting function [sub] in answer found!
    [points] => 24
    [max] => 5
)

+ writing answer to python file: def subtract(a,b):
    print a - b
+ current testcase :  sub(3,4)=-1
+ current function : sub(3,4)
+ printout : print(sub(3,4))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => -1
)

+ now we are writing the testcase function sub(3,4) on the python file : 
+ current testcase :  sub(4,3)=1
+ current function : sub(4,3)
+ printout : print(sub(4,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => -1
    [1] => 1
)

+ now we are writing the testcase function sub(4,3) on the python file : 
+ running execom() with pars for id : 1, qId : 5
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def subtract(a,b):
    print a - b
print(sub(3,4))
print(sub(4,3))
+ exec() failed. returning 0. function did not match testcase or program syntax errors 		
+ execom failed. pls check logs. 
+ execom failed. pls check logs. 
+ calling updatePoints() to provide feedback
+ bp user program failed to execute. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 5
    [feedback] => bp user program failed to execute. 
    [subpoints] => .8
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 5
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 5
    [feedback] => b19.2p user program failed to execute. 
    [points] => 5
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 5
    [feedback] => b19.2p user program failed to execute. 
    [points] => 5
    [max] => 80
)

+  page accessed by getCons 2019-04-19 03:29:49pm
+ received data : 
Array
(
    [qId] => 5
)

+ getCons() in backend  was succesful. data: 
{"cons":["print"]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
    [0] => print
)

+ getCons (5) success:
Array
(
    [0] => print
)

+ checkCons() is checking if constraints are found in user answer
+ checkCons() found print in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 5
    [feedback] => gp constraint [print] was found.
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 5
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 1
    [qId] => 5
    [feedback] => g20p constraint [print] was found.
    [points] => 5
    [max] => 20
)

+ checkCons() was succesful at test 1, qid 5
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 1
            [1] => 2
        )

    [testId] => 2
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 1
                    [text] => def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
                    [tests] => Array
                        (
                            [0] => operation('+',3,3)=6
                            [1] => operation('-',3,3)=0
                            [2] => operation('/',3,3)=1
                            [3] => operation('*',3,3)=9
                            [4] => operation('%',3,3)=0
                            [5] => operation('?',3,3)=error
                            [6] => operation('hi',3,3)=error
                        )

                )

            [1] => Array
                (
                    [qId] => 2
                    [text] => def strMult(s, n):
    return s * n
                    [tests] => Array
                        (
                            [0] => strMult("hello",1)=hello
                            [1] => strMult("up", 4)=upupupup
                            [2] => strMult("hey", 3)=heyheyhey
                            [3] => strMult("aba", 2)=abaaba
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 1
            [text] => def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
            [tests] => Array
                (
                    [0] => operation('+',3,3)=6
                    [1] => operation('-',3,3)=0
                    [2] => operation('/',3,3)=1
                    [3] => operation('*',3,3)=9
                    [4] => operation('%',3,3)=0
                    [5] => operation('?',3,3)=error
                    [6] => operation('hi',3,3)=error
                )

        )

    [1] => Array
        (
            [qId] => 2
            [text] => def strMult(s, n):
    return s * n
            [tests] => Array
                (
                    [0] => strMult("hello",1)=hello
                    [1] => strMult("up", 4)=upupupup
                    [2] => strMult("hey", 3)=heyheyhey
                    [3] => strMult("aba", 2)=abaaba
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 1
+ clearning the python file for 1
def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 1
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 1
    [feedback] => g5p colon [:] in user answer
    [points] => 120
    [max] => 5
)

+ operating funcom for userAnswer: def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ function was not found at all in the user answer
+ returning the correct function : operation
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => bp expecting function name [operation] in answer was not found!
    [subpoints] => .05
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 1
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 1
    [feedback] => b6p expecting function name [operation] in answer was not found!
    [points] => 114
    [max] => 5
)

+ replacing def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b  with operation
+ funrep() called, old answer: def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ funrep() called, new answer: def operation(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ writing correct answer to python file: def operation(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ current testcase :  operation('+',3,3)=6
+ current function : operation('+',3,3)
+ printout : print(operation('+',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
)

+ now we are writing the testcase function operation('+',3,3) on the python file : 
substr failed at getOut()+ current testcase :  operation('-',3,3)=0
+ current function : operation('-',3,3)
+ printout : print(operation('-',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
)

+ now we are writing the testcase function operation('-',3,3) on the python file : 
+ current testcase :  operation('/',3,3)=1
+ current function : operation('/',3,3)
+ printout : print(operation('/',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
)

+ now we are writing the testcase function operation('/',3,3) on the python file : 
+ current testcase :  operation('*',3,3)=9
+ current function : operation('*',3,3)
+ printout : print(operation('*',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
)

+ now we are writing the testcase function operation('*',3,3) on the python file : 
substr failed at getOut()+ current testcase :  operation('%',3,3)=0
+ current function : operation('%',3,3)
+ printout : print(operation('%',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
)

+ now we are writing the testcase function operation('%',3,3) on the python file : 
+ current testcase :  operation('?',3,3)=error
+ current function : operation('?',3,3)
+ printout : print(operation('?',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
    [5] => error
)

+ now we are writing the testcase function operation('?',3,3) on the python file : 
+ current testcase :  operation('hi',3,3)=error
+ current function : operation('hi',3,3)
+ printout : print(operation('hi',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
    [5] => error
    [6] => error
)

+ now we are writing the testcase function operation('hi',3,3) on the python file : 
+ running execom() with pars for id : 2, qId : 1
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def operation(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
print(operation('+',3,3))
print(operation('-',3,3))
print(operation('/',3,3))
print(operation('*',3,3))
print(operation('%',3,3))
print(operation('?',3,3))
print(operation('hi',3,3))
+ exec() failed. returning 0. function did not match testcase or program syntax errors 		
+ execom failed. pls check logs. 
+ execom failed. pls check logs. 
+ calling updatePoints() to provide feedback
+ bp user program failed to execute. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => bp user program failed to execute. 
    [subpoints] => .8
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 1
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 1
    [feedback] => b91.2p user program failed to execute. 
    [points] => 23
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 1
    [feedback] => b91.2p user program failed to execute. 
    [points] => 23
    [max] => 80
)

+  page accessed by getCons 2019-04-19 03:29:50pm
+ received data : 
Array
(
    [qId] => 1
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(1) failed
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 2
+ clearning the python file for 2
def strMult(s, n):
    return s * n
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 2
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 2
    [feedback] => g5p colon [:] in user answer
    [points] => 120
    [max] => 5
)

+ operating funcom for userAnswer: def strMult(s, n):
    return s * n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s * n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s * n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s * n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s * n
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => np expecting function [strMult] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 2
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 2
    [feedback] => n0p expecting function [strMult] in answer found!
    [points] => 120
    [max] => 5
)

+ writing answer to python file: def strMult(s, n):
    return s * n
+ current testcase :  strMult("hello",1)=hello
+ current function : strMult("hello",1)
+ printout : print(strMult("hello",1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
)

+ now we are writing the testcase function strMult("hello",1) on the python file : 
+ current testcase :  strMult("up", 4)=upupupup
+ current function : strMult("up", 4)
+ printout : print(strMult("up", 4))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
)

+ now we are writing the testcase function strMult("up", 4) on the python file : 
+ current testcase :  strMult("hey", 3)=heyheyhey
+ current function : strMult("hey", 3)
+ printout : print(strMult("hey", 3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
    [2] => heyheyhey
)

+ now we are writing the testcase function strMult("hey", 3) on the python file : 
+ current testcase :  strMult("aba", 2)=abaaba
+ current function : strMult("aba", 2)
+ printout : print(strMult("aba", 2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
    [2] => heyheyhey
    [3] => abaaba
)

+ now we are writing the testcase function strMult("aba", 2) on the python file : 
+ running execom() with pars for id : 2, qId : 2
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def strMult(s, n):
    return s * n
print(strMult("hello",1))
print(strMult("up", 4))
print(strMult("hey", 3))
print(strMult("aba", 2))
+ running execom() with pars for id : 2, qId : 2
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def strMult(s, n):
    return s * n
print(strMult("hello",1))
print(strMult("up", 4))
print(strMult("hey", 3))
print(strMult("aba", 2))
+ comparing strMult("hello",1)=hello with output : hello
+ comparing c: hello with output : hello
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("hello",1)], expected: [hello], got user answer [hello]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => gp called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 2
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 120
    [max] => 20
)

+ comparing strMult("up", 4)=upupupup with output : upupupup
+ comparing c: upupupup with output : upupupup
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => gp called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 2
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [points] => 120
    [max] => 20
)

+ comparing strMult("hey", 3)=heyheyhey with output : heyheyhey
+ comparing c: heyheyhey with output : heyheyhey
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => gp called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 2
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [points] => 120
    [max] => 20
)

+ comparing strMult("aba", 2)=abaaba with output : abaaba
+ comparing c: abaaba with output : abaaba
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => gp called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 2
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
    [points] => 120
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 2
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 2
    [feedback] => n0p user program succesfully executed. 
    [points] => 120
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 2
    [feedback] => n0p user program succesfully executed. 
    [points] => 120
    [max] => 80
)

+  page accessed by getCons 2019-04-19 03:29:52pm
+ received data : 
Array
(
    [qId] => 2
)

+ getCons() in backend  was succesful. data: 
{"cons":["for","print"]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
    [0] => for
    [1] => print
)

+ getCons (2) success:
Array
(
    [0] => for
    [1] => print
)

+ checkCons() is checking if constraints are found in user answer
+ checkCons() did not find for in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => bp constraint [for]  was not found.
    [subpoints] => .2
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 2
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 2
    [feedback] => b24p constraint [for]  was not found.
    [points] => 96
    [max] => 20
)

+ checkCons() did not find print in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => bp constraint [print]  was not found.
    [subpoints] => .2
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 2
+ obtained 0 rows
updatePoints SQL : sql Duplicate entry '0' for key 'PRIMARY' 
error: sql Duplicate entry '0' for key 'PRIMARY' 
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => sql Duplicate entry '0' for key 'PRIMARY' 
    [testId] => 2
    [qId] => 2
    [feedback] => b19.2p constraint [print]  was not found.
    [points] => 77
    [max] => 20
)

+ checkCons() was succesful at test 2, qid 2
[+] page accessed AUTOGRADER 2019-04-19 03:29:56pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 394521
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:29:59pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 395229
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:30:08pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 395937
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:30:09pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 396645
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:30:10pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 397353
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:32:58pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 398061
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 1
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 1 will now be graded.
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 2
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 2 will now be graded.
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 1
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 4
                            [desc] => Write a function called factorial() which takes one integer parameter n, and returns n!. 
                            [topic] => Math Factorial
                            [diff] => 4
                        )

                    [1] => Array
                        (
                            [id] => 2
                            [desc] => Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.
                            [topic] => Printing string
                            [diff] => 3
                        )

                    [2] => Array
                        (
                            [id] => 5
                            [desc] => Write a function called sub() that takes two integers and prints their difference.
                            [topic] => Subtraction
                            [diff] => 1
                        )

                )

        )

    [1] => Array
        (
            [id] => 2
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 1
                            [desc] => Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string "error".
                            [topic] => Operators
                            [diff] => 2
                        )

                    [1] => Array
                        (
                            [id] => 2
                            [desc] => Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.
                            [topic] => Printing string
                            [diff] => 3
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 4
            [1] => 2
            [2] => 5
        )

    [testId] => 1
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 4
                    [text] => def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
                    [tests] => Array
                        (
                            [0] => factorial(2)=2
                            [1] => factorial(5)=120
                            [2] => factorial(3)=6
                            [3] => factorial(1)=1
                        )

                )

            [1] => Array
                (
                    [qId] => 2
                    [text] => def strMult(s, n):
    return s*n
                    [tests] => Array
                        (
                            [0] => strMult("hello",1)=hello
                            [1] => strMult("up", 4)=upupupup
                            [2] => strMult("hey", 3)=heyheyhey
                            [3] => strMult("aba", 2)=abaaba
                        )

                )

            [2] => Array
                (
                    [qId] => 5
                    [text] => def subtract(a,b)
    print a - b
                    [tests] => Array
                        (
                            [0] => sub(3,4)=-1
                            [1] => sub(4,3)=1
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 4
            [text] => def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
            [tests] => Array
                (
                    [0] => factorial(2)=2
                    [1] => factorial(5)=120
                    [2] => factorial(3)=6
                    [3] => factorial(1)=1
                )

        )

    [1] => Array
        (
            [qId] => 2
            [text] => def strMult(s, n):
    return s*n
            [tests] => Array
                (
                    [0] => strMult("hello",1)=hello
                    [1] => strMult("up", 4)=upupupup
                    [2] => strMult("hey", 3)=heyheyhey
                    [3] => strMult("aba", 2)=abaaba
                )

        )

    [2] => Array
        (
            [qId] => 5
            [text] => def subtract(a,b)
    print a - b
            [tests] => Array
                (
                    [0] => sub(3,4)=-1
                    [1] => sub(4,3)=1
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 4
+ clearning the python file for 4
def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g5p colon [:] in user answer
    [points] => 25
    [max] => 5
)

+ operating funcom for userAnswer: def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ obtained function factorial with funcom()
+ finding if factorial is in user answer def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ obtained function factorial with funcom()
+ finding if factorial is in user answer def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ obtained function factorial with funcom()
+ finding if factorial is in user answer def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ obtained function factorial with funcom()
+ finding if factorial is in user answer def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => np expecting function [factorial] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => n0p expecting function [factorial] in answer found!
    [points] => 25
    [max] => 5
)

+ writing answer to python file: def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
+ current testcase :  factorial(2)=2
+ current function : factorial(2)
+ printout : print(factorial(2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 2
)

+ now we are writing the testcase function factorial(2) on the python file : 
+ current testcase :  factorial(5)=120
+ current function : factorial(5)
+ printout : print(factorial(5))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 2
    [1] => 120
)

+ now we are writing the testcase function factorial(5) on the python file : 
+ current testcase :  factorial(3)=6
+ current function : factorial(3)
+ printout : print(factorial(3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 2
    [1] => 120
    [2] => 6
)

+ now we are writing the testcase function factorial(3) on the python file : 
+ current testcase :  factorial(1)=1
+ current function : factorial(1)
+ printout : print(factorial(1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 2
    [1] => 120
    [2] => 6
    [3] => 1
)

+ now we are writing the testcase function factorial(1) on the python file : 
+ running execom() with pars for id : 1, qId : 4
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
print(factorial(2))
print(factorial(5))
print(factorial(3))
print(factorial(1))
+ running execom() with pars for id : 1, qId : 4
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
print(factorial(2))
print(factorial(5))
print(factorial(3))
print(factorial(1))
+ comparing factorial(2)=2 with output : 2
+ comparing c: 2 with output : 2
pass!
+ calling updatePoints() to provide feedback
+ gp called [factorial(2)], expected: [2], got user answer [2]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => gp called [factorial(2)], expected: [2], got user answer [2]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(2)], expected: [2], got user answer [2]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(2)], expected: [2], got user answer [2]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(2)], expected: [2], got user answer [2]
    [points] => 25
    [max] => 20
)

+ comparing factorial(5)=120 with output : 120
+ comparing c: 120 with output : 120
pass!
+ calling updatePoints() to provide feedback
+ gp called [factorial(5)], expected: [120], got user answer [120]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => gp called [factorial(5)], expected: [120], got user answer [120]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(5)], expected: [120], got user answer [120]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(5)], expected: [120], got user answer [120]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(5)], expected: [120], got user answer [120]
    [points] => 25
    [max] => 20
)

+ comparing factorial(3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp called [factorial(3)], expected: [6], got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => gp called [factorial(3)], expected: [6], got user answer [6]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(3)], expected: [6], got user answer [6]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(3)], expected: [6], got user answer [6]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(3)], expected: [6], got user answer [6]
    [points] => 25
    [max] => 20
)

+ comparing factorial(1)=1 with output : 1
+ comparing c: 1 with output : 1
pass!
+ calling updatePoints() to provide feedback
+ gp called [factorial(1)], expected: [1], got user answer [1]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => gp called [factorial(1)], expected: [1], got user answer [1]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(1)], expected: [1], got user answer [1]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => g20p called [factorial(1)], expected: [1], got user answer [1]
    [points] => 25
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => n0p user program succesfully executed. 
    [points] => 25
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => n0p user program succesfully executed. 
    [points] => 25
    [max] => 80
)

+  page accessed by getCons 2019-04-19 03:33:00pm
+ received data : 
Array
(
    [qId] => 4
)

+ getCons() in backend  was succesful. data: 
{"cons":["while"]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
    [0] => while
)

+ getCons (4) success:
Array
(
    [0] => while
)

+ checkCons() is checking if constraints are found in user answer
+ checkCons() did not find while in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 4
    [feedback] => bp constraint [while]  was not found.
    [subpoints] => .2
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => b5p constraint [while]  was not found.
    [points] => 20
    [max] => 20
)

+ checkCons() was succesful at test 1, qid 4
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 2
+ clearning the python file for 2
def strMult(s, n):
    return s*n
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 2
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g5p colon [:] in user answer
    [points] => 50
    [max] => 5
)

+ operating funcom for userAnswer: def strMult(s, n):
    return s*n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s*n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s*n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s*n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s*n
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => np expecting function [strMult] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 2
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => n0p expecting function [strMult] in answer found!
    [points] => 50
    [max] => 5
)

+ writing answer to python file: def strMult(s, n):
    return s*n
+ current testcase :  strMult("hello",1)=hello
+ current function : strMult("hello",1)
+ printout : print(strMult("hello",1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
)

+ now we are writing the testcase function strMult("hello",1) on the python file : 
+ current testcase :  strMult("up", 4)=upupupup
+ current function : strMult("up", 4)
+ printout : print(strMult("up", 4))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
)

+ now we are writing the testcase function strMult("up", 4) on the python file : 
+ current testcase :  strMult("hey", 3)=heyheyhey
+ current function : strMult("hey", 3)
+ printout : print(strMult("hey", 3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
    [2] => heyheyhey
)

+ now we are writing the testcase function strMult("hey", 3) on the python file : 
+ current testcase :  strMult("aba", 2)=abaaba
+ current function : strMult("aba", 2)
+ printout : print(strMult("aba", 2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
    [2] => heyheyhey
    [3] => abaaba
)

+ now we are writing the testcase function strMult("aba", 2) on the python file : 
+ running execom() with pars for id : 1, qId : 2
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def strMult(s, n):
    return s*n
print(strMult("hello",1))
print(strMult("up", 4))
print(strMult("hey", 3))
print(strMult("aba", 2))
+ running execom() with pars for id : 1, qId : 2
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def strMult(s, n):
    return s*n
print(strMult("hello",1))
print(strMult("up", 4))
print(strMult("hey", 3))
print(strMult("aba", 2))
+ comparing strMult("hello",1)=hello with output : hello
+ comparing c: hello with output : hello
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("hello",1)], expected: [hello], got user answer [hello]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => gp called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 2
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 50
    [max] => 20
)

+ comparing strMult("up", 4)=upupupup with output : upupupup
+ comparing c: upupupup with output : upupupup
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => gp called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 2
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [points] => 50
    [max] => 20
)

+ comparing strMult("hey", 3)=heyheyhey with output : heyheyhey
+ comparing c: heyheyhey with output : heyheyhey
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => gp called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 2
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [points] => 50
    [max] => 20
)

+ comparing strMult("aba", 2)=abaaba with output : abaaba
+ comparing c: abaaba with output : abaaba
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => gp called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 2
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => g20p called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
    [points] => 50
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 1
    [qId] => 2
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 2
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => n0p user program succesfully executed. 
    [points] => 50
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 2
    [feedback] => n0p user program succesfully executed. 
    [points] => 50
    [max] => 80
)

+  page accessed by getCons 2019-04-19 03:33:02pm
+ received data : 
Array
(
    [qId] => 2
)

+ getCons() in backend  was succesful. data: 
{"cons":["for","print"]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
    [0] => for
    [1] => print
)

+ getCons (2) success:
Array
(
    [0] => for
    [1] => print
)

+ checkCons() is checking if constraints are found in user answer
+ checkCons() did not find for in user answer
[+] page accessed AUTOGRADER 2019-04-19 03:33:02pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 425572
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:33:07pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 426280
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:33:15pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 426988
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:33:19pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 427696
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:34:00pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 428404
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 2
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 2 will now be graded.
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 2
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 1
                            [desc] => Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string "error".
                            [topic] => Operators
                            [diff] => 2
                        )

                    [1] => Array
                        (
                            [id] => 2
                            [desc] => Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.
                            [topic] => Printing string
                            [diff] => 3
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 1
            [1] => 2
        )

    [testId] => 2
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 1
                    [text] => def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
                    [tests] => Array
                        (
                            [0] => operation('+',3,3)=6
                            [1] => operation('-',3,3)=0
                            [2] => operation('/',3,3)=1
                            [3] => operation('*',3,3)=9
                            [4] => operation('%',3,3)=0
                            [5] => operation('?',3,3)=error
                            [6] => operation('hi',3,3)=error
                        )

                )

            [1] => Array
                (
                    [qId] => 2
                    [text] => def strMult(s, n):
    return s * n
                    [tests] => Array
                        (
                            [0] => strMult("hello",1)=hello
                            [1] => strMult("up", 4)=upupupup
                            [2] => strMult("hey", 3)=heyheyhey
                            [3] => strMult("aba", 2)=abaaba
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 1
            [text] => def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
            [tests] => Array
                (
                    [0] => operation('+',3,3)=6
                    [1] => operation('-',3,3)=0
                    [2] => operation('/',3,3)=1
                    [3] => operation('*',3,3)=9
                    [4] => operation('%',3,3)=0
                    [5] => operation('?',3,3)=error
                    [6] => operation('hi',3,3)=error
                )

        )

    [1] => Array
        (
            [qId] => 2
            [text] => def strMult(s, n):
    return s * n
            [tests] => Array
                (
                    [0] => strMult("hello",1)=hello
                    [1] => strMult("up", 4)=upupupup
                    [2] => strMult("hey", 3)=heyheyhey
                    [3] => strMult("aba", 2)=abaaba
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 1
+ clearning the python file for 1
def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 1
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => g5p colon [:] in user answer
    [points] => 120
    [max] => 5
)

+ operating funcom for userAnswer: def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ obtained function operation with funcom()
+ finding if operation is in user answer def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ function was not found at all in the user answer
+ returning the correct function : operation
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => bp expecting function name [operation] in answer was not found!
    [subpoints] => .05
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 1
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => b6p expecting function name [operation] in answer was not found!
    [points] => 114
    [max] => 5
)

+ replacing def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b  with operation
+ funrep() called, old answer: def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ funrep() called, new answer: def operation(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ writing correct answer to python file: def operation(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
+ current testcase :  operation('+',3,3)=6
+ current function : operation('+',3,3)
+ printout : print(operation('+',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
)

+ now we are writing the testcase function operation('+',3,3) on the python file : 
substr failed at getOut()+ current testcase :  operation('-',3,3)=0
+ current function : operation('-',3,3)
+ printout : print(operation('-',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
)

+ now we are writing the testcase function operation('-',3,3) on the python file : 
+ current testcase :  operation('/',3,3)=1
+ current function : operation('/',3,3)
+ printout : print(operation('/',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
)

+ now we are writing the testcase function operation('/',3,3) on the python file : 
+ current testcase :  operation('*',3,3)=9
+ current function : operation('*',3,3)
+ printout : print(operation('*',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
)

+ now we are writing the testcase function operation('*',3,3) on the python file : 
substr failed at getOut()+ current testcase :  operation('%',3,3)=0
+ current function : operation('%',3,3)
+ printout : print(operation('%',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
)

+ now we are writing the testcase function operation('%',3,3) on the python file : 
+ current testcase :  operation('?',3,3)=error
+ current function : operation('?',3,3)
+ printout : print(operation('?',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
    [5] => error
)

+ now we are writing the testcase function operation('?',3,3) on the python file : 
+ current testcase :  operation('hi',3,3)=error
+ current function : operation('hi',3,3)
+ printout : print(operation('hi',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
    [5] => error
    [6] => error
)

+ now we are writing the testcase function operation('hi',3,3) on the python file : 
+ running execom() with pars for id : 2, qId : 1
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def operation(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
print(operation('+',3,3))
print(operation('-',3,3))
print(operation('/',3,3))
print(operation('*',3,3))
print(operation('%',3,3))
print(operation('?',3,3))
print(operation('hi',3,3))
+ exec() failed. returning 0. function did not match testcase or program syntax errors 		
+ execom failed. pls check logs. 
+ execom failed. pls check logs. 
+ calling updatePoints() to provide feedback
+ bp user program failed to execute. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 1
    [feedback] => bp user program failed to execute. 
    [subpoints] => .8
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 1
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => b91.2p user program failed to execute. 
    [points] => 23
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 1
    [feedback] => b91.2p user program failed to execute. 
    [points] => 23
    [max] => 80
)

+  page accessed by getCons 2019-04-19 03:34:01pm
+ received data : 
Array
(
    [qId] => 1
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(1) failed
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 2
+ clearning the python file for 2
def strMult(s, n):
    return s * n
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 2
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g5p colon [:] in user answer
    [points] => 120
    [max] => 5
)

+ operating funcom for userAnswer: def strMult(s, n):
    return s * n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s * n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s * n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s * n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def strMult(s, n):
    return s * n
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => np expecting function [strMult] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 2
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => n0p expecting function [strMult] in answer found!
    [points] => 120
    [max] => 5
)

+ writing answer to python file: def strMult(s, n):
    return s * n
+ current testcase :  strMult("hello",1)=hello
+ current function : strMult("hello",1)
+ printout : print(strMult("hello",1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
)

+ now we are writing the testcase function strMult("hello",1) on the python file : 
+ current testcase :  strMult("up", 4)=upupupup
+ current function : strMult("up", 4)
+ printout : print(strMult("up", 4))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
)

+ now we are writing the testcase function strMult("up", 4) on the python file : 
+ current testcase :  strMult("hey", 3)=heyheyhey
+ current function : strMult("hey", 3)
+ printout : print(strMult("hey", 3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
    [2] => heyheyhey
)

+ now we are writing the testcase function strMult("hey", 3) on the python file : 
+ current testcase :  strMult("aba", 2)=abaaba
+ current function : strMult("aba", 2)
+ printout : print(strMult("aba", 2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
    [2] => heyheyhey
    [3] => abaaba
)

+ now we are writing the testcase function strMult("aba", 2) on the python file : 
+ running execom() with pars for id : 2, qId : 2
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def strMult(s, n):
    return s * n
print(strMult("hello",1))
print(strMult("up", 4))
print(strMult("hey", 3))
print(strMult("aba", 2))
+ running execom() with pars for id : 2, qId : 2
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def strMult(s, n):
    return s * n
print(strMult("hello",1))
print(strMult("up", 4))
print(strMult("hey", 3))
print(strMult("aba", 2))
+ comparing strMult("hello",1)=hello with output : hello
+ comparing c: hello with output : hello
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("hello",1)], expected: [hello], got user answer [hello]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => gp called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 2
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 120
    [max] => 20
)

+ comparing strMult("up", 4)=upupupup with output : upupupup
+ comparing c: upupupup with output : upupupup
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => gp called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 2
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("up", 4)], expected: [upupupup], got user answer [upupupup]
    [points] => 120
    [max] => 20
)

+ comparing strMult("hey", 3)=heyheyhey with output : heyheyhey
+ comparing c: heyheyhey with output : heyheyhey
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => gp called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 2
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("hey", 3)], expected: [heyheyhey], got user answer [heyheyhey]
    [points] => 120
    [max] => 20
)

+ comparing strMult("aba", 2)=abaaba with output : abaaba
+ comparing c: abaaba with output : abaaba
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => gp called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 2
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
    [points] => 120
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => g20p called [strMult("aba", 2)], expected: [abaaba], got user answer [abaaba]
    [points] => 120
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 2
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => n0p user program succesfully executed. 
    [points] => 120
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => n0p user program succesfully executed. 
    [points] => 120
    [max] => 80
)

+  page accessed by getCons 2019-04-19 03:34:03pm
+ received data : 
Array
(
    [qId] => 2
)

+ getCons() in backend  was succesful. data: 
{"cons":["for","print"]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
    [0] => for
    [1] => print
)

+ getCons (2) success:
Array
(
    [0] => for
    [1] => print
)

+ checkCons() is checking if constraints are found in user answer
+ checkCons() did not find for in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => bp constraint [for]  was not found.
    [subpoints] => .2
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 2
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => b24p constraint [for]  was not found.
    [points] => 96
    [max] => 20
)

+ checkCons() did not find print in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 2
    [qId] => 2
    [feedback] => bp constraint [print]  was not found.
    [subpoints] => .2
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 2 and qId = 2
+ obtained 8 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 2
    [qId] => 2
    [feedback] => b19.2p constraint [print]  was not found.
    [points] => 77
    [max] => 20
)

+ checkCons() was succesful at test 2, qid 2
[+] page accessed AUTOGRADER 2019-04-19 03:34:05pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 454035
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:39:31pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 454743
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:40:22pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 455451
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:40:25pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 456159
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:40:28pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 456867
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:40:31pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 457575
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:40:35pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 458283
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:40:41pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 458991
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:41:33pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 459699
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:43:51pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 460407
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:44:03pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 461115
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:44:38pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 461823
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:44:40pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 462531
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:44:42pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 463239
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:44:44pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 463947
[+] page accessed AUTOGRADER 2019-04-19 03:44:44pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 464147
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:45:51pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 465363
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:46:50pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 466071
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:47:06pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 466779
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:47:13pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 467487
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:47:58pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 468195
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:48:01pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 468903
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:48:10pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 469611
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:48:12pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 470319
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-19 03:49:17pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 471027
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-20 10:13:07pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 471735
[+] page accessed AUTOGRADER 2019-04-20 10:13:07pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 471735
[+] page accessed AUTOGRADER 2019-04-20 10:13:07pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 471735
[+] page accessed AUTOGRADER 2019-04-20 10:13:07pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 471735
+ called checkGrade for testId . 1
+ called checkGrade for testId . 1
+ called checkGrade for testId . 1
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ called checkGrade for testId . 2
+ checkGrade returned true . skipping 1
+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ called checkGrade for testId . 2
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ checkGrade returned true . skipping 2
+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ called checkGrade for testId . 4
+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
+ array of submittedTests are empty, returning false and terminating.
+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-20 10:13:19pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 474567
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-20 10:13:31pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 475275
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-20 10:17:52pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 475983
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-20 10:18:07pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 476691
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-20 10:18:09pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 477399
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-20 10:36:41pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 478107
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 5
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 5 will now be graded.
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 5
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 1
                            [desc] => Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string "error".
                            [topic] => Operators
                            [diff] => 2
                        )

                    [1] => Array
                        (
                            [id] => 2
                            [desc] => Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.
                            [topic] => Printing string
                            [diff] => 3
                        )

                    [2] => Array
                        (
                            [id] => 4
                            [desc] => Write a function called factorial() which takes one integer parameter n, and returns n!. 
                            [topic] => Math Factorial
                            [diff] => 4
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 1
            [1] => 2
            [2] => 4
        )

    [testId] => 5
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 1
                    [text] => def operation(op, a, b):
    if op == '+':
        return a+b
    elif op == '-':
        return a-b
    elif op == '*':
        return a*b

                    [tests] => Array
                        (
                            [0] => operation('+',3,3)=6
                            [1] => operation('-',3,3)=0
                            [2] => operation('/',3,3)=1
                            [3] => operation('*',3,3)=9
                            [4] => operation('%',3,3)=0
                            [5] => operation('?',3,3)=error
                            [6] => operation('hi',3,3)=error
                        )

                )

            [1] => Array
                (
                    [qId] => 2
                    [text] => def stringMult(s, n):
    print s*n
                    [tests] => Array
                        (
                            [0] => strMult("hello",1)=hello
                            [1] => strMult("up", 4)=upupupup
                            [2] => strMult("hey", 3)=heyheyhey
                            [3] => strMult("aba", 2)=abaaba
                        )

                )

            [2] => Array
                (
                    [qId] => 4
                    [text] => def factorial(n)
    acc = 1
    for i in range(1,n+1):
        acc *= i
    return acc
                    [tests] => Array
                        (
                            [0] => factorial(2)=2
                            [1] => factorial(5)=120
                            [2] => factorial(3)=6
                            [3] => factorial(1)=1
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 1
            [text] => def operation(op, a, b):
    if op == '+':
        return a+b
    elif op == '-':
        return a-b
    elif op == '*':
        return a*b

            [tests] => Array
                (
                    [0] => operation('+',3,3)=6
                    [1] => operation('-',3,3)=0
                    [2] => operation('/',3,3)=1
                    [3] => operation('*',3,3)=9
                    [4] => operation('%',3,3)=0
                    [5] => operation('?',3,3)=error
                    [6] => operation('hi',3,3)=error
                )

        )

    [1] => Array
        (
            [qId] => 2
            [text] => def stringMult(s, n):
    print s*n
            [tests] => Array
                (
                    [0] => strMult("hello",1)=hello
                    [1] => strMult("up", 4)=upupupup
                    [2] => strMult("hey", 3)=heyheyhey
                    [3] => strMult("aba", 2)=abaaba
                )

        )

    [2] => Array
        (
            [qId] => 4
            [text] => def factorial(n)
    acc = 1
    for i in range(1,n+1):
        acc *= i
    return acc
            [tests] => Array
                (
                    [0] => factorial(2)=2
                    [1] => factorial(5)=120
                    [2] => factorial(3)=6
                    [3] => factorial(1)=1
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 1
+ clearning the python file for 1
def operation(op, a, b):
    if op == '+':
        return a+b
    elif op == '-':
        return a-b
    elif op == '*':
        return a*b

+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 1
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 1
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => g5p colon [:] in user answer
    [points] => 50
    [max] => 5
)

+ operating funcom for userAnswer: def operation(op, a, b):
    if op == '+':
        return a+b
    elif op == '-':
        return a-b
    elif op == '*':
        return a*b

+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if op == '+':
        return a+b
    elif op == '-':
        return a-b
    elif op == '*':
        return a*b

+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if op == '+':
        return a+b
    elif op == '-':
        return a-b
    elif op == '*':
        return a*b

+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if op == '+':
        return a+b
    elif op == '-':
        return a-b
    elif op == '*':
        return a*b

+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if op == '+':
        return a+b
    elif op == '-':
        return a-b
    elif op == '*':
        return a*b

+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if op == '+':
        return a+b
    elif op == '-':
        return a-b
    elif op == '*':
        return a*b

+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if op == '+':
        return a+b
    elif op == '-':
        return a-b
    elif op == '*':
        return a*b

+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if op == '+':
        return a+b
    elif op == '-':
        return a-b
    elif op == '*':
        return a*b

+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 1
    [feedback] => np expecting function [operation] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 1
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => n0p expecting function [operation] in answer found!
    [points] => 50
    [max] => 5
)

+ writing answer to python file: def operation(op, a, b):
    if op == '+':
        return a+b
    elif op == '-':
        return a-b
    elif op == '*':
        return a*b

+ current testcase :  operation('+',3,3)=6
+ current function : operation('+',3,3)
+ printout : print(operation('+',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
)

+ now we are writing the testcase function operation('+',3,3) on the python file : 
substr failed at getOut()+ current testcase :  operation('-',3,3)=0
+ current function : operation('-',3,3)
+ printout : print(operation('-',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
)

+ now we are writing the testcase function operation('-',3,3) on the python file : 
+ current testcase :  operation('/',3,3)=1
+ current function : operation('/',3,3)
+ printout : print(operation('/',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
)

+ now we are writing the testcase function operation('/',3,3) on the python file : 
+ current testcase :  operation('*',3,3)=9
+ current function : operation('*',3,3)
+ printout : print(operation('*',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
)

+ now we are writing the testcase function operation('*',3,3) on the python file : 
substr failed at getOut()+ current testcase :  operation('%',3,3)=0
+ current function : operation('%',3,3)
+ printout : print(operation('%',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
)

+ now we are writing the testcase function operation('%',3,3) on the python file : 
+ current testcase :  operation('?',3,3)=error
+ current function : operation('?',3,3)
+ printout : print(operation('?',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
    [5] => error
)

+ now we are writing the testcase function operation('?',3,3) on the python file : 
+ current testcase :  operation('hi',3,3)=error
+ current function : operation('hi',3,3)
+ printout : print(operation('hi',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
    [5] => error
    [6] => error
)

+ now we are writing the testcase function operation('hi',3,3) on the python file : 
+ running execom() with pars for id : 5, qId : 1
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def operation(op, a, b):
    if op == '+':
        return a+b
    elif op == '-':
        return a-b
    elif op == '*':
        return a*b

print(operation('+',3,3))
print(operation('-',3,3))
print(operation('/',3,3))
print(operation('*',3,3))
print(operation('%',3,3))
print(operation('?',3,3))
print(operation('hi',3,3))
+ running execom() with pars for id : 5, qId : 1
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def operation(op, a, b):
    if op == '+':
        return a+b
    elif op == '-':
        return a-b
    elif op == '*':
        return a*b

print(operation('+',3,3))
print(operation('-',3,3))
print(operation('/',3,3))
print(operation('*',3,3))
print(operation('%',3,3))
print(operation('?',3,3))
print(operation('hi',3,3))
+ comparing operation('+',3,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp called [operation('+',3,3)], expected: [6], got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 1
    [feedback] => gp called [operation('+',3,3)], expected: [6], got user answer [6]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 1
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => g20p called [operation('+',3,3)], expected: [6], got user answer [6]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => g20p called [operation('+',3,3)], expected: [6], got user answer [6]
    [points] => 50
    [max] => 20
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ 0 is an empty or null output. skipping!
+ comparing operation('/',3,3)=1 with output : 1
+ comparing c: None with output : 1
fail!
+ calling updatePoints() to provide feedback
+ bp called [operation('/',3,3)]  expected answer: [1], got user answer [1]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 1
    [feedback] => bp called [operation('/',3,3)]  expected answer: [1], got user answer [1]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 1
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => b10p called [operation('/',3,3)]  expected answer: [1], got user answer [1]
    [points] => 40
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => b10p called [operation('/',3,3)]  expected answer: [1], got user answer [1]
    [points] => 40
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => b10p called [operation('/',3,3)]  expected answer: [1], got user answer [1]
    [points] => 40
    [max] => 20
)

+ comparing operation('*',3,3)=9 with output : 9
+ comparing c: 9 with output : 9
pass!
+ calling updatePoints() to provide feedback
+ gp called [operation('*',3,3)], expected: [9], got user answer [9]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 1
    [feedback] => gp called [operation('*',3,3)], expected: [9], got user answer [9]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 1
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => g20p called [operation('*',3,3)], expected: [9], got user answer [9]
    [points] => 40
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => g20p called [operation('*',3,3)], expected: [9], got user answer [9]
    [points] => 40
    [max] => 20
)

substr failed at getOut()+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => g20p called [operation('*',3,3)], expected: [9], got user answer [9]
    [points] => 40
    [max] => 20
)

+ comparing operation('%',3,3)=0 with output : 
+ comparing c: None with output : 
fail!
+ calling updatePoints() to provide feedback
+ bp called [operation('%',3,3)]  expected answer: [], got user answer []
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 1
    [feedback] => bp called [operation('%',3,3)]  expected answer: [], got user answer []
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 1
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => b8p called [operation('%',3,3)]  expected answer: [], got user answer []
    [points] => 32
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => b8p called [operation('%',3,3)]  expected answer: [], got user answer []
    [points] => 32
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => b8p called [operation('%',3,3)]  expected answer: [], got user answer []
    [points] => 32
    [max] => 20
)

+ comparing operation('?',3,3)=error with output : error
+ comparing c: None with output : error
fail!
+ calling updatePoints() to provide feedback
+ bp called [operation('?',3,3)]  expected answer: [error], got user answer [error]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 1
    [feedback] => bp called [operation('?',3,3)]  expected answer: [error], got user answer [error]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 1
+ obtained 6 rows
[+] page accessed AUTOGRADER 2019-04-20 10:36:46pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 496270
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => b6.4p called [operation('?',3,3)]  expected answer: [error], got user answer [error]
    [points] => 26
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => b6.4p called [operation('?',3,3)]  expected answer: [error], got user answer [error]
    [points] => 26
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => b6.4p called [operation('?',3,3)]  expected answer: [error], got user answer [error]
    [points] => 26
    [max] => 20
)

+ comparing operation('hi',3,3)=error with output : error
+ comparing c: None with output : error
fail!
+ calling updatePoints() to provide feedback
+ bp called [operation('hi',3,3)]  expected answer: [error], got user answer [error]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 1
    [feedback] => bp called [operation('hi',3,3)]  expected answer: [error], got user answer [error]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 1
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => b5.2p called [operation('hi',3,3)]  expected answer: [error], got user answer [error]
    [points] => 21
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => b5.2p called [operation('hi',3,3)]  expected answer: [error], got user answer [error]
    [points] => 21
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 1
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 1
+ obtained 8 rows
error: 0
+ called checkGrade for testId . 1
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => n0p user program succesfully executed. 
    [points] => 21
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 1
    [feedback] => n0p user program succesfully executed. 
    [points] => 21
    [max] => 80
)

+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+  page accessed by getCons 2019-04-20 10:36:47pm
+ received data : 
Array
(
    [qId] => 1
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ called checkGrade for testId . 4
+ getCons() has empty cons array. returning 0.
+ getCons(1) failed
counter is 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ TASK F is in session. checking function name and colon 
+ clearning the python file for 2
+ checkGrade returned true . skipping 4
+ clearning the python file for 2
+ called checkGrade for testId . 5
def stringMult(s, n):
    print s*n
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 2
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ array of submittedTests are empty, returning false and terminating.
+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 2
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => g5p colon [:] in user answer
    [points] => 25
    [max] => 5
)

+ operating funcom for userAnswer: def stringMult(s, n):
    print s*n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def stringMult(s, n):
    print s*n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def stringMult(s, n):
    print s*n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def stringMult(s, n):
    print s*n
+ obtained function strMult with funcom()
+ finding if strMult is in user answer def stringMult(s, n):
    print s*n
+ function was not found at all in the user answer
+ returning the correct function : strMult
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 2
    [feedback] => bp expecting function name [strMult] in answer was not found!
    [subpoints] => .05
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 2
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b1.25p expecting function name [strMult] in answer was not found!
    [points] => 24
    [max] => 5
)

+ replacing def stringMult(s, n):
    print s*n with strMult
+ funrep() called, old answer: def stringMult(s, n):
    print s*n
+ funrep() called, new answer: def strMult(s, n):
    print s*n
+ writing correct answer to python file: def strMult(s, n):
    print s*n
+ current testcase :  strMult("hello",1)=hello
+ current function : strMult("hello",1)
+ printout : print(strMult("hello",1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
)

+ now we are writing the testcase function strMult("hello",1) on the python file : 
+ current testcase :  strMult("up", 4)=upupupup
+ current function : strMult("up", 4)
+ printout : print(strMult("up", 4))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
)

+ now we are writing the testcase function strMult("up", 4) on the python file : 
+ current testcase :  strMult("hey", 3)=heyheyhey
+ current function : strMult("hey", 3)
+ printout : print(strMult("hey", 3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
    [2] => heyheyhey
)

+ now we are writing the testcase function strMult("hey", 3) on the python file : 
+ current testcase :  strMult("aba", 2)=abaaba
+ current function : strMult("aba", 2)
+ printout : print(strMult("aba", 2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => hello
    [1] => upupupup
    [2] => heyheyhey
    [3] => abaaba
)

+ now we are writing the testcase function strMult("aba", 2) on the python file : 
+ running execom() with pars for id : 5, qId : 2
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def strMult(s, n):
    print s*n
print(strMult("hello",1))
print(strMult("up", 4))
print(strMult("hey", 3))
print(strMult("aba", 2))
+ running execom() with pars for id : 5, qId : 2
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def strMult(s, n):
    print s*n
print(strMult("hello",1))
print(strMult("up", 4))
print(strMult("hey", 3))
print(strMult("aba", 2))
+ comparing strMult("hello",1)=hello with output : hello
+ comparing c: hello with output : hello
pass!
+ calling updatePoints() to provide feedback
+ gp called [strMult("hello",1)], expected: [hello], got user answer [hello]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 2
    [feedback] => gp called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 2
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 24
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 24
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => g20p called [strMult("hello",1)], expected: [hello], got user answer [hello]
    [points] => 24
    [max] => 20
)

+ comparing strMult("up", 4)=upupupup with output : upupupup
+ comparing c: None with output : upupupup
fail!
+ calling updatePoints() to provide feedback
+ bp called [strMult("up", 4)]  expected answer: [upupupup], got user answer [upupupup]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 2
    [feedback] => bp called [strMult("up", 4)]  expected answer: [upupupup], got user answer [upupupup]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 2
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b4.8p called [strMult("up", 4)]  expected answer: [upupupup], got user answer [upupupup]
    [points] => 19
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b4.8p called [strMult("up", 4)]  expected answer: [upupupup], got user answer [upupupup]
    [points] => 19
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b4.8p called [strMult("up", 4)]  expected answer: [upupupup], got user answer [upupupup]
    [points] => 19
    [max] => 20
)

+ comparing strMult("hey", 3)=heyheyhey with output : heyheyhey
+ comparing c: upupupup with output : heyheyhey
fail!
+ calling updatePoints() to provide feedback
+ bp called [strMult("hey", 3)]  expected answer: [heyheyhey], got user answer [heyheyhey]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 2
    [feedback] => bp called [strMult("hey", 3)]  expected answer: [heyheyhey], got user answer [heyheyhey]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 2
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b3.8p called [strMult("hey", 3)]  expected answer: [heyheyhey], got user answer [heyheyhey]
    [points] => 15
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b3.8p called [strMult("hey", 3)]  expected answer: [heyheyhey], got user answer [heyheyhey]
    [points] => 15
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b3.8p called [strMult("hey", 3)]  expected answer: [heyheyhey], got user answer [heyheyhey]
    [points] => 15
    [max] => 20
)

+ comparing strMult("aba", 2)=abaaba with output : abaaba
+ comparing c: None with output : abaaba
fail!
+ calling updatePoints() to provide feedback
+ bp called [strMult("aba", 2)]  expected answer: [abaaba], got user answer [abaaba]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 2
    [feedback] => bp called [strMult("aba", 2)]  expected answer: [abaaba], got user answer [abaaba]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 2
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b3p called [strMult("aba", 2)]  expected answer: [abaaba], got user answer [abaaba]
    [points] => 12
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b3p called [strMult("aba", 2)]  expected answer: [abaaba], got user answer [abaaba]
    [points] => 12
    [max] => 20
)

getFunc() failed;  eqpos was not found. 
+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b3p called [strMult("aba", 2)]  expected answer: [abaaba], got user answer [abaaba]
    [points] => 12
    [max] => 20
)

+ comparing  with output : 
+ comparing c: heyheyhey with output : 
fail!
+ calling updatePoints() to provide feedback
+ bp called []  expected answer: [], got user answer []
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 2
    [feedback] => bp called []  expected answer: [], got user answer []
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 2
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b2.4p called []  expected answer: [], got user answer []
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b2.4p called []  expected answer: [], got user answer []
    [points] => 10
    [max] => 20
)

getFunc() failed;  eqpos was not found. 
+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b2.4p called []  expected answer: [], got user answer []
    [points] => 10
    [max] => 20
)

+ comparing  with output : 
+ comparing c: None with output : 
fail!
+ calling updatePoints() to provide feedback
+ bp called []  expected answer: [], got user answer []
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 2
    [feedback] => bp called []  expected answer: [], got user answer []
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 2
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b2p called []  expected answer: [], got user answer []
    [points] => 8
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b2p called []  expected answer: [], got user answer []
    [points] => 8
    [max] => 20
)

getFunc() failed;  eqpos was not found. 
+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b2p called []  expected answer: [], got user answer []
    [points] => 8
    [max] => 20
)

+ comparing  with output : 
+ comparing c: abaaba with output : 
fail!
+ calling updatePoints() to provide feedback
+ bp called []  expected answer: [], got user answer []
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 2
    [feedback] => bp called []  expected answer: [], got user answer []
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 2
+ obtained 8 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b1.6p called []  expected answer: [], got user answer []
    [points] => 6
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b1.6p called []  expected answer: [], got user answer []
    [points] => 6
    [max] => 20
)

getFunc() failed;  eqpos was not found. 
+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b1.6p called []  expected answer: [], got user answer []
    [points] => 6
    [max] => 20
)

+ comparing  with output : 
+ comparing c: None with output : 
fail!
+ calling updatePoints() to provide feedback
+ bp called []  expected answer: [], got user answer []
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 2
    [feedback] => bp called []  expected answer: [], got user answer []
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 2
+ obtained 9 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b1.2p called []  expected answer: [], got user answer []
    [points] => 5
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b1.2p called []  expected answer: [], got user answer []
    [points] => 5
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 2
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 2
+ obtained 10 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => n0p user program succesfully executed. 
    [points] => 5
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => n0p user program succesfully executed. 
    [points] => 5
    [max] => 80
)

+  page accessed by getCons 2019-04-20 10:36:52pm
+ received data : 
Array
(
    [qId] => 2
)

+ getCons() in backend  was succesful. data: 
{"cons":["for","print"]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
    [0] => for
    [1] => print
)

+ getCons (2) success:
Array
(
    [0] => for
    [1] => print
)

+ checkCons() is checking if constraints are found in user answer
+ checkCons() did not find for in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 2
    [feedback] => bp constraint [for]  was not found.
    [subpoints] => .2
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 2
+ obtained 11 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => b1p constraint [for]  was not found.
    [points] => 4
    [max] => 20
)

+ checkCons() found print in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 2
    [feedback] => gp constraint [print] was found.
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 2
+ obtained 12 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 2
    [feedback] => g20p constraint [print] was found.
    [points] => 4
    [max] => 20
)

+ checkCons() was succesful at test 5, qid 2
counter is 3
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 4
+ clearning the python file for 4
def factorial(n)
    acc = 1
    for i in range(1,n+1):
        acc *= i
    return acc
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 4
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 4
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 4
    [feedback] => g5p colon [:] in user answer
    [points] => 25
    [max] => 5
)

+ operating funcom for userAnswer: def factorial(n)
    acc = 1
    for i in range(1,n+1):
        acc *= i
    return acc
+ obtained function factorial with funcom()
+ finding if factorial is in user answer def factorial(n)
    acc = 1
    for i in range(1,n+1):
        acc *= i
    return acc
+ obtained function factorial with funcom()
+ finding if factorial is in user answer def factorial(n)
    acc = 1
    for i in range(1,n+1):
        acc *= i
    return acc
+ obtained function factorial with funcom()
+ finding if factorial is in user answer def factorial(n)
    acc = 1
    for i in range(1,n+1):
        acc *= i
    return acc
+ obtained function factorial with funcom()
+ finding if factorial is in user answer def factorial(n)
    acc = 1
    for i in range(1,n+1):
        acc *= i
    return acc
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 4
    [feedback] => np expecting function [factorial] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 4
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 4
    [feedback] => n0p expecting function [factorial] in answer found!
    [points] => 25
    [max] => 5
)

+ writing answer to python file: def factorial(n)
    acc = 1
    for i in range(1,n+1):
        acc *= i
    return acc
+ current testcase :  factorial(2)=2
+ current function : factorial(2)
+ printout : print(factorial(2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 2
)

+ now we are writing the testcase function factorial(2) on the python file : 
+ current testcase :  factorial(5)=120
+ current function : factorial(5)
+ printout : print(factorial(5))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 2
    [1] => 120
)

+ now we are writing the testcase function factorial(5) on the python file : 
+ current testcase :  factorial(3)=6
+ current function : factorial(3)
+ printout : print(factorial(3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 2
    [1] => 120
    [2] => 6
)

+ now we are writing the testcase function factorial(3) on the python file : 
+ current testcase :  factorial(1)=1
+ current function : factorial(1)
+ printout : print(factorial(1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 2
    [1] => 120
    [2] => 6
    [3] => 1
)

+ now we are writing the testcase function factorial(1) on the python file : 
+ running execom() with pars for id : 5, qId : 4
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def factorial(n)
    acc = 1
    for i in range(1,n+1):
        acc *= i
    return acc
print(factorial(2))
print(factorial(5))
print(factorial(3))
print(factorial(1))
+ exec() failed. returning 0. function did not match testcase or program syntax errors 		
+ execom failed. pls check logs. 
+ execom failed. pls check logs. 
+ calling updatePoints() to provide feedback
+ bp user program failed to execute. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 4
    [feedback] => bp user program failed to execute. 
    [subpoints] => .8
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 4
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 4
    [feedback] => b20p user program failed to execute. 
    [points] => 5
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 4
    [feedback] => b20p user program failed to execute. 
    [points] => 5
    [max] => 80
)

+  page accessed by getCons 2019-04-20 10:36:53pm
+ received data : 
Array
(
    [qId] => 4
)

+ getCons() in backend  was succesful. data: 
{"cons":["while"]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
    [0] => while
)

+ getCons (4) success:
Array
(
    [0] => while
)

+ checkCons() is checking if constraints are found in user answer
+ checkCons() did not find while in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 5
    [qId] => 4
    [feedback] => bp constraint [while]  was not found.
    [subpoints] => .2
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 5 and qId = 4
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 5
    [qId] => 4
    [feedback] => b1p constraint [while]  was not found.
    [points] => 4
    [max] => 20
)

+ checkCons() was succesful at test 5, qid 4
[+] page accessed AUTOGRADER 2019-04-20 10:37:57pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 522142
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 06:29:01pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 522996
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 06:29:31pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 523850
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 06:29:34pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 524704
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 06:36:40pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 525558
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 06:36:47pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 526412
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 06:44:07pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 527266
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 6
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 6 will now be graded.
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 6
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                    [1] => Array
                        (
                            [id] => 1
                            [desc] => Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string "error".
                            [topic] => Operators
                            [diff] => 2
                        )

                    [2] => Array
                        (
                            [id] => 7
                            [desc] => Descriptionnnss
                            [topic] => TipTop
                            [diff] => 2
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 3
            [1] => 1
            [2] => 7
        )

    [testId] => 6
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c):
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

            [1] => Array
                (
                    [qId] => 1
                    [text] => def operation(op, a, b):
    if op == '+':
        return a + b
                    [tests] => Array
                        (
                            [0] => operation('+',3,3)=6
                            [1] => operation('-',3,3)=0
                            [2] => operation('/',3,3)=1
                            [3] => operation('*',3,3)=9
                            [4] => operation('%',3,3)=0
                            [5] => operation('?',3,3)=error
                            [6] => operation('hi',3,3)=error
                        )

                )

            [2] => Array
                (
                    [qId] => 7
                    [text] => return 'a'
                    [tests] => Array
                        (
                            [0] => a()=d
                            [1] => a()=d
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c):
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

    [1] => Array
        (
            [qId] => 1
            [text] => def operation(op, a, b):
    if op == '+':
        return a + b
            [tests] => Array
                (
                    [0] => operation('+',3,3)=6
                    [1] => operation('-',3,3)=0
                    [2] => operation('/',3,3)=1
                    [3] => operation('*',3,3)=9
                    [4] => operation('%',3,3)=0
                    [5] => operation('?',3,3)=error
                    [6] => operation('hi',3,3)=error
                )

        )

    [2] => Array
        (
            [qId] => 7
            [text] => return 'a'
            [tests] => Array
                (
                    [0] => a()=d
                    [1] => a()=d
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 3
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 3
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 3
    [feedback] => g5p colon [:] in user answer
    [points] => 25
    [max] => 5
)

+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 3
    [feedback] => np expecting function [addThree] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 3
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 3
    [feedback] => n0p expecting function [addThree] in answer found!
    [points] => 25
    [max] => 5
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 6, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ running execom() with pars for id : 6, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(100, 200, 300)], expected: [600], got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 3
    [feedback] => gp called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 3
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 25
    [max] => 20
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 3
    [feedback] => gp called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 3
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 25
    [max] => 20
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 3
    [feedback] => gp called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 3
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 25
    [max] => 20
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(1,2,3)], expected: [6], got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 3
    [feedback] => gp called [addThree(1,2,3)], expected: [6], got user answer [6]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 3
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 25
    [max] => 20
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(4,5,6)], expected: [15], got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 3
    [feedback] => gp called [addThree(4,5,6)], expected: [15], got user answer [15]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 3
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 3
    [feedback] => g20p called [addThree(4,5,6)], expected: [15], got user answer [15]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 3
    [feedback] => g20p called [addThree(4,5,6)], expected: [15], got user answer [15]
    [points] => 25
    [max] => 20
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 3
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 25
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 25
    [max] => 80
)

+  page accessed by getCons 2019-04-21 06:44:10pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 1
+ clearning the python file for 1
def operation(op, a, b):
    if op == '+':
        return a + b
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 1
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 1
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => g5p colon [:] in user answer
    [points] => 25
    [max] => 5
)

+ operating funcom for userAnswer: def operation(op, a, b):
    if op == '+':
        return a + b
+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if op == '+':
        return a + b
+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if op == '+':
        return a + b
+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if op == '+':
        return a + b
+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if op == '+':
        return a + b
+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if op == '+':
        return a + b
+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if op == '+':
        return a + b
+ obtained function operation with funcom()
+ finding if operation is in user answer def operation(op, a, b):
    if op == '+':
        return a + b
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 1
    [feedback] => np expecting function [operation] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 1
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => n0p expecting function [operation] in answer found!
    [points] => 25
    [max] => 5
)

+ writing answer to python file: def operation(op, a, b):
    if op == '+':
        return a + b
+ current testcase :  operation('+',3,3)=6
+ current function : operation('+',3,3)
+ printout : print(operation('+',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
)

+ now we are writing the testcase function operation('+',3,3) on the python file : 
substr failed at getOut()+ current testcase :  operation('-',3,3)=0
+ current function : operation('-',3,3)
+ printout : print(operation('-',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
)

+ now we are writing the testcase function operation('-',3,3) on the python file : 
+ current testcase :  operation('/',3,3)=1
+ current function : operation('/',3,3)
+ printout : print(operation('/',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
)

+ now we are writing the testcase function operation('/',3,3) on the python file : 
+ current testcase :  operation('*',3,3)=9
+ current function : operation('*',3,3)
+ printout : print(operation('*',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
)

+ now we are writing the testcase function operation('*',3,3) on the python file : 
substr failed at getOut()+ current testcase :  operation('%',3,3)=0
+ current function : operation('%',3,3)
+ printout : print(operation('%',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
)

+ now we are writing the testcase function operation('%',3,3) on the python file : 
+ current testcase :  operation('?',3,3)=error
+ current function : operation('?',3,3)
+ printout : print(operation('?',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
    [5] => error
)

+ now we are writing the testcase function operation('?',3,3) on the python file : 
+ current testcase :  operation('hi',3,3)=error
+ current function : operation('hi',3,3)
+ printout : print(operation('hi',3,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 6
    [1] => 
    [2] => 1
    [3] => 9
    [4] => 
    [5] => error
    [6] => error
)

+ now we are writing the testcase function operation('hi',3,3) on the python file : 
+ running execom() with pars for id : 6, qId : 1
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def operation(op, a, b):
    if op == '+':
        return a + b
print(operation('+',3,3))
print(operation('-',3,3))
print(operation('/',3,3))
print(operation('*',3,3))
print(operation('%',3,3))
print(operation('?',3,3))
print(operation('hi',3,3))
+ running execom() with pars for id : 6, qId : 1
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def operation(op, a, b):
    if op == '+':
        return a + b
print(operation('+',3,3))
print(operation('-',3,3))
print(operation('/',3,3))
print(operation('*',3,3))
print(operation('%',3,3))
print(operation('?',3,3))
print(operation('hi',3,3))
+ comparing operation('+',3,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp called [operation('+',3,3)], expected: [6], got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 1
    [feedback] => gp called [operation('+',3,3)], expected: [6], got user answer [6]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 1
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => g20p called [operation('+',3,3)], expected: [6], got user answer [6]
    [points] => 25
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => g20p called [operation('+',3,3)], expected: [6], got user answer [6]
    [points] => 25
    [max] => 20
)

substr failed at getOut()+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => g20p called [operation('+',3,3)], expected: [6], got user answer [6]
    [points] => 25
    [max] => 20
)

+ comparing operation('-',3,3)=0 with output : 
+ comparing c: None with output : 
fail!
+ calling updatePoints() to provide feedback
+ bp called [operation('-',3,3)]  expected answer: [], got user answer []
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 1
    [feedback] => bp called [operation('-',3,3)]  expected answer: [], got user answer []
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 1
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => b5p called [operation('-',3,3)]  expected answer: [], got user answer []
    [points] => 20
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => b5p called [operation('-',3,3)]  expected answer: [], got user answer []
    [points] => 20
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => b5p called [operation('-',3,3)]  expected answer: [], got user answer []
    [points] => 20
    [max] => 20
)

+ comparing operation('/',3,3)=1 with output : 1
+ comparing c: None with output : 1
fail!
+ calling updatePoints() to provide feedback
+ bp called [operation('/',3,3)]  expected answer: [1], got user answer [1]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 1
    [feedback] => bp called [operation('/',3,3)]  expected answer: [1], got user answer [1]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 1
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => b4p called [operation('/',3,3)]  expected answer: [1], got user answer [1]
    [points] => 16
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => b4p called [operation('/',3,3)]  expected answer: [1], got user answer [1]
    [points] => 16
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => b4p called [operation('/',3,3)]  expected answer: [1], got user answer [1]
    [points] => 16
    [max] => 20
)

+ comparing operation('*',3,3)=9 with output : 9
+ comparing c: None with output : 9
fail!
+ calling updatePoints() to provide feedback
+ bp called [operation('*',3,3)]  expected answer: [9], got user answer [9]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 1
    [feedback] => bp called [operation('*',3,3)]  expected answer: [9], got user answer [9]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 1
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => b3.2p called [operation('*',3,3)]  expected answer: [9], got user answer [9]
    [points] => 13
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => b3.2p called [operation('*',3,3)]  expected answer: [9], got user answer [9]
    [points] => 13
    [max] => 20
)

substr failed at getOut()+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => b3.2p called [operation('*',3,3)]  expected answer: [9], got user answer [9]
    [points] => 13
    [max] => 20
)

+ comparing operation('%',3,3)=0 with output : 
+ comparing c: None with output : 
fail!
+ calling updatePoints() to provide feedback
+ bp called [operation('%',3,3)]  expected answer: [], got user answer []
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 1
    [feedback] => bp called [operation('%',3,3)]  expected answer: [], got user answer []
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 1
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => b2.6p called [operation('%',3,3)]  expected answer: [], got user answer []
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => b2.6p called [operation('%',3,3)]  expected answer: [], got user answer []
    [points] => 10
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => b2.6p called [operation('%',3,3)]  expected answer: [], got user answer []
    [points] => 10
    [max] => 20
)

+ comparing operation('?',3,3)=error with output : error
+ comparing c: None with output : error
fail!
+ calling updatePoints() to provide feedback
+ bp called [operation('?',3,3)]  expected answer: [error], got user answer [error]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 1
    [feedback] => bp called [operation('?',3,3)]  expected answer: [error], got user answer [error]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 1
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => b2p called [operation('?',3,3)]  expected answer: [error], got user answer [error]
    [points] => 8
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => b2p called [operation('?',3,3)]  expected answer: [error], got user answer [error]
    [points] => 8
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => b2p called [operation('?',3,3)]  expected answer: [error], got user answer [error]
    [points] => 8
    [max] => 20
)

+ comparing operation('hi',3,3)=error with output : error
+ comparing c: None with output : error
fail!
+ calling updatePoints() to provide feedback
+ bp called [operation('hi',3,3)]  expected answer: [error], got user answer [error]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 1
    [feedback] => bp called [operation('hi',3,3)]  expected answer: [error], got user answer [error]
    [subpoints] => .20
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 1
+ obtained 8 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => b1.6p called [operation('hi',3,3)]  expected answer: [error], got user answer [error]
    [points] => 6
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => b1.6p called [operation('hi',3,3)]  expected answer: [error], got user answer [error]
    [points] => 6
    [max] => 20
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 1
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 1
+ obtained 9 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => n0p user program succesfully executed. 
    [points] => 6
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 1
    [feedback] => n0p user program succesfully executed. 
    [points] => 6
    [max] => 80
)

+  page accessed by getCons 2019-04-21 06:44:12pm
+ received data : 
Array
(
    [qId] => 1
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(1) failed
counter is 3
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 7
+ clearning the python file for 7
+ colon was not found in user answer
+ new answer: 
 r:eturn 'a'
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 7
    [feedback] => bp missing colon [:] in user answer
    [subpoints] => .05
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 7
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 7
    [feedback] => b2.5p missing colon [:] in user answer
    [points] => 48
    [max] => 5
)

+ operating funcom for userAnswer: r:eturn 'a'
+ obtained function a with funcom()
+ finding if a is in user answer r:eturn 'a'
+ obtained function a with funcom()
+ finding if a is in user answer r:eturn 'a'
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 7
    [feedback] => np expecting function [a] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 7
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 7
    [feedback] => n0p expecting function [a] in answer found!
    [points] => 48
    [max] => 5
)

+ writing answer to python file: r:eturn 'a'
+ current testcase :  a()=d
+ current function : a()
+ printout : print(a())
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => d
)

+ now we are writing the testcase function a() on the python file : 
+ current testcase :  a()=d
+ current function : a()
+ printout : print(a())
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => d
    [1] => d
)

+ now we are writing the testcase function a() on the python file : 
+ running execom() with pars for id : 6, qId : 7
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

r:eturn 'a'
print(a())
print(a())
+ exec() failed. returning 0. function did not match testcase or program syntax errors 		
+ execom failed. pls check logs. 
+ execom failed. pls check logs. 
+ calling updatePoints() to provide feedback
+ bp user program failed to execute. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 7
    [feedback] => bp user program failed to execute. 
    [subpoints] => .8
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 7
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 7
    [feedback] => b38.4p user program failed to execute. 
    [points] => 10
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 7
    [feedback] => b38.4p user program failed to execute. 
    [points] => 10
    [max] => 80
)

+  page accessed by getCons 2019-04-21 06:44:12pm
+ received data : 
Array
(
    [qId] => 7
)

+ getCons() in backend  was succesful. data: 
{"cons":["for","while"]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
    [0] => for
    [1] => while
)

+ getCons (7) success:
Array
(
    [0] => for
    [1] => while
)

+ checkCons() is checking if constraints are found in user answer
+ checkCons() did not find for in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 7
    [feedback] => bp constraint [for]  was not found.
    [subpoints] => .2
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 7
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 7
    [feedback] => b2p constraint [for]  was not found.
    [points] => 8
    [max] => 20
)

+ checkCons() did not find while in user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 6
    [qId] => 7
    [feedback] => bp constraint [while]  was not found.
    [subpoints] => .2
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 6 and qId = 7
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 6
    [qId] => 7
    [feedback] => b1.6p constraint [while]  was not found.
    [points] => 6
    [max] => 20
)

+ checkCons() was succesful at test 6, qid 7
[+] page accessed AUTOGRADER 2019-04-21 06:44:29pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 565401
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 06:44:34pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 566401
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 06:54:36pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 567401
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 7
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 7 will now be graded.
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 7
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 3
        )

    [testId] => 7
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c):
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c):
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 7
    [qId] => 3
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 7 and qId = 3
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 7
    [qId] => 3
    [feedback] => g5p colon [:] in user answer
    [points] => 50
    [max] => 5
)

+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 7
    [qId] => 3
    [feedback] => np expecting function [addThree] in answer found!
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 7 and qId = 3
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 7
    [qId] => 3
    [feedback] => n0p expecting function [addThree] in answer found!
    [points] => 50
    [max] => 5
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 7, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ running execom() with pars for id : 7, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(100, 200, 300)], expected: [600], got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 7
    [qId] => 3
    [feedback] => gp called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 7 and qId = 3
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 7
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 7
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 7
    [qId] => 3
    [feedback] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [points] => 50
    [max] => 20
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 7
    [qId] => 3
    [feedback] => gp called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 7 and qId = 3
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 7
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 7
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 7
    [qId] => 3
    [feedback] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [points] => 50
    [max] => 20
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 7
    [qId] => 3
    [feedback] => gp called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 7 and qId = 3
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 7
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 7
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 7
    [qId] => 3
    [feedback] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [points] => 50
    [max] => 20
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(1,2,3)], expected: [6], got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 7
    [qId] => 3
    [feedback] => gp called [addThree(1,2,3)], expected: [6], got user answer [6]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 7 and qId = 3
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 7
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 7
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 7
    [qId] => 3
    [feedback] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [points] => 50
    [max] => 20
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp called [addThree(4,5,6)], expected: [15], got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 7
    [qId] => 3
    [feedback] => gp called [addThree(4,5,6)], expected: [15], got user answer [15]
    [subpoints] => 0
    [max] => 20
)

+ modA was able to retrieve all rows from feedback for testId = 7 and qId = 3
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 7
    [qId] => 3
    [feedback] => g20p called [addThree(4,5,6)], expected: [15], got user answer [15]
    [points] => 50
    [max] => 20
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 7
    [qId] => 3
    [feedback] => g20p called [addThree(4,5,6)], expected: [15], got user answer [15]
    [points] => 50
    [max] => 20
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 7
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => 80
)

+ modA was able to retrieve all rows from feedback for testId = 7 and qId = 3
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 7
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 50
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 7
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 50
    [max] => 80
)

+  page accessed by getCons 2019-04-21 06:54:38pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed
[+] page accessed AUTOGRADER 2019-04-21 06:54:44pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 582700
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 06:56:51pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 583846
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 07:25:47pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 584992
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 07:25:48pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 586138
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 07:40:04pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 587284
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 07:40:15pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 588430
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 08:03:24pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 589576
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 08:03:27pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 590722
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 08:03:39pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 591868
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 08:04:08pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 593014
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 08:04:12pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 594160
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 08:16:22pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 595306
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 08:16:30pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 596452
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 09:11:41pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 597598
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 09:11:45pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 598744
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
+ holecheck was conducted for:
Array/
https://web.njit.edu/~rd248/download/beta/back/modA.php
+ failure to conduct curlop().
+ holecheck was succesful; obtained curlop out:
sqlCheck() error:  sqlCheck() error:  sqlCheck() error:  sqlCheck() error:  sqlCheck() error:  sqlCheck() error:  {"type":"modA","error":"sql3 in modA, feedback update failed. sql3 in modA, feedback update failed. sql3 in modA, feedback update failed. sql3 in modA, feedback update failed. sql3 in modA, feedback update failed. sql3 in modA, feedback update failed. ","attempt":{"test":{"id":"7","desc":"My Test","rel":"1","sub":"1","ques":[{"id":"3","desc":"Write a function called addThree() that takes three integer parameters and returns their sum.","topic":"Adding Integers","cons":[],"diff":"1","tests":["addThree(100, 200, 300)=600","addThree(-7, 0, 19)=12","addThree(-1,-1,-1)=-3","addThree(1,2,3)=6","addThree(4,5,6)=15","addThree(0,0,0)=0"]}],"pts":["50"]},"answers":["def addThree(a, b, c):\n    return a + b + c"],"grades":["50"],"feedback":[["g5p colon [:] in user answer","n0p expecting function [addThree] in answer found!","g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]","g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]","g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]","g20p called [addThree(1,2,3)], expected: [6], got user answer [6]","g20p called [addThree(4,5,6)], expected: [15], got user answer [15]","n0p user program succesfully executed. "]],"remarks":["you did perfectly but you straight up cheated."],"rel":"1"}}
+ holecheck was succesful; obtained curlop out:
sqlCheck() error:  sqlCheck() error:  sqlCheck() error:  sqlCheck() error:  sqlCheck() error:  sqlCheck() error:  {"type":"modA","error":"sql3 in modA, feedback update failed. sql3 in modA, feedback update failed. sql3 in modA, feedback update failed. sql3 in modA, feedback update failed. sql3 in modA, feedback update failed. sql3 in modA, feedback update failed. ","attempt":{"test":{"id":"7","desc":"My Test","rel":"1","sub":"1","ques":[{"id":"3","desc":"Write a function called addThree() that takes three integer parameters and returns their sum.","topic":"Adding Integers","cons":[],"diff":"1","tests":["addThree(100, 200, 300)=600","addThree(-7, 0, 19)=12","addThree(-1,-1,-1)=-3","addThree(1,2,3)=6","addThree(4,5,6)=15","addThree(0,0,0)=0"]}],"pts":["50"]},"answers":["def addThree(a, b, c):\n    return a + b + c"],"grades":["50"],"feedback":[["g5p colon [:] in user answer","n0p expecting function [addThree] in answer found!","g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]","g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]","g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]","g20p called [addThree(1,2,3)], expected: [6], got user answer [6]","g20p called [addThree(4,5,6)], expected: [15], got user answer [15]","n0p user program succesfully executed. "]],"remarks":["you did perfectly but you straight up cheated."],"rel":"1"}}
+ holecheck was succesful; obtained curlop out:
{"type":"modA","error":null,"attempt":{"test":{"id":"7","desc":"My Test","rel":"1","sub":"1","ques":[{"id":"3","desc":"Write a function called addThree() that takes three integer parameters and returns their sum.","topic":"Adding Integers","cons":[],"diff":"1","tests":["addThree(100, 200, 300)=600","addThree(-7, 0, 19)=12","addThree(-1,-1,-1)=-3","addThree(1,2,3)=6","addThree(4,5,6)=15","addThree(0,0,0)=0"]}],"pts":["50"]},"answers":["def addThree(a, b, c):\n    return a + b + c"],"grades":["50"],"feedback":[["g0p colon [:] in user answer","n0p expecting function [addThree] in answer found!","g0p called [addThree(100, 200, 300)], expected: [600], got user answer [600]","g0p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]","g0p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]","g0p called [addThree(1,2,3)], expected: [6], got user answer [6]","g0p called [addThree(4,5,6)], expected: [15], got user answer [15]","n0p user program succesfully executed. "]],"remarks":["you did perfectly but you straight up cheated."],"rel":"1"}}
[+] page accessed AUTOGRADER 2019-04-21 11:22:37pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 604077
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 11:22:43pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 605223
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 11:23:18pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 606369
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-21 11:23:24pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 607515
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
+ holecheck was succesful; obtained curlop out:
{"type":"modA","error":"modA grades is empty. modA feedbacks is empty. ","attempt":{"test":{"id":"7","desc":"My Test","rel":"1","sub":"1","ques":[{"id":"3","desc":"Write a function called addThree() that takes three integer parameters and returns their sum.","topic":"Adding Integers","cons":[],"diff":"1","tests":["addThree(100, 200, 300)=600","addThree(-7, 0, 19)=12","addThree(-1,-1,-1)=-3","addThree(1,2,3)=6","addThree(4,5,6)=15","addThree(0,0,0)=0"]}],"pts":["50"]},"answers":["def addThree(a, b, c):\n    return a + b + c"],"grades":["50"],"feedback":[["g0p colon [:] in user answer","n0p expecting function [addThree] in answer found!","g0p called [addThree(100, 200, 300)], expected: [600], got user answer [600]","g0p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]","g0p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]","g0p called [addThree(1,2,3)], expected: [6], got user answer [6]","g0p called [addThree(4,5,6)], expected: [15], got user answer [15]","n0p user program succesfully executed. "]],"remarks":["you did perfectly but you cheated; I gave you 0 for this test. "],"rel":"0"}}
[+] page accessed AUTOGRADER 2019-04-21 11:24:01pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 609847
+ called checkGrade for testId . 1
[+] page accessed AUTOGRADER 2019-04-21 11:24:05pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 610082
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
+ holecheck was succesful; obtained curlop out:
{"type":"modA","error":"modA remarks object is empty. ","attempt":{"test":{"id":"7","desc":"My Test","rel":"1","sub":"1","ques":[{"id":"3","desc":"Write a function called addThree() that takes three integer parameters and returns their sum.","topic":"Adding Integers","cons":[],"diff":"1","tests":["addThree(100, 200, 300)=600","addThree(-7, 0, 19)=12","addThree(-1,-1,-1)=-3","addThree(1,2,3)=6","addThree(4,5,6)=15","addThree(0,0,0)=0"]}],"pts":["50"]},"answers":["def addThree(a, b, c):\n    return a + b + c"],"grades":["50"],"feedback":[["g20p colon [:] in user answer","n0p expecting function [addThree] in answer found!","g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]","g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]","g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]","g20p called [addThree(1,2,3)], expected: [6], got user answer [6]","g20p called [addThree(4,5,6)], expected: [15], got user answer [15]","n0p user program succesfully executed. "]],"remarks":["you did perfectly but you cheated; I gave you 0 for this test. "],"rel":"1"}}
[+] page accessed AUTOGRADER 2019-04-21 11:27:21pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 612403
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
[+] page accessed AUTOGRADER 2019-04-21 11:27:22pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 612749
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-22 01:49:59am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 614695
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
+ holecheck was succesful; obtained curlop out:
{"type":"modA","error":"modA remarks object is empty. ","attempt":{"test":{"id":"5","desc":"Sample Quiz","rel":"1","sub":"1","ques":[{"id":"1","desc":"Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '\/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string \"error\".","topic":"Operators","cons":[],"diff":"2","tests":["operation('+',3,3)=6","operation('-',3,3)=0","operation('\/',3,3)=1","operation('*',3,3)=9","operation('%',3,3)=0","operation('?',3,3)=error","operation('hi',3,3)=error"]},{"id":"2","desc":"Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.","topic":"Printing string","cons":["for","print"],"diff":"3","tests":["strMult(\"hello\",1)=hello","strMult(\"up\", 4)=upupupup","strMult(\"hey\", 3)=heyheyhey","strMult(\"aba\", 2)=abaaba"]},{"id":"4","desc":"Write a function called factorial() which takes one integer parameter n, and returns n!. ","topic":"Math Factorial","cons":["while"],"diff":"4","tests":["factorial(2)=2","factorial(5)=120","factorial(3)=6","factorial(1)=1"]}],"pts":["50","25","25"]},"answers":["def operation(op, a, b):\n    if op == '+':\n        return a+b\n    elif op == '-':\n        return a-b\n    elif op == '*':\n        return a*b\n","def stringMult(s, n):\n    print s*n","def factorial(n)\n    acc = 1\n    for i in range(1,n+1):\n        acc *= i\n    return acc"],"grades":["21","4","4"],"feedback":[["g5p colon [:] in user answer","n0p expecting function [operation] in answer found!","g30p called [operation('+',3,3)], expected: [6], got user answer [6]","b10p called [operation('\/',3,3)]  expected answer: [1], got user answer [1]","g20p called [operation('*',3,3)], expected: [9], got user answer [9]","b8p called [operation('%',3,3)]  expected answer: [], got user answer []","b6.4p called [operation('?',3,3)]  expected answer: [error], got user answer [error]","b5.2p called [operation('hi',3,3)]  expected answer: [error], got user answer [error]","n0p user program succesfully executed. "],["g5p colon [:] in user answer","b1.25p expecting function name [strMult] in answer was not found!","g20p called [strMult(\"hello\",1)], expected: [hello], got user answer [hello]","b4.8p called [strMult(\"up\", 4)]  expected answer: [upupupup], got user answer [upupupup]","b3.8p called [strMult(\"hey\", 3)]  expected answer: [heyheyhey], got user answer [heyheyhey]","b3p called [strMult(\"aba\", 2)]  expected answer: [abaaba], got user answer [abaaba]","b2.4p called []  expected answer: [], got user answer []","b2p called []  expected answer: [], got user answer []","b1.6p called []  expected answer: [], got user answer []","b1.2p called []  expected answer: [], got user answer []","n0p user program succesfully executed. ","b1p constraint [for]  was not found.","g20p constraint [print] was found."],["g5p colon [:] in user answer","n0p expecting function [factorial] in answer found!","b20p user program failed to execute. ","b1p constraint [while]  was not found."]],"remarks":["","",""],"rel":"0"}}
[+] page accessed AUTOGRADER 2019-04-22 01:50:41am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 619152
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
+ holecheck was succesful; obtained curlop out:
{"type":"modA","error":"modA remarks object is empty. ","attempt":{"test":{"id":"5","desc":"Sample Quiz","rel":"1","sub":"1","ques":[{"id":"1","desc":"Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '\/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string \"error\".","topic":"Operators","cons":[],"diff":"2","tests":["operation('+',3,3)=6","operation('-',3,3)=0","operation('\/',3,3)=1","operation('*',3,3)=9","operation('%',3,3)=0","operation('?',3,3)=error","operation('hi',3,3)=error"]},{"id":"2","desc":"Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.","topic":"Printing string","cons":["for","print"],"diff":"3","tests":["strMult(\"hello\",1)=hello","strMult(\"up\", 4)=upupupup","strMult(\"hey\", 3)=heyheyhey","strMult(\"aba\", 2)=abaaba"]},{"id":"4","desc":"Write a function called factorial() which takes one integer parameter n, and returns n!. ","topic":"Math Factorial","cons":["while"],"diff":"4","tests":["factorial(2)=2","factorial(5)=120","factorial(3)=6","factorial(1)=1"]}],"pts":["50","25","25"]},"answers":["def operation(op, a, b):\n    if op == '+':\n        return a+b\n    elif op == '-':\n        return a-b\n    elif op == '*':\n        return a*b\n","def stringMult(s, n):\n    print s*n","def factorial(n)\n    acc = 1\n    for i in range(1,n+1):\n        acc *= i\n    return acc"],"grades":["21","4","4"],"feedback":[["g5p colon [:] in user answer","n0p expecting function [operation] in answer found!","g30p called [operation('+',3,3)], expected: [6], got user answer [6]","b10p called [operation('\/',3,3)]  expected answer: [1], got user answer [1]","g30p called [operation('*',3,3)], expected: [9], got user answer [9]","b8p called [operation('%',3,3)]  expected answer: [], got user answer []","b6.4p called [operation('?',3,3)]  expected answer: [error], got user answer [error]","b5.2p called [operation('hi',3,3)]  expected answer: [error], got user answer [error]","n0p user program succesfully executed. "],["g5p colon [:] in user answer","b1.25p expecting function name [strMult] in answer was not found!","g20p called [strMult(\"hello\",1)], expected: [hello], got user answer [hello]","b4.8p called [strMult(\"up\", 4)]  expected answer: [upupupup], got user answer [upupupup]","b3.8p called [strMult(\"hey\", 3)]  expected answer: [heyheyhey], got user answer [heyheyhey]","b3p called [strMult(\"aba\", 2)]  expected answer: [abaaba], got user answer [abaaba]","b2.4p called []  expected answer: [], got user answer []","b2p called []  expected answer: [], got user answer []","b1.6p called []  expected answer: [], got user answer []","b1.2p called []  expected answer: [], got user answer []","n0p user program succesfully executed. ","b1p constraint [for]  was not found.","g20p constraint [print] was found."],["g5p colon [:] in user answer","n0p expecting function [factorial] in answer found!","b20p user program failed to execute. ","b1p constraint [while]  was not found."]],"remarks":["","",""],"rel":"0"}}
[+] page accessed AUTOGRADER 2019-04-22 02:04:34am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 623609
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
+ holecheck was succesful; obtained curlop out:
{"type":"modA","error":"modA grades is empty. modA feedbacks is empty. ","attempt":{"test":{"id":"6","desc":"Test Exam 2","rel":"1","sub":"1","ques":[{"id":"3","desc":"Write a function called addThree() that takes three integer parameters and returns their sum.","topic":"Adding Integers","cons":[],"diff":"1","tests":["addThree(100, 200, 300)=600","addThree(-7, 0, 19)=12","addThree(-1,-1,-1)=-3","addThree(1,2,3)=6","addThree(4,5,6)=15","addThree(0,0,0)=0"]},{"id":"1","desc":"Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '\/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string \"error\".","topic":"Operators","cons":[],"diff":"2","tests":["operation('+',3,3)=6","operation('-',3,3)=0","operation('\/',3,3)=1","operation('*',3,3)=9","operation('%',3,3)=0","operation('?',3,3)=error","operation('hi',3,3)=error"]},{"id":"7","desc":"Descriptionnnss","topic":"TipTop","cons":["for","while"],"diff":"2","tests":["a()=d","a()=d"]}],"pts":["25","25","50"]},"answers":["def addThree(a, b, c):\n    return a + b + c","def operation(op, a, b):\n    if op == '+':\n        return a + b","return 'a'"],"grades":["25","6","6"],"feedback":[["g5p colon [:] in user answer","n0p expecting function [addThree] in answer found!","g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]","g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]","g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]","g20p called [addThree(1,2,3)], expected: [6], got user answer [6]","g20p called [addThree(4,5,6)], expected: [15], got user answer [15]","n0p user program succesfully executed. "],["g5p colon [:] in user answer","n0p expecting function [operation] in answer found!","g20p called [operation('+',3,3)], expected: [6], got user answer [6]","b5p called [operation('-',3,3)]  expected answer: [], got user answer []","b4p called [operation('\/',3,3)]  expected answer: [1], got user answer [1]","b3.2p called [operation('*',3,3)]  expected answer: [9], got user answer [9]","b2.6p called [operation('%',3,3)]  expected answer: [], got user answer []","b2p called [operation('?',3,3)]  expected answer: [error], got user answer [error]","b1.6p called [operation('hi',3,3)]  expected answer: [error], got user answer [error]","n0p user program succesfully executed. "],["b2.5p missing colon [:] in user answer","n0p expecting function [a] in answer found!","b38.4p user program failed to execute. ","b2p constraint [for]  was not found.","b1.6p constraint [while]  was not found."]],"remarks":["New Remark for ya","",""],"rel":"1"}}
[+] page accessed AUTOGRADER 2019-04-22 02:09:27am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 627561
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
+ holecheck was succesful; obtained curlop out:
{"type":"modA","error":"modA remarks object is empty. modA grades is empty. modA feedbacks is empty. ","attempt":{"test":{"id":"0","ques":[],"pts":[]},"answers":[],"grades":[],"feedback":[],"remarks":[],"rel":null}}
[+] page accessed AUTOGRADER 2019-04-22 02:14:11am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 628971
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-22 02:16:03am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 630117
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
+ holecheck was succesful; obtained curlop out:
{"type":"modA","error":"modA remarks object is empty. modA grades is empty. modA feedbacks is empty. ","attempt":{"test":{"id":"0","ques":[],"pts":[]},"answers":[],"grades":[],"feedback":[],"remarks":[],"rel":null}}
[+] page accessed AUTOGRADER 2019-04-22 02:17:29am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 631527
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
+ holecheck was succesful; obtained curlop out:
{"type":"modA","error":"modA grades is empty. modA feedbacks is empty. ","attempt":{"test":{"id":"5","desc":"Sample Quiz","rel":"1","sub":"1","ques":[{"id":"1","desc":"Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '\/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string \"error\".","topic":"Operators","cons":[],"diff":"2","tests":["operation('+',3,3)=6","operation('-',3,3)=0","operation('\/',3,3)=1","operation('*',3,3)=9","operation('%',3,3)=0","operation('?',3,3)=error","operation('hi',3,3)=error"]},{"id":"2","desc":"Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.","topic":"Printing string","cons":["for","print"],"diff":"3","tests":["strMult(\"hello\",1)=hello","strMult(\"up\", 4)=upupupup","strMult(\"hey\", 3)=heyheyhey","strMult(\"aba\", 2)=abaaba"]},{"id":"4","desc":"Write a function called factorial() which takes one integer parameter n, and returns n!. ","topic":"Math Factorial","cons":["while"],"diff":"4","tests":["factorial(2)=2","factorial(5)=120","factorial(3)=6","factorial(1)=1"]}],"pts":["50","25","25"]},"answers":["def operation(op, a, b):\n    if op == '+':\n        return a+b\n    elif op == '-':\n        return a-b\n    elif op == '*':\n        return a*b\n","def stringMult(s, n):\n    print s*n","def factorial(n)\n    acc = 1\n    for i in range(1,n+1):\n        acc *= i\n    return acc"],"grades":["21","4","4"],"feedback":[["g5p colon [:] in user answer","n0p expecting function [operation] in answer found!","g30p called [operation('+',3,3)], expected: [6], got user answer [6]","b10p called [operation('\/',3,3)]  expected answer: [1], got user answer [1]","g30p called [operation('*',3,3)], expected: [9], got user answer [9]","b8p called [operation('%',3,3)]  expected answer: [], got user answer []","b6.4p called [operation('?',3,3)]  expected answer: [error], got user answer [error]","b5.2p called [operation('hi',3,3)]  expected answer: [error], got user answer [error]","n0p user program succesfully executed. "],["g5p colon [:] in user answer","b1.25p expecting function name [strMult] in answer was not found!","g20p called [strMult(\"hello\",1)], expected: [hello], got user answer [hello]","b4.8p called [strMult(\"up\", 4)]  expected answer: [upupupup], got user answer [upupupup]","b3.8p called [strMult(\"hey\", 3)]  expected answer: [heyheyhey], got user answer [heyheyhey]","b3p called [strMult(\"aba\", 2)]  expected answer: [abaaba], got user answer [abaaba]","b2.4p called []  expected answer: [], got user answer []","b2p called []  expected answer: [], got user answer []","b1.6p called []  expected answer: [], got user answer []","b1.2p called []  expected answer: [], got user answer []","n0p user program succesfully executed. ","b1p constraint [for]  was not found.","g20p constraint [print] was found."],["g5p colon [:] in user answer","n0p expecting function [factorial] in answer found!","b20p user program failed to execute. ","b1p constraint [while]  was not found."]],"remarks":["Dun, dun, dun","",""],"rel":"0"}}
[+] page accessed AUTOGRADER 2019-04-22 02:22:51am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 636014
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
+ holecheck was succesful; obtained curlop out:
{"type":"modA","error":"modA grades is empty. modA feedbacks is empty. ","attempt":{"test":{"id":"5","desc":"Sample Quiz","rel":"1","sub":"1","ques":[{"id":"1","desc":"Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '\/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string \"error\".","topic":"Operators","cons":[],"diff":"2","tests":["operation('+',3,3)=6","operation('-',3,3)=0","operation('\/',3,3)=1","operation('*',3,3)=9","operation('%',3,3)=0","operation('?',3,3)=error","operation('hi',3,3)=error"]},{"id":"2","desc":"Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.","topic":"Printing string","cons":["for","print"],"diff":"3","tests":["strMult(\"hello\",1)=hello","strMult(\"up\", 4)=upupupup","strMult(\"hey\", 3)=heyheyhey","strMult(\"aba\", 2)=abaaba"]},{"id":"4","desc":"Write a function called factorial() which takes one integer parameter n, and returns n!. ","topic":"Math Factorial","cons":["while"],"diff":"4","tests":["factorial(2)=2","factorial(5)=120","factorial(3)=6","factorial(1)=1"]}],"pts":["50","25","25"]},"answers":["def operation(op, a, b):\n    if op == '+':\n        return a+b\n    elif op == '-':\n        return a-b\n    elif op == '*':\n        return a*b\n","def stringMult(s, n):\n    print s*n","def factorial(n)\n    acc = 1\n    for i in range(1,n+1):\n        acc *= i\n    return acc"],"grades":["21","4","4"],"feedback":[["g5p colon [:] in user answer","n0p expecting function [operation] in answer found!","g30p called [operation('+',3,3)], expected: [6], got user answer [6]","b10p called [operation('\/',3,3)]  expected answer: [1], got user answer [1]","g30p called [operation('*',3,3)], expected: [9], got user answer [9]","b8p called [operation('%',3,3)]  expected answer: [], got user answer []","b6.4p called [operation('?',3,3)]  expected answer: [error], got user answer [error]","b5.2p called [operation('hi',3,3)]  expected answer: [error], got user answer [error]","n0p user program succesfully executed. "],["g5p colon [:] in user answer","b1.25p expecting function name [strMult] in answer was not found!","g20p called [strMult(\"hello\",1)], expected: [hello], got user answer [hello]","b4.8p called [strMult(\"up\", 4)]  expected answer: [upupupup], got user answer [upupupup]","b3.8p called [strMult(\"hey\", 3)]  expected answer: [heyheyhey], got user answer [heyheyhey]","b3p called [strMult(\"aba\", 2)]  expected answer: [abaaba], got user answer [abaaba]","b2.4p called []  expected answer: [], got user answer []","b2p called []  expected answer: [], got user answer []","b1.6p called []  expected answer: [], got user answer []","b1.2p called []  expected answer: [], got user answer []","n0p user program succesfully executed. ","b1p constraint [for]  was not found.","g20p constraint [print] was found."],["g5p colon [:] in user answer","n0p expecting function [factorial] in answer found!","b20p user program failed to execute. ","b1p constraint [while]  was not found."]],"remarks":["Dun, dun, dun","Uh, oh",""],"rel":"1"}}
[+] page accessed AUTOGRADER 2019-04-22 02:24:59am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 640507
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-22 02:28:11am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 641653
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-22 02:41:54am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 642799
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-22 02:46:04am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 643945
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-22 02:46:11am
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 645091
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 02:11:33pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 646237
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 02:12:17pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 647383
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 02:12:27pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 648529
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 02:12:53pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 649675
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 03:42:23pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 650821
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 03:42:33pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 651967
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 03:42:39pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 653113
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 03:42:48pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 654259
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 03:56:24pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 655405
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
+ updatePoints() 2 was called. Received:  

+ modA was able to retrieve all rows from feedback for testId =  and qId = 
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 
    [qId] => 
    [feedback] => 
    [points] => 
    [max] => 
)

[+] page accessed AUTOGRADER 2019-04-25 05:18:20pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 656873
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 05:18:32pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 658019
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 05:18:37pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 659165
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 05:22:56pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 660311
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 05:23:05pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 661457
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 05:24:05pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 662603
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)=six
                            [1] => stringSub(9, 9)=zero
                            [2] => stringSub(50,9)=fourty-nine
                            [3] => stringSub(5,2)=three
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c):
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)=six
                    [1] => stringSub(9, 9)=zero
                    [2] => stringSub(50,9)=fourty-nine
                    [3] => stringSub(5,2)=three
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c):
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g50p colon [:] in user answer
    [points] => 10
    [max] => 50
)

+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function [stringSub] in answer found!
    [subpoints] => 0
    [max] => .05
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p expecting function [stringSub] in answer found!
    [points] => 10
    [max] => 1
)

+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)=six
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)=zero
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)=fourty-nine
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)=three
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
    [3] => three
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ comparing stringSub(-3, -9)=six with output : six
+ comparing c: six with output : six
pass!
+ calling updatePoints() to provide feedback
+ gp program called stringSub(-3, -9), expected: six, got user answer [six]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp program called stringSub(-3, -9), expected: six, got user answer [six]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(9, 9)=zero with output : zero
+ comparing c: zero with output : zero
pass!
+ calling updatePoints() to provide feedback
+ gp program called stringSub(9, 9), expected: zero, got user answer [zero]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp program called stringSub(9, 9), expected: zero, got user answer [zero]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(50,9)=fourty-nine with output : fourty-nine
+ comparing c: nothing with output : fourty-nine
fail!
+ calling updatePoints() to provide feedback
+ bp called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
    [subpoints] => .20
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
    [points] => 8
    [max] => 2
)

+ comparing stringSub(5,2)=three with output : three
+ comparing c: three with output : three
pass!
+ calling updatePoints() to provide feedback
+ gp program called stringSub(5,2), expected: three, got user answer [three]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp program called stringSub(5,2), expected: three, got user answer [three]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => . 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 0
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 0
)

+  page accessed by getCons 2019-04-25 05:24:07pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g50p colon [:] in user answer
    [points] => 10
    [max] => 50
)

+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function [addThree] in answer found!
    [subpoints] => 0
    [max] => .05
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p expecting function [addThree] in answer found!
    [points] => 10
    [max] => 1
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(100, 200, 300), expected: 600, got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(100, 200, 300), expected: 600, got user answer [600]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 10
    [max] => 2
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(-7, 0, 19), expected: 12, got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 10
    [max] => 2
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 10
    [max] => 2
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(1,2,3), expected: 6, got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(1,2,3), expected: 6, got user answer [6]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 10
    [max] => 2
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(4,5,6), expected: 15, got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(4,5,6), expected: 15, got user answer [15]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 10
    [max] => 2
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => . 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 10
    [max] => 0
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 10
    [max] => 0
)

+  page accessed by getCons 2019-04-25 05:24:09pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed
[+] page accessed AUTOGRADER 2019-04-25 05:24:19pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 692636
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 05:28:29pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 693782
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 05:29:14pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 694928
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)=six
                            [1] => stringSub(9, 9)=zero
                            [2] => stringSub(50,9)=fourty-nine
                            [3] => stringSub(5,2)=three
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c):
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)=six
                    [1] => stringSub(9, 9)=zero
                    [2] => stringSub(50,9)=fourty-nine
                    [3] => stringSub(5,2)=three
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c):
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g50p colon [:] in user answer
    [points] => 10
    [max] => 50
)

+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function [stringSub] in answer found!
    [subpoints] => 0
    [max] => .05
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p expecting function [stringSub] in answer found!
    [points] => 10
    [max] => 1
)

+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)=six
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)=zero
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)=fourty-nine
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)=three
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
    [3] => three
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ comparing stringSub(-3, -9)=six with output : six
+ comparing c: six with output : six
pass!
+ calling updatePoints() to provide feedback
+ gp program called stringSub(-3, -9), expected: six, got user answer [six]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp program called stringSub(-3, -9), expected: six, got user answer [six]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(9, 9)=zero with output : zero
+ comparing c: zero with output : zero
pass!
+ calling updatePoints() to provide feedback
+ gp program called stringSub(9, 9), expected: zero, got user answer [zero]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp program called stringSub(9, 9), expected: zero, got user answer [zero]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(50,9)=fourty-nine with output : fourty-nine
+ comparing c: nothing with output : fourty-nine
fail!
+ calling updatePoints() to provide feedback
+ bp called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
    [subpoints] => .20
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
    [points] => 8
    [max] => 2
)

+ comparing stringSub(5,2)=three with output : three
+ comparing c: three with output : three
pass!
+ calling updatePoints() to provide feedback
+ gp program called stringSub(5,2), expected: three, got user answer [three]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp program called stringSub(5,2), expected: three, got user answer [three]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => . 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 0
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 0
)

+  page accessed by getCons 2019-04-25 05:29:16pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 5
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g50p colon [:] in user answer
    [points] => 10
    [max] => 50
)

+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function [addThree] in answer found!
    [subpoints] => 0
    [max] => .05
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p expecting function [addThree] in answer found!
    [points] => 10
    [max] => 1
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(100, 200, 300), expected: 600, got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(100, 200, 300), expected: 600, got user answer [600]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 10
    [max] => 2
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(-7, 0, 19), expected: 12, got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 10
    [max] => 2
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 10
    [max] => 2
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(1,2,3), expected: 6, got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(1,2,3), expected: 6, got user answer [6]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 10
    [max] => 2
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(4,5,6), expected: 15, got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(4,5,6), expected: 15, got user answer [15]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 10
    [max] => 2
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => . 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 10
    [max] => 0
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 10
    [max] => 0
)

+  page accessed by getCons 2019-04-25 05:29:17pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed
[+] page accessed AUTOGRADER 2019-04-25 05:29:26pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 724961
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 05:32:32pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 726107
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 05:34:05pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 727253
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)=six
                            [1] => stringSub(9, 9)=zero
                            [2] => stringSub(50,9)=fourty-nine
                            [3] => stringSub(5,2)=three
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c):
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)=six
                    [1] => stringSub(9, 9)=zero
                    [2] => stringSub(50,9)=fourty-nine
                    [3] => stringSub(5,2)=three
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c):
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => .05
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g1p colon [:] in user answer
    [points] => 10
    [max] => 1
)

+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function [stringSub] in answer found!
    [subpoints] => 0
    [max] => .05
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p expecting function [stringSub] in answer found!
    [points] => 10
    [max] => 1
)

+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)=six
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)=zero
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)=fourty-nine
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)=three
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
    [3] => three
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ comparing stringSub(-3, -9)=six with output : six
+ comparing c: six with output : six
pass!
+ calling updatePoints() to provide feedback
+ gp program called stringSub(-3, -9), expected: six, got user answer [six]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp program called stringSub(-3, -9), expected: six, got user answer [six]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(9, 9)=zero with output : zero
+ comparing c: zero with output : zero
pass!
+ calling updatePoints() to provide feedback
+ gp program called stringSub(9, 9), expected: zero, got user answer [zero]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp program called stringSub(9, 9), expected: zero, got user answer [zero]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(50,9)=fourty-nine with output : fourty-nine
+ comparing c: nothing with output : fourty-nine
fail!
+ calling updatePoints() to provide feedback
+ bp called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
    [subpoints] => .20
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
    [points] => 8
    [max] => 2
)

+ comparing stringSub(5,2)=three with output : three
+ comparing c: three with output : three
pass!
+ calling updatePoints() to provide feedback
+ gp program called stringSub(5,2), expected: three, got user answer [three]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp program called stringSub(5,2), expected: three, got user answer [three]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => . 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 0
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 0
)

+  page accessed by getCons 2019-04-25 05:34:08pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => .05
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p colon [:] in user answer
    [points] => 10
    [max] => 1
)

+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function [addThree] in answer found!
    [subpoints] => 0
    [max] => .05
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p expecting function [addThree] in answer found!
    [points] => 10
    [max] => 1
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(100, 200, 300), expected: 600, got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(100, 200, 300), expected: 600, got user answer [600]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 10
    [max] => 2
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(-7, 0, 19), expected: 12, got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 10
    [max] => 2
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 10
    [max] => 2
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(1,2,3), expected: 6, got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(1,2,3), expected: 6, got user answer [6]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 10
    [max] => 2
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(4,5,6), expected: 15, got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(4,5,6), expected: 15, got user answer [15]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 10
    [max] => 2
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => . 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 10
    [max] => 0
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 10
    [max] => 0
)

+  page accessed by getCons 2019-04-25 05:34:09pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed
[+] page accessed AUTOGRADER 2019-04-25 05:34:16pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 757286
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 05:38:01pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 758432
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 05:38:40pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 759578
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)=six
                            [1] => stringSub(9, 9)=zero
                            [2] => stringSub(50,9)=fourty-nine
                            [3] => stringSub(5,2)=three
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c)
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)=six
                    [1] => stringSub(9, 9)=zero
                    [2] => stringSub(50,9)=fourty-nine
                    [3] => stringSub(5,2)=three
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c)
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 0
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g0p colon [:] in user answer
    [points] => 10
    [max] => 0
)

+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function [stringSub] in answer found!
    [subpoints] => 0
    [max] => .05
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p expecting function [stringSub] in answer found!
    [points] => 10
    [max] => 1
)

+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)=six
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)=zero
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)=fourty-nine
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)=three
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
    [3] => three
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ comparing stringSub(-3, -9)=six with output : six
+ comparing c: six with output : six
pass!
+ calling updatePoints() to provide feedback
+ gp program called stringSub(-3, -9), expected: six, got user answer [six]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp program called stringSub(-3, -9), expected: six, got user answer [six]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(9, 9)=zero with output : zero
+ comparing c: zero with output : zero
pass!
+ calling updatePoints() to provide feedback
+ gp program called stringSub(9, 9), expected: zero, got user answer [zero]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp program called stringSub(9, 9), expected: zero, got user answer [zero]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(50,9)=fourty-nine with output : fourty-nine
+ comparing c: nothing with output : fourty-nine
fail!
+ calling updatePoints() to provide feedback
+ bp called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
    [subpoints] => .20
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p called [stringSub(50,9)]  expected answer: [fourty-nine], got user answer [fourty-nine]
    [points] => 8
    [max] => 2
)

+ comparing stringSub(5,2)=three with output : three
+ comparing c: three with output : three
pass!
+ calling updatePoints() to provide feedback
+ gp program called stringSub(5,2), expected: three, got user answer [three]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp program called stringSub(5,2), expected: three, got user answer [three]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p program called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => . 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 0
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 0
)

+  page accessed by getCons 2019-04-25 05:38:42pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
+ colon was not found in user answer
+ new answer: 
 def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => bp missing colon [:] in user answer
    [subpoints] => .05
    [max] => .05
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => b1p missing colon [:] in user answer
    [points] => 9
    [max] => 1
)

+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function [addThree] in answer found!
    [subpoints] => 0
    [max] => .05
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p expecting function [addThree] in answer found!
    [points] => 9
    [max] => 1
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(100, 200, 300), expected: 600, got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(100, 200, 300), expected: 600, got user answer [600]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 2
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(-7, 0, 19), expected: 12, got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 2
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 2
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(1,2,3), expected: 6, got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(1,2,3), expected: 6, got user answer [6]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 2
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp program called addThree(4,5,6), expected: 15, got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp program called addThree(4,5,6), expected: 15, got user answer [15]
    [subpoints] => 0
    [max] => .20
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 9
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g2p program called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 9
    [max] => 2
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => . 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 9
    [max] => 0
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 9
    [max] => 0
)

+  page accessed by getCons 2019-04-25 05:38:44pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed
[+] page accessed AUTOGRADER 2019-04-25 05:38:49pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 789662
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 06:25:43pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 790808
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 07:15:38pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 791954
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 07:16:00pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 793100
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 07:18:54pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 794246
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 07:19:05pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 795392
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 07:19:18pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 796538
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 07:24:41pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 797684
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 07:25:12pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 798830
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)=six
                            [1] => stringSub(9, 9)=zero
                            [2] => stringSub(50,9)=fourty-nine
                            [3] => stringSub(5,2)=three
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c)
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)=six
                    [1] => stringSub(9, 9)=zero
                    [2] => stringSub(50,9)=fourty-nine
                    [3] => stringSub(5,2)=three
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c)
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 0.10
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g1p colon [:] in user answer
    [points] => 10
    [max] => 1
)

+  page accessed by getCons 2019-04-25 07:25:13pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed. cons returned empty.  
+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function [stringSub] in answer found!
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p expecting function [stringSub] in answer found!
    [points] => 10
    [max] => 2
)

+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)=six
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)=zero
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)=fourty-nine
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)=three
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
    [3] => three
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ comparing stringSub(-3, -9)=six with output : six
+ comparing c: six with output : six
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(-3, -9), expected: six, got user answer [six]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(-3, -9), expected: six, got user answer [six]
    [subpoints] => 0.175
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 8
    [max] => 2
)

+ comparing stringSub(9, 9)=zero with output : zero
+ comparing c: zero with output : zero
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(9, 9), expected: zero, got user answer [zero]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(9, 9), expected: zero, got user answer [zero]
    [subpoints] => 0.175
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 7
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 7
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 7
    [max] => 2
)

+ comparing stringSub(50,9)=fourty-nine with output : fourty-nine
+ comparing c: nothing with output : fourty-nine
fail!
+ calling updatePoints() to provide feedback
+ bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [subpoints] => 0.175
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b1p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 6
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b1p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 6
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b1p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 6
    [max] => 2
)

+ comparing stringSub(5,2)=three with output : three
+ comparing c: three with output : three
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(5,2), expected: three, got user answer [three]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(5,2), expected: three, got user answer [three]
    [subpoints] => 0.175
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(5,2), expected: three, got user answer [three]
    [points] => 5
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(5,2), expected: three, got user answer [three]
    [points] => 5
    [max] => 2
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => . 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 5
    [max] => 0
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 5
    [max] => 0
)

counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
+ colon was not found in user answer
+ new answer: 
 def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => bp missing colon [:] in user answer
    [subpoints] => .10
    [max] => .10
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => b1p missing colon [:] in user answer
    [points] => 9
    [max] => 1
)

+  page accessed by getCons 2019-04-25 07:25:15pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed. cons returned empty.  
+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function [addThree] in answer found!
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p expecting function [addThree] in answer found!
    [points] => 9
    [max] => 2
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [subpoints] => 0.11666666666667
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 8
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 8
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 8
    [max] => 1
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [subpoints] => 0.11666666666667
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 7
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 7
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 7
    [max] => 1
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [subpoints] => 0.11666666666667
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 6
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 6
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 6
    [max] => 1
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(1,2,3), expected: 6, got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(1,2,3), expected: 6, got user answer [6]
    [subpoints] => 0.11666666666667
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 5
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 5
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 5
    [max] => 1
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(4,5,6), expected: 15, got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(4,5,6), expected: 15, got user answer [15]
    [subpoints] => 0.11666666666667
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 4
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 4
    [max] => 1
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => . 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 4
    [max] => 0
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 4
    [max] => 0
)

[+] page accessed AUTOGRADER 2019-04-25 07:25:21pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 829083
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 07:36:32pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 830229
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 07:37:01pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 831375
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)=six
                            [1] => stringSub(9, 9)=zero
                            [2] => stringSub(50,9)=fourty-nine
                            [3] => stringSub(5,2)=three
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c)
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)=six
                    [1] => stringSub(9, 9)=zero
                    [2] => stringSub(50,9)=fourty-nine
                    [3] => stringSub(5,2)=three
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c)
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 0.10
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g1p colon [:] in user answer
    [points] => 10
    [max] => 1
)

+  page accessed by getCons 2019-04-25 07:37:02pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed. cons returned empty.  
+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function [stringSub] in answer found!
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p expecting function [stringSub] in answer found!
    [points] => 10
    [max] => 2
)

+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)=six
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)=zero
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)=fourty-nine
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)=three
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
    [3] => three
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ comparing stringSub(-3, -9)=six with output : six
+ comparing c: six with output : six
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(-3, -9), expected: six, got user answer [six]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(-3, -9), expected: six, got user answer [six]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(9, 9)=zero with output : zero
+ comparing c: zero with output : zero
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(9, 9), expected: zero, got user answer [zero]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(9, 9), expected: zero, got user answer [zero]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(50,9)=fourty-nine with output : fourty-nine
+ comparing c: nothing with output : fourty-nine
fail!
+ calling updatePoints() to provide feedback
+ bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [subpoints] => 0.175
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ comparing stringSub(5,2)=three with output : three
+ comparing c: three with output : three
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(5,2), expected: three, got user answer [three]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(5,2), expected: three, got user answer [three]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => . 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 0
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 0
)

counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
+ colon was not found in user answer
+ new answer: 
 def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => bp missing colon [:] in user answer
    [subpoints] => .10
    [max] => .10
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => b1p missing colon [:] in user answer
    [points] => 9
    [max] => 1
)

+  page accessed by getCons 2019-04-25 07:37:04pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed. cons returned empty.  
+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function [addThree] in answer found!
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p expecting function [addThree] in answer found!
    [points] => 9
    [max] => 2
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 1
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 1
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 1
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(1,2,3), expected: 6, got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(1,2,3), expected: 6, got user answer [6]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 1
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(4,5,6), expected: 15, got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(4,5,6), expected: 15, got user answer [15]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 9
    [max] => 1
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => . 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 9
    [max] => 0
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 9
    [max] => 0
)

[+] page accessed AUTOGRADER 2019-04-25 07:37:10pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 861547
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
+ updatePoints() 2 was called. Received:  

+ modA was able to retrieve all rows from feedback for testId =  and qId = 
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 
    [qId] => 
    [feedback] => 0
    [points] => 
    [max] => 
)

[+] page accessed AUTOGRADER 2019-04-25 07:42:20pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 863016
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 07:43:01pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 864162
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)=six
                            [1] => stringSub(9, 9)=zero
                            [2] => stringSub(50,9)=fourty-nine
                            [3] => stringSub(5,2)=three
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c)
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)=six
                    [1] => stringSub(9, 9)=zero
                    [2] => stringSub(50,9)=fourty-nine
                    [3] => stringSub(5,2)=three
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c)
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 0.10
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g1p colon [:] in user answer
    [points] => 10
    [max] => 1
)

+  page accessed by getCons 2019-04-25 07:43:03pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed. cons returned empty.  
+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function [stringSub] in answer found!
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p expecting function [stringSub] in answer found!
    [points] => 10
    [max] => 2
)

+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)=six
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)=zero
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)=fourty-nine
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)=three
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
    [3] => three
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ comparing stringSub(-3, -9)=six with output : six
+ comparing c: six with output : six
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(-3, -9), expected: six, got user answer [six]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(-3, -9), expected: six, got user answer [six]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(9, 9)=zero with output : zero
+ comparing c: zero with output : zero
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(9, 9), expected: zero, got user answer [zero]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(9, 9), expected: zero, got user answer [zero]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(50,9)=fourty-nine with output : fourty-nine
+ comparing c: nothing with output : fourty-nine
fail!
+ calling updatePoints() to provide feedback
+ bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [subpoints] => 0.175
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ comparing stringSub(5,2)=three with output : three
+ comparing c: three with output : three
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(5,2), expected: three, got user answer [three]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(5,2), expected: three, got user answer [three]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => . 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 0
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 0
)

counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
+ colon was not found in user answer
+ new answer: 
 def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => bp missing colon [:] in user answer
    [subpoints] => .10
    [max] => .10
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => b1p missing colon [:] in user answer
    [points] => 9
    [max] => 1
)

+  page accessed by getCons 2019-04-25 07:43:05pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed. cons returned empty.  
+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function [addThree] in answer found!
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p expecting function [addThree] in answer found!
    [points] => 9
    [max] => 2
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 1
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 1
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 1
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(1,2,3), expected: 6, got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(1,2,3), expected: 6, got user answer [6]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 1
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(4,5,6), expected: 15, got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(4,5,6), expected: 15, got user answer [15]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 9
    [max] => 1
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => . 80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 9
    [max] => 0
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 9
    [max] => 0
)

[+] page accessed AUTOGRADER 2019-04-25 07:43:27pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 894334
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
+ updatePoints() 2 was called. Received:  

+ modA was able to retrieve all rows from feedback for testId =  and qId = 
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 
    [qId] => 
    [feedback] => 0
    [points] => 
    [max] => 
)

[+] page accessed AUTOGRADER 2019-04-25 08:09:44pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 895803
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 08:10:12pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 896949
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)=six
                            [1] => stringSub(9, 9)=zero
                            [2] => stringSub(50,9)=fourty-nine
                            [3] => stringSub(5,2)=three
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c)
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)=six
                    [1] => stringSub(9, 9)=zero
                    [2] => stringSub(50,9)=fourty-nine
                    [3] => stringSub(5,2)=three
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c)
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 0.10
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g1p colon [:] in user answer
    [points] => 10
    [max] => 1
)

+  page accessed by getCons 2019-04-25 08:10:13pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed. cons returned empty.  
+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ the function was found in the user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function: stringSub, function found!
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p expecting function: stringSub, function found!
    [points] => 10
    [max] => 2
)

+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)=six
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)=zero
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)=fourty-nine
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)=three
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
    [3] => three
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ comparing stringSub(-3, -9)=six with output : six
+ comparing c: six with output : six
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(-3, -9), expected: six, got user answer [six]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(-3, -9), expected: six, got user answer [six]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(9, 9)=zero with output : zero
+ comparing c: zero with output : zero
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(9, 9), expected: zero, got user answer [zero]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(9, 9), expected: zero, got user answer [zero]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(50,9)=fourty-nine with output : fourty-nine
+ comparing c: nothing with output : fourty-nine
fail!
+ calling updatePoints() to provide feedback
+ bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [subpoints] => 0.175
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ comparing stringSub(5,2)=three with output : three
+ comparing c: three with output : three
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(5,2), expected: three, got user answer [three]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(5,2), expected: three, got user answer [three]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => .80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 8
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 8
)

counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
+ colon was not found in user answer
+ new answer: 
 def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => bp missing colon [:] in user answer
    [subpoints] => .10
    [max] => .10
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => b1p missing colon [:] in user answer
    [points] => 9
    [max] => 1
)

+  page accessed by getCons 2019-04-25 08:10:15pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed. cons returned empty.  
+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ the function was found in the user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function: addThree, function found!
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p expecting function: addThree, function found!
    [points] => 9
    [max] => 2
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 1
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 1
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 1
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(1,2,3), expected: 6, got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(1,2,3), expected: 6, got user answer [6]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 1
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(4,5,6), expected: 15, got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(4,5,6), expected: 15, got user answer [15]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 9
    [max] => 1
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => .80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 9
    [max] => 8
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 9
    [max] => 8
)

[+] page accessed AUTOGRADER 2019-04-25 08:10:25pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 927203
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 08:15:18pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 928349
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 08:16:00pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 929495
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 08:16:01pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 930641
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 08:16:23pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 931787
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)=six
                            [1] => stringSub(9, 9)=zero
                            [2] => stringSub(50,9)=fourty-nine
                            [3] => stringSub(5,2)=three
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c)
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)=six
                    [1] => stringSub(9, 9)=zero
                    [2] => stringSub(50,9)=fourty-nine
                    [3] => stringSub(5,2)=three
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c)
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 0.10
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g10p colon [:] in user answer
    [points] => 10
    [max] => 10
)

+  page accessed by getCons 2019-04-25 08:16:25pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed. cons returned empty.  
+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ the function was found in the user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function: stringSub, function found!
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p expecting function: stringSub, function found!
    [points] => 10
    [max] => 20
)

+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)=six
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)=zero
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)=fourty-nine
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)=three
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
    [3] => three
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ comparing stringSub(-3, -9)=six with output : six
+ comparing c: six with output : six
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(-3, -9), expected: six, got user answer [six]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(-3, -9), expected: six, got user answer [six]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(9, 9)=zero with output : zero
+ comparing c: zero with output : zero
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(9, 9), expected: zero, got user answer [zero]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(9, 9), expected: zero, got user answer [zero]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(50,9)=fourty-nine with output : fourty-nine
+ comparing c: nothing with output : fourty-nine
fail!
+ calling updatePoints() to provide feedback
+ bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [subpoints] => 0.175
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ comparing stringSub(5,2)=three with output : three
+ comparing c: three with output : three
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(5,2), expected: three, got user answer [three]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(5,2), expected: three, got user answer [three]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => .80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 80
)

counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
+ colon was not found in user answer
+ new answer: 
 def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => bp missing colon [:] in user answer
    [subpoints] => .10
    [max] => .10
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => b1p missing colon [:] in user answer
    [points] => 9
    [max] => 10
)

+  page accessed by getCons 2019-04-25 08:16:26pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed. cons returned empty.  
+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ the function was found in the user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function: addThree, function found!
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p expecting function: addThree, function found!
    [points] => 9
    [max] => 20
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 1
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 1
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 1
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(1,2,3), expected: 6, got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(1,2,3), expected: 6, got user answer [6]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 1
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(4,5,6), expected: 15, got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(4,5,6), expected: 15, got user answer [15]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 9
    [max] => 1
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => .80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 9
    [max] => 80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 9
    [max] => 80
)

[+] page accessed AUTOGRADER 2019-04-25 08:16:36pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 962050
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 08:40:42pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 963196
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 08:40:45pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 964342
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 08:41:42pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 965488
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)=six
                            [1] => stringSub(9, 9)=zero
                            [2] => stringSub(50,9)=fourty-nine
                            [3] => stringSub(5,2)=three
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c)
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)=six
                    [1] => stringSub(9, 9)=zero
                    [2] => stringSub(50,9)=fourty-nine
                    [3] => stringSub(5,2)=three
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c)
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 0.10
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g0p colon [:] in user answer
    [points] => 10
    [max] => 0.10
)

+  page accessed by getCons 2019-04-25 08:41:44pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed. cons returned empty.  
+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ the function was found in the user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function: stringSub, function found!
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p expecting function: stringSub, function found!
    [points] => 10
    [max] => 0.2
)

+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)=six
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)=zero
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)=fourty-nine
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)=three
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
    [3] => three
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+execom() calculated funperc: 0.7, max: 0.175
+execom() calculated funperc: 0.7, max: 0.175
+ comparing stringSub(-3, -9)=six with output : six
+ comparing c: six with output : six
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(-3, -9), expected: six, got user answer [six]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(-3, -9), expected: six, got user answer [six]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g0p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 0.175
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g0p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 0.175
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g0p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 0.175
)

+ comparing stringSub(9, 9)=zero with output : zero
+ comparing c: zero with output : zero
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(9, 9), expected: zero, got user answer [zero]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(9, 9), expected: zero, got user answer [zero]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g0p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 0.175
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g0p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 0.175
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g0p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 0.175
)

+ comparing stringSub(50,9)=fourty-nine with output : fourty-nine
+ comparing c: nothing with output : fourty-nine
fail!
+ calling updatePoints() to provide feedback
+ bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [subpoints] => 0.175
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 0.175
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 0.175
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 0.175
)

+ comparing stringSub(5,2)=three with output : three
+ comparing c: three with output : three
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(5,2), expected: three, got user answer [three]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(5,2), expected: three, got user answer [three]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g0p python called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 0.175
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g0p python called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 0.175
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => .80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => .80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => .80
)

counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
+ colon was not found in user answer
+ new answer: 
 def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => bp missing colon [:] in user answer
    [subpoints] => .10
    [max] => .10
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => b1p missing colon [:] in user answer
    [points] => 9
    [max] => .10
)

+  page accessed by getCons 2019-04-25 08:41:45pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed. cons returned empty.  
+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ the function was found in the user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function: addThree, function found!
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p expecting function: addThree, function found!
    [points] => 9
    [max] => 0.2
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+execom() calculated funperc: 0.7, max: 0.11666666666667
+execom() calculated funperc: 0.7, max: 0.11666666666667
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g0p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 0.11666666666667
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g0p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 0.11666666666667
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g0p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 0.11666666666667
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g0p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 0.11666666666667
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g0p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 0.11666666666667
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g0p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 0.11666666666667
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g0p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 0.11666666666667
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g0p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 0.11666666666667
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g0p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 0.11666666666667
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(1,2,3), expected: 6, got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(1,2,3), expected: 6, got user answer [6]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g0p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 0.11666666666667
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g0p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 0.11666666666667
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g0p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 0.11666666666667
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(4,5,6), expected: 15, got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(4,5,6), expected: 15, got user answer [15]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g0p python called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 9
    [max] => 0.11666666666667
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g0p python called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 9
    [max] => 0.11666666666667
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => .80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 9
    [max] => .80
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 9
    [max] => .80
)

[+] page accessed AUTOGRADER 2019-04-25 08:41:51pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 995286
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 08:45:54pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 996432
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 08:46:16pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 997578
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)=six
                            [1] => stringSub(9, 9)=zero
                            [2] => stringSub(50,9)=fourty-nine
                            [3] => stringSub(5,2)=three
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c)
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)=six
                    [1] => stringSub(9, 9)=zero
                    [2] => stringSub(50,9)=fourty-nine
                    [3] => stringSub(5,2)=three
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c)
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 0.10
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error. failure in updatePoints() in autograder.
+  page accessed by getCons 2019-04-25 08:46:18pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed. cons returned empty.  
+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ the function was found in the user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function: stringSub, function found!
    [subpoints] => 0
    [max] => 0.2
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error. failure in updatePoints() in autograder.
+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)=six
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)=zero
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)=fourty-nine
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)=three
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
    [3] => three
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+execom() calculated funperc: 0.7, max: 0.175
+execom() calculated funperc: 0.7, max: 0.175
+ comparing stringSub(-3, -9)=six with output : six
+ comparing c: six with output : six
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(-3, -9), expected: six, got user answer [six]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(-3, -9), expected: six, got user answer [six]
    [subpoints] => 0
    [max] => 0.175
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error; failure to execute updatePoints('bullet')
+ error; failure to execute updatePoints('bullet')
+ comparing stringSub(9, 9)=zero with output : zero
+ comparing c: zero with output : zero
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(9, 9), expected: zero, got user answer [zero]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(9, 9), expected: zero, got user answer [zero]
    [subpoints] => 0
    [max] => 0.175
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error; failure to execute updatePoints('bullet')
+ error; failure to execute updatePoints('bullet')
+ comparing stringSub(50,9)=fourty-nine with output : fourty-nine
+ comparing c: nothing with output : fourty-nine
fail!
+ calling updatePoints() to provide feedback
+ bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [subpoints] => 0.175
    [max] => 0.175
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error; failure to execute updatePoints('bullet')
+ error; failure to execute updatePoints('bullet')
+ comparing stringSub(5,2)=three with output : three
+ comparing c: three with output : three
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(5,2), expected: three, got user answer [three]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(5,2), expected: three, got user answer [three]
    [subpoints] => 0
    [max] => 0.175
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error; failure to execute updatePoints('bullet')
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => .80
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+error; failure to execute updatePoints('bullet4') for fail execom()
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
+ colon was not found in user answer
+ new answer: 
 def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => bp missing colon [:] in user answer
    [subpoints] => .10
    [max] => .10
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error. failure in updatePoints() in autograder.
+  page accessed by getCons 2019-04-25 08:46:19pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed. cons returned empty.  
+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ the function was found in the user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function: addThree, function found!
    [subpoints] => 0
    [max] => 0.2
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error. failure in updatePoints() in autograder.
+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+execom() calculated funperc: 0.7, max: 0.11666666666667
+execom() calculated funperc: 0.7, max: 0.11666666666667
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [subpoints] => 0
    [max] => 0.11666666666667
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error; failure to execute updatePoints('bullet')
+ error; failure to execute updatePoints('bullet')
+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [subpoints] => 0
    [max] => 0.11666666666667
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error; failure to execute updatePoints('bullet')
+ error; failure to execute updatePoints('bullet')
+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [subpoints] => 0
    [max] => 0.11666666666667
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error; failure to execute updatePoints('bullet')
+ error; failure to execute updatePoints('bullet')
+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(1,2,3), expected: 6, got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(1,2,3), expected: 6, got user answer [6]
    [subpoints] => 0
    [max] => 0.11666666666667
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error; failure to execute updatePoints('bullet')
+ error; failure to execute updatePoints('bullet')
+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(4,5,6), expected: 15, got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(4,5,6), expected: 15, got user answer [15]
    [subpoints] => 0
    [max] => 0.11666666666667
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error; failure to execute updatePoints('bullet')
substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => .80
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+error; failure to execute updatePoints('bullet4') for fail execom()
[+] page accessed AUTOGRADER 2019-04-25 08:46:26pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1020122
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 08:46:33pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1021269
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 08:46:46pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1022416
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 08:47:17pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1023563
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)=six
                            [1] => stringSub(9, 9)=zero
                            [2] => stringSub(50,9)=fourty-nine
                            [3] => stringSub(5,2)=three
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c)
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)=six
                    [1] => stringSub(9, 9)=zero
                    [2] => stringSub(50,9)=fourty-nine
                    [3] => stringSub(5,2)=three
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c)
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 0.10
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error. failure in updatePoints() in autograder.
+  page accessed by getCons 2019-04-25 08:47:19pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed. cons returned empty.  
+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ the function was found in the user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function: stringSub, function found!
    [subpoints] => 0
    [max] => 0.2
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error. failure in updatePoints() in autograder.
+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)=six
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)=zero
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)=fourty-nine
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)=three
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
    [3] => three
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+execom() calculated funperc: 0.7, max: 0.175
+execom() calculated funperc: 0.7, max: 0.175
+ comparing stringSub(-3, -9)=six with output : six
+ comparing c: six with output : six
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(-3, -9), expected: six, got user answer [six]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(-3, -9), expected: six, got user answer [six]
    [subpoints] => 0
    [max] => 0.175
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error; failure to execute updatePoints('bullet')
+ error; failure to execute updatePoints('bullet')
+ comparing stringSub(9, 9)=zero with output : zero
+ comparing c: zero with output : zero
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(9, 9), expected: zero, got user answer [zero]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(9, 9), expected: zero, got user answer [zero]
    [subpoints] => 0
    [max] => 0.175
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error; failure to execute updatePoints('bullet')
+ error; failure to execute updatePoints('bullet')
+ comparing stringSub(50,9)=fourty-nine with output : fourty-nine
+ comparing c: nothing with output : fourty-nine
fail!
+ calling updatePoints() to provide feedback
+ bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [subpoints] => 0.175
    [max] => 0.175
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error; failure to execute updatePoints('bullet')
+ error; failure to execute updatePoints('bullet')
+ comparing stringSub(5,2)=three with output : three
+ comparing c: three with output : three
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(5,2), expected: three, got user answer [three]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(5,2), expected: three, got user answer [three]
    [subpoints] => 0
    [max] => 0.175
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error; failure to execute updatePoints('bullet')
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => .80
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+error; failure to execute updatePoints('bullet4') for fail execom()
counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
+ colon was not found in user answer
+ new answer: 
 def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => bp missing colon [:] in user answer
    [subpoints] => .10
    [max] => .10
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error. failure in updatePoints() in autograder.
+  page accessed by getCons 2019-04-25 08:47:20pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed. cons returned empty.  
+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ the function was found in the user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function: addThree, function found!
    [subpoints] => 0
    [max] => 0.2
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error. failure in updatePoints() in autograder.
+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+execom() calculated funperc: 0.7, max: 0.11666666666667
+execom() calculated funperc: 0.7, max: 0.11666666666667
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [subpoints] => 0
    [max] => 0.11666666666667
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error; failure to execute updatePoints('bullet')
+ error; failure to execute updatePoints('bullet')
+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [subpoints] => 0
    [max] => 0.11666666666667
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error; failure to execute updatePoints('bullet')
+ error; failure to execute updatePoints('bullet')
+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [subpoints] => 0
    [max] => 0.11666666666667
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error; failure to execute updatePoints('bullet')
+ error; failure to execute updatePoints('bullet')
+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(1,2,3), expected: 6, got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(1,2,3), expected: 6, got user answer [6]
    [subpoints] => 0
    [max] => 0.11666666666667
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error; failure to execute updatePoints('bullet')
+ error; failure to execute updatePoints('bullet')
+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(4,5,6), expected: 15, got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(4,5,6), expected: 15, got user answer [15]
    [subpoints] => 0
    [max] => 0.11666666666667
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+ error; failure to execute updatePoints('bullet')
substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => .80
)

type: updatePoints; curl_error: The requested URL returned error: 500 Internal Server Error
+error; failure to execute updatePoints('bullet4') for fail execom()
[+] page accessed AUTOGRADER 2019-04-25 08:47:26pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1046108
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 08:47:30pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1047255
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
+ updatePoints() 2 was called. Received:  

+ modA was able to retrieve all rows from feedback for testId =  and qId = 
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 
    [qId] => 
    [feedback] => 0
    [points] => 
    [max] => 
)

+ updatePoints() 2 was called. Received:  

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 1
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 1
    [feedback] => b0p  testcase add(2,3)=5 failed
    [points] => 
    [max] => 0.5
)

+ updatePoints() 2 was called. Received:  

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 1
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 1
    [feedback] => b0p  testcase add(2,3)=5 failed
    [points] => 
    [max] => 
)

+ updatePoints() 2 was called. Received:  

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 1
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 1
    [feedback] => b0p  testcase add(2,3)=5 failed
    [points] => 
    [max] => 
)

+ updatePoints() 2 was called. Received:  

+ updatePoints() 2 was called. Received:  

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => b13p  testcase add(2,3)=5 failed
    [points] => 13
    [max] => 1
)

+ updatePoints() 2 was called. Received:  

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => b13p  testcase add(2,3)=5 failed
    [points] => 13
    [max] => 1
)

+ updatePoints() 2 was called. Received:  

+ modA was able to retrieve all rows from feedback for testId = 1 and qId = 4
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 1
    [qId] => 4
    [feedback] => b13p  testcase add(2,3)=5 failed
    [points] => 13
    [max] => 13
)

[+] page accessed AUTOGRADER 2019-04-25 09:03:09pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1050927
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)=six
                            [1] => stringSub(9, 9)=zero
                            [2] => stringSub(50,9)=fourty-nine
                            [3] => stringSub(5,2)=three
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c)
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)=six
                    [1] => stringSub(9, 9)=zero
                    [2] => stringSub(50,9)=fourty-nine
                    [3] => stringSub(5,2)=three
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c)
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 0.10
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g1p colon [:] in user answer
    [points] => 10
    [max] => 1
)

+  page accessed by getCons 2019-04-25 09:03:10pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed. cons returned empty.  
+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ the function was found in the user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function: stringSub, function found!
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p expecting function: stringSub, function found!
    [points] => 10
    [max] => 2
)

+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)=six
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)=zero
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)=fourty-nine
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)=three
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
    [3] => three
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+execom() calculated funperc: 0.7, max: 0.175
+execom() calculated funperc: 0.7, max: 0.175
+ comparing stringSub(-3, -9)=six with output : six
+ comparing c: six with output : six
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(-3, -9), expected: six, got user answer [six]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(-3, -9), expected: six, got user answer [six]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(9, 9)=zero with output : zero
+ comparing c: zero with output : zero
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(9, 9), expected: zero, got user answer [zero]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(9, 9), expected: zero, got user answer [zero]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(50,9)=fourty-nine with output : fourty-nine
+ comparing c: nothing with output : fourty-nine
fail!
+ calling updatePoints() to provide feedback
+ bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [subpoints] => 0.175
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ comparing stringSub(5,2)=three with output : three
+ comparing c: three with output : three
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(5,2), expected: three, got user answer [three]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(5,2), expected: three, got user answer [three]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => .80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 8
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 8
)

counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
+ colon was not found in user answer
+ new answer: 
 def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => bp missing colon [:] in user answer
    [subpoints] => .10
    [max] => .10
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => b1p missing colon [:] in user answer
    [points] => 9
    [max] => 1
)

+  page accessed by getCons 2019-04-25 09:03:11pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed. cons returned empty.  
+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ the function was found in the user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function: addThree, function found!
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p expecting function: addThree, function found!
    [points] => 9
    [max] => 2
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+execom() calculated funperc: 0.7, max: 0.11666666666667
+execom() calculated funperc: 0.7, max: 0.11666666666667
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 1
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 1
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 1
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(1,2,3), expected: 6, got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(1,2,3), expected: 6, got user answer [6]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 1
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(4,5,6), expected: 15, got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(4,5,6), expected: 15, got user answer [15]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 9
    [max] => 1
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => .80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 9
    [max] => 8
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 9
    [max] => 8
)

[+] page accessed AUTOGRADER 2019-04-25 09:03:20pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1080455
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 09:03:33pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1081602
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 09:15:56pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1082749
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 09:38:43pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1083896
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 09:46:54pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1085043
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 09:47:45pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1086190
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 09:49:42pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1087337
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)=six
                            [1] => stringSub(9, 9)=zero
                            [2] => stringSub(50,9)=fourty-nine
                            [3] => stringSub(5,2)=three
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c)
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)=six
                    [1] => stringSub(9, 9)=zero
                    [2] => stringSub(50,9)=fourty-nine
                    [3] => stringSub(5,2)=three
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c)
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 0.10
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g1p colon [:] in user answer
    [points] => 10
    [max] => 1
)

+  page accessed by getCons 2019-04-25 09:49:43pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed. cons returned empty.  
+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ the function was found in the user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function: stringSub, function found!
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p expecting function: stringSub, function found!
    [points] => 10
    [max] => 2
)

+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)=six
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)=zero
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)=fourty-nine
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)=three
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
    [3] => three
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+execom() calculated funperc: 0.7, max: 0.175
+execom() calculated funperc: 0.7, max: 0.175
+ comparing stringSub(-3, -9)=six with output : six
+ comparing c: six with output : six
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(-3, -9), expected: six, got user answer [six]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(-3, -9), expected: six, got user answer [six]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(9, 9)=zero with output : zero
+ comparing c: zero with output : zero
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(9, 9), expected: zero, got user answer [zero]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(9, 9), expected: zero, got user answer [zero]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(50,9)=fourty-nine with output : fourty-nine
+ comparing c: nothing with output : fourty-nine
fail!
+ calling updatePoints() to provide feedback
+ bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [subpoints] => 0.175
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ comparing stringSub(5,2)=three with output : three
+ comparing c: three with output : three
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(5,2), expected: three, got user answer [three]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(5,2), expected: three, got user answer [three]
    [subpoints] => 0
    [max] => 0.175
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => .80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 8
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 8
)

counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
+ colon was not found in user answer
+ new answer: 
 def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => bp missing colon [:] in user answer
    [subpoints] => .10
    [max] => .10
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => b1p missing colon [:] in user answer
    [points] => 9
    [max] => 1
)

+  page accessed by getCons 2019-04-25 09:49:44pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed. cons returned empty.  
+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ the function was found in the user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function: addThree, function found!
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p expecting function: addThree, function found!
    [points] => 9
    [max] => 2
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+execom() calculated funperc: 0.7, max: 0.11666666666667
+execom() calculated funperc: 0.7, max: 0.11666666666667
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 9
    [max] => 1
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 9
    [max] => 1
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 9
    [max] => 1
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(1,2,3), expected: 6, got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(1,2,3), expected: 6, got user answer [6]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 9
    [max] => 1
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(4,5,6), expected: 15, got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(4,5,6), expected: 15, got user answer [15]
    [subpoints] => 0
    [max] => 0.11666666666667
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 9
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 9
    [max] => 1
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => .80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 9
    [max] => 8
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 9
    [max] => 8
)

[+] page accessed AUTOGRADER 2019-04-25 09:49:52pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1116865
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 11:13:45pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1118012
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 11:13:53pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1119159
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 11:15:13pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1120306
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 0
    [error] => 
)

+ called setGrade for testId 4
+setGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ 4 will now be graded.
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ an array of submittedTests: 
Array
(
    [0] => Array
        (
            [id] => 4
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [diff] => 5
                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [diff] => 1
                        )

                )

        )

)

+ proceed with task B: obtain test cases
+ obtaining the array of ques from subm. tests
+ sending paramaters to getAnswers() :
Array
(
    [type] => autograder
    [qIds] => Array
        (
            [0] => 6
            [1] => 3
        )

    [testId] => 4
)

+ getAnswers(bullet2) output and formed the arrayofAnswers: 
Array
(
    [type] => getAnswers
    [error] => 0
    [answers] => Array
        (
            [0] => Array
                (
                    [qId] => 6
                    [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)=six
                            [1] => stringSub(9, 9)=zero
                            [2] => stringSub(50,9)=fourty-nine
                            [3] => stringSub(5,2)=three
                        )

                )

            [1] => Array
                (
                    [qId] => 3
                    [text] => def addThree(a, b, c)
    return a + b + c
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

)

Array
(
    [0] => Array
        (
            [qId] => 6
            [text] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [tests] => Array
                (
                    [0] => stringSub(-3, -9)=six
                    [1] => stringSub(9, 9)=zero
                    [2] => stringSub(50,9)=fourty-nine
                    [3] => stringSub(5,2)=three
                )

        )

    [1] => Array
        (
            [qId] => 3
            [text] => def addThree(a, b, c)
    return a + b + c
            [tests] => Array
                (
                    [0] => addThree(100, 200, 300)=600
                    [1] => addThree(-7, 0, 19)=12
                    [2] => addThree(-1,-1,-1)=-3
                    [3] => addThree(1,2,3)=6
                    [4] => addThree(4,5,6)=15
                    [5] => addThree(0,0,0)=0
                )

        )

)
counter is 1
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 6
+ clearning the python file for 6
+  page accessed by getCons 2019-04-25 11:15:15pm
+ received data : 
Array
(
    [qId] => 6
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(6) failed. cons returned empty.  
def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp colon [:] in user answer
    [subpoints] => 0
    [max] => 0.05
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g1p colon [:] in user answer
    [points] => 10
    [max] => 1
)

+ operating funcom for userAnswer: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ gp obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ gp obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ gp obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ gp obtained function stringSub with funcom()
+ finding if stringSub is in user answer def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ the function was found in the user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np expecting function: stringSub, function found!
    [subpoints] => 0
    [max] => 0.1
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p expecting function: stringSub, function found!
    [points] => 10
    [max] => 1
)

+ writing answer to python file: def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
+ current testcase :  stringSub(-3, -9)=six
+ current function : stringSub(-3, -9)
+ printout : print(stringSub(-3, -9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
)

+ now we are writing the testcase function stringSub(-3, -9) on the python file : 
+ current testcase :  stringSub(9, 9)=zero
+ current function : stringSub(9, 9)
+ printout : print(stringSub(9, 9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
)

+ now we are writing the testcase function stringSub(9, 9) on the python file : 
+ current testcase :  stringSub(50,9)=fourty-nine
+ current function : stringSub(50,9)
+ printout : print(stringSub(50,9))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
)

+ now we are writing the testcase function stringSub(50,9) on the python file : 
+ current testcase :  stringSub(5,2)=three
+ current function : stringSub(5,2)
+ printout : print(stringSub(5,2))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => six
    [1] => zero
    [2] => fourty-nine
    [3] => three
)

+ now we are writing the testcase function stringSub(5,2) on the python file : 
+ running execom() with pars for id : 4, qId : 6
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
print(stringSub(-3, -9))
print(stringSub(9, 9))
print(stringSub(50,9))
print(stringSub(5,2))
+ funperc was set to :80, size: 4
+ sub : 0.2, max: 0.2
+execom() calculated funperc: 80, max: 0.2
+execom() calculated funperc: 80, max: 0.2
+ comparing stringSub(-3, -9)=six with output : six
+ comparing c: six with output : six
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(-3, -9), expected: six, got user answer [six]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(-3, -9), expected: six, got user answer [six]
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(-3, -9), expected: six, got user answer [six]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(9, 9)=zero with output : zero
+ comparing c: zero with output : zero
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(9, 9), expected: zero, got user answer [zero]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(9, 9), expected: zero, got user answer [zero]
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(9, 9), expected: zero, got user answer [zero]
    [points] => 10
    [max] => 2
)

+ comparing stringSub(50,9)=fourty-nine with output : fourty-nine
+ comparing c: nothing with output : fourty-nine
fail!
+ calling updatePoints() to provide feedback
+ bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => bp python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [subpoints] => 0.2
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => b2p python called stringSub(50,9),  expected answer: fourty-nine, got user answer [nothing]
    [points] => 8
    [max] => 2
)

+ comparing stringSub(5,2)=three with output : three
+ comparing c: three with output : three
pass!
+ calling updatePoints() to provide feedback
+ gp python called stringSub(5,2), expected: three, got user answer [three]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => gp python called stringSub(5,2), expected: three, got user answer [three]
    [subpoints] => 0
    [max] => 0.2
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => g2p python called stringSub(5,2), expected: three, got user answer [three]
    [points] => 8
    [max] => 2
)

+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 6
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => .80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 6
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 8
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 6
    [feedback] => n0p user program succesfully executed. 
    [points] => 8
    [max] => 8
)

counter is 2
+ TASK F is in session. checking function name and colon 
+ clearning the python file for 3
+ clearning the python file for 3
+  page accessed by getCons 2019-04-25 11:15:16pm
+ received data : 
Array
(
    [qId] => 3
)

+ getCons() in backend  was succesful. data: 
{"cons":[]}
+ gunCons() retrieving array of cons
+ array of cons: 
Array
(
)

+ getCons() has empty cons array. returning 0.
+ getCons(3) failed. cons returned empty.  
+ colon was not found in user answer
+ new answer: 
 def addThree(a, b, c):
    return a + b + c
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => bp missing colon [:] in user answer
    [subpoints] => .05 
    [max] => .05
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 0 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => b1p missing colon [:] in user answer
    [points] => 10
    [max] => 1
)

+ operating funcom for userAnswer: def addThree(a, b, c):
    return a + b + c
+ gp obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ gp obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ gp obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ gp obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ gp obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ gp obtained function addThree with funcom()
+ finding if addThree is in user answer def addThree(a, b, c):
    return a + b + c
+ the function was found in the user answer
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np expecting function: addThree, function found!
    [subpoints] => 0
    [max] => 0.1
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 1 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p expecting function: addThree, function found!
    [points] => 10
    [max] => 1
)

+ writing answer to python file: def addThree(a, b, c):
    return a + b + c
+ current testcase :  addThree(100, 200, 300)=600
+ current function : addThree(100, 200, 300)
+ printout : print(addThree(100, 200, 300))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
)

+ now we are writing the testcase function addThree(100, 200, 300) on the python file : 
+ current testcase :  addThree(-7, 0, 19)=12
+ current function : addThree(-7, 0, 19)
+ printout : print(addThree(-7, 0, 19))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
)

+ now we are writing the testcase function addThree(-7, 0, 19) on the python file : 
+ current testcase :  addThree(-1,-1,-1)=-3
+ current function : addThree(-1,-1,-1)
+ printout : print(addThree(-1,-1,-1))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
)

+ now we are writing the testcase function addThree(-1,-1,-1) on the python file : 
+ current testcase :  addThree(1,2,3)=6
+ current function : addThree(1,2,3)
+ printout : print(addThree(1,2,3))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
)

+ now we are writing the testcase function addThree(1,2,3) on the python file : 
+ current testcase :  addThree(4,5,6)=15
+ current function : addThree(4,5,6)
+ printout : print(addThree(4,5,6))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
)

+ now we are writing the testcase function addThree(4,5,6) on the python file : 
substr failed at getOut()+ current testcase :  addThree(0,0,0)=0
+ current function : addThree(0,0,0)
+ printout : print(addThree(0,0,0))
+ obtaining the output part to be compared later.  
+ formed the arrayofOuts : 
Array
(
    [0] => 600
    [1] => 12
    [2] => -3
    [3] => 6
    [4] => 15
    [5] => 
)

+ now we are writing the testcase function addThree(0,0,0) on the python file : 
+ running execom() with pars for id : 4, qId : 3
+ execom command: python /afs/cad/u/w/b/wbv4/public_html/Middle/firstpy.py 2>&1
+ python contents:

def addThree(a, b, c):
    return a + b + c
print(addThree(100, 200, 300))
print(addThree(-7, 0, 19))
print(addThree(-1,-1,-1))
print(addThree(1,2,3))
print(addThree(4,5,6))
print(addThree(0,0,0))
+ funperc was set to :80, size: 6
+ sub : 0.13333333333333, max: 0.13333333333333
+execom() calculated funperc: 80, max: 0.13333333333333
+execom() calculated funperc: 80, max: 0.13333333333333
+ comparing addThree(100, 200, 300)=600 with output : 600
+ comparing c: 600 with output : 600
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [subpoints] => 0
    [max] => 0.13333333333333
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 2 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 10
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 10
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(100, 200, 300), expected: 600, got user answer [600]
    [points] => 10
    [max] => 1
)

+ comparing addThree(-7, 0, 19)=12 with output : 12
+ comparing c: 12 with output : 12
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [subpoints] => 0
    [max] => 0.13333333333333
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 3 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 10
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 10
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-7, 0, 19), expected: 12, got user answer [12]
    [points] => 10
    [max] => 1
)

+ comparing addThree(-1,-1,-1)=-3 with output : -3
+ comparing c: -3 with output : -3
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [subpoints] => 0
    [max] => 0.13333333333333
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 4 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 10
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 10
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(-1,-1,-1), expected: -3, got user answer [-3]
    [points] => 10
    [max] => 1
)

+ comparing addThree(1,2,3)=6 with output : 6
+ comparing c: 6 with output : 6
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(1,2,3), expected: 6, got user answer [6]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(1,2,3), expected: 6, got user answer [6]
    [subpoints] => 0
    [max] => 0.13333333333333
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 5 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 10
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 10
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(1,2,3), expected: 6, got user answer [6]
    [points] => 10
    [max] => 1
)

+ comparing addThree(4,5,6)=15 with output : 15
+ comparing c: 15 with output : 15
pass!
+ calling updatePoints() to provide feedback
+ gp python called addThree(4,5,6), expected: 15, got user answer [15]
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => gp python called addThree(4,5,6), expected: 15, got user answer [15]
    [subpoints] => 0
    [max] => 0.13333333333333
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 6 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 10
    [max] => 1
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => g1p python called addThree(4,5,6), expected: 15, got user answer [15]
    [points] => 10
    [max] => 1
)

substr failed at getOut()+ 0 is an empty or null output. skipping!
+ execom() returned 1
+ execom was succesful. updatePoints() feedback
+ np user program succesfully executed. 
+ updatePoints() 2 was called. Received:  
Array
(
    [testId] => 4
    [qId] => 3
    [feedback] => np user program succesfully executed. 
    [subpoints] => 0
    [max] => .80
)

+ modA was able to retrieve all rows from feedback for testId = 4 and qId = 3
+ obtained 7 rows
error: 0
+ updatePoints() in backend returning:
Array
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 10
    [max] => 8
)

+ updatePoints() : 
stdClass Object
(
    [type] => updatePoints
    [error] => 0
    [testId] => 4
    [qId] => 3
    [feedback] => n0p user program succesfully executed. 
    [points] => 10
    [max] => 8
)

[+] page accessed AUTOGRADER 2019-04-25 11:15:29pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1150003
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 11:20:44pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1151150
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 11:20:57pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1152297
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
[+] page accessed AUTOGRADER 2019-04-25 11:21:12pm
********************************************************

+ target file size of : /afs/cad/u/w/b/wbv4/public_html/Middle/tracklogs/auto.txt = 1153444
+ called checkGrade for testId . 1
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 1
+ called checkGrade for testId . 2
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 2
+ called checkGrade for testId . 4
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 4
+ called checkGrade for testId . 5
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 5
+ called checkGrade for testId . 6
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 6
+ called checkGrade for testId . 7
+ checkGrade() returned : 
Array
(
    [grade] => 1
    [error] => 
)

+ checkGrade returned true . skipping 7
+ array of submittedTests are empty, returning false and terminating.
