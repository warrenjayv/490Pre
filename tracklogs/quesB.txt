
+ the log reached 10 mb; it has been cleared 
executing quesObject() with qId = 91
obtaining testcases for qId = 91
building the ques object (temp1)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
    [tests] => Array
        (
            [0] => Triple(2)=6
            [1] => Triple(3)=9
        )

)
[ + ] page accessed quesB 2019-04-11 10:30:00pm
executing quesObject() with qId = 94
obtaining testcases for qId = 94
building the ques object (temp1)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
    [tests] => Array
        (
            [0] => Run(5)=5
            [1] => Run(6)=6
        )

)
[ + ] page accessed quesB 2019-04-11 10:30:24pm
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => Sub(3,2)=1
            [1] => Sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-11 10:30:24pm
executing quesObject() with qId = 2
obtaining testcases for qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:30:24pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:30:24pm
executing quesObject() with qId = 70
obtaining testcases for qId = 70
building the ques object (temp1)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
    [tests] => Array
        (
            [0] => Count(20)=20
            [1] => Count(50)=50
            [2] => Count(10)=10
            [3] => Count(5)=10
        )

)
[ + ] page accessed quesB 2019-04-11 10:30:24pm
executing quesObject() with qId = 91
obtaining testcases for qId = 91
building the ques object (temp1)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
    [tests] => Array
        (
            [0] => Triple(2)=6
            [1] => Triple(3)=9
        )

)
[ + ] page accessed quesB 2019-04-11 10:30:24pm
executing quesObject() with qId = 94
obtaining testcases for qId = 94
building the ques object (temp1)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
    [tests] => Array
        (
            [0] => Run(5)=5
            [1] => Run(6)=6
        )

)
[ + ] page accessed quesB 2019-04-11 10:33:10pm
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => Sub(3,2)=1
            [1] => Sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-11 10:33:10pm
executing quesObject() with qId = 2
obtaining testcases for qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:33:10pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:33:10pm
executing quesObject() with qId = 70
obtaining testcases for qId = 70
building the ques object (temp1)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
    [tests] => Array
        (
            [0] => Count(20)=20
            [1] => Count(50)=50
            [2] => Count(10)=10
            [3] => Count(5)=10
        )

)
[ + ] page accessed quesB 2019-04-11 10:33:10pm
executing quesObject() with qId = 91
obtaining testcases for qId = 91
building the ques object (temp1)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
    [tests] => Array
        (
            [0] => Triple(2)=6
            [1] => Triple(3)=9
        )

)
[ + ] page accessed quesB 2019-04-11 10:33:10pm
executing quesObject() with qId = 94
obtaining testcases for qId = 94
building the ques object (temp1)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
    [tests] => Array
        (
            [0] => Run(5)=5
            [1] => Run(6)=6
        )

)
[ + ] page accessed quesB 2019-04-11 10:34:55pm
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => Sub(3,2)=1
            [1] => Sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-11 10:34:55pm
executing quesObject() with qId = 2
obtaining testcases for qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:34:55pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:34:55pm
executing quesObject() with qId = 70
obtaining testcases for qId = 70
building the ques object (temp1)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
    [tests] => Array
        (
            [0] => Count(20)=20
            [1] => Count(50)=50
            [2] => Count(10)=10
            [3] => Count(5)=10
        )

)
[ + ] page accessed quesB 2019-04-11 10:34:55pm
executing quesObject() with qId = 91
obtaining testcases for qId = 91
building the ques object (temp1)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
    [tests] => Array
        (
            [0] => Triple(2)=6
            [1] => Triple(3)=9
        )

)
[ + ] page accessed quesB 2019-04-11 10:34:56pm
executing quesObject() with qId = 94
obtaining testcases for qId = 94
building the ques object (temp1)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
    [tests] => Array
        (
            [0] => Run(5)=5
            [1] => Run(6)=6
        )

)
[ + ] page accessed quesB 2019-04-11 10:34:58pm
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => Sub(3,2)=1
            [1] => Sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-11 10:34:58pm
executing quesObject() with qId = 2
obtaining testcases for qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:34:58pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:34:58pm
executing quesObject() with qId = 70
obtaining testcases for qId = 70
building the ques object (temp1)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
    [tests] => Array
        (
            [0] => Count(20)=20
            [1] => Count(50)=50
            [2] => Count(10)=10
            [3] => Count(5)=10
        )

)
[ + ] page accessed quesB 2019-04-11 10:34:58pm
executing quesObject() with qId = 91
obtaining testcases for qId = 91
building the ques object (temp1)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
    [tests] => Array
        (
            [0] => Triple(2)=6
            [1] => Triple(3)=9
        )

)
[ + ] page accessed quesB 2019-04-11 10:34:58pm
executing quesObject() with qId = 94
obtaining testcases for qId = 94
building the ques object (temp1)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
    [tests] => Array
        (
            [0] => Run(5)=5
            [1] => Run(6)=6
        )

)
[ + ] page accessed quesB 2019-04-11 10:34:59pm
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => Sub(3,2)=1
            [1] => Sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-11 10:34:59pm
executing quesObject() with qId = 2
obtaining testcases for qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:34:59pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:34:59pm
executing quesObject() with qId = 70
obtaining testcases for qId = 70
building the ques object (temp1)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
    [tests] => Array
        (
            [0] => Count(20)=20
            [1] => Count(50)=50
            [2] => Count(10)=10
            [3] => Count(5)=10
        )

)
[ + ] page accessed quesB 2019-04-11 10:35:00pm
executing quesObject() with qId = 91
obtaining testcases for qId = 91
building the ques object (temp1)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
    [tests] => Array
        (
            [0] => Triple(2)=6
            [1] => Triple(3)=9
        )

)
[ + ] page accessed quesB 2019-04-11 10:35:00pm
executing quesObject() with qId = 94
obtaining testcases for qId = 94
building the ques object (temp1)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
    [tests] => Array
        (
            [0] => Run(5)=5
            [1] => Run(6)=6
        )

)
[ + ] page accessed quesB 2019-04-11 10:35:01pm
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => Sub(3,2)=1
            [1] => Sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-11 10:35:01pm
executing quesObject() with qId = 2
obtaining testcases for qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:35:01pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:35:02pm
executing quesObject() with qId = 70
obtaining testcases for qId = 70
building the ques object (temp1)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
    [tests] => Array
        (
            [0] => Count(20)=20
            [1] => Count(50)=50
            [2] => Count(10)=10
            [3] => Count(5)=10
        )

)
[ + ] page accessed quesB 2019-04-11 10:35:02pm
executing quesObject() with qId = 91
obtaining testcases for qId = 91
building the ques object (temp1)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
    [tests] => Array
        (
            [0] => Triple(2)=6
            [1] => Triple(3)=9
        )

)
[ + ] page accessed quesB 2019-04-11 10:35:02pm
executing quesObject() with qId = 94
obtaining testcases for qId = 94
building the ques object (temp1)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
    [tests] => Array
        (
            [0] => Run(5)=5
            [1] => Run(6)=6
        )

)
[ + ] page accessed quesB 2019-04-11 10:35:04pm
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => Sub(3,2)=1
            [1] => Sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-11 10:35:04pm
executing quesObject() with qId = 2
obtaining testcases for qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:35:04pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:35:04pm
executing quesObject() with qId = 70
obtaining testcases for qId = 70
building the ques object (temp1)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
    [tests] => Array
        (
            [0] => Count(20)=20
            [1] => Count(50)=50
            [2] => Count(10)=10
            [3] => Count(5)=10
        )

)
[ + ] page accessed quesB 2019-04-11 10:35:04pm
executing quesObject() with qId = 91
obtaining testcases for qId = 91
building the ques object (temp1)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
    [tests] => Array
        (
            [0] => Triple(2)=6
            [1] => Triple(3)=9
        )

)
[ + ] page accessed quesB 2019-04-11 10:35:04pm
executing quesObject() with qId = 94
obtaining testcases for qId = 94
building the ques object (temp1)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
    [tests] => Array
        (
            [0] => Run(5)=5
            [1] => Run(6)=6
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:20pm
[ + ] page accessed quesB 2019-04-11 10:43:20pm
executing quesObject() with qId = 3
executing quesObject() with qId = 3
obtaining testcases for qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => Sub(3,2)=1
            [1] => Sub(4,2)=2
        )

)
the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => Sub(3,2)=1
            [1] => Sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:20pm
executing quesObject() with qId = 2
[ + ] page accessed quesB 2019-04-11 10:43:20pm
obtaining testcases for qId = 2
executing quesObject() with qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

obtaining testcases for qId = 2
the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:20pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
[ + ] page accessed quesB 2019-04-11 10:43:20pm
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

executing quesObject() with qId = 1
the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:20pm
executing quesObject() with qId = 70
obtaining testcases for qId = 70
building the ques object (temp1)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
    [tests] => Array
        (
            [0] => Count(20)=20
            [1] => Count(50)=50
            [2] => Count(10)=10
            [3] => Count(5)=10
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:20pm
executing quesObject() with qId = 70
obtaining testcases for qId = 70
[ + ] page accessed quesB 2019-04-11 10:43:20pm
building the ques object (temp1)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
)

executing quesObject() with qId = 91
the ques object with array cases (temp2)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
    [tests] => Array
        (
            [0] => Count(20)=20
            [1] => Count(50)=50
            [2] => Count(10)=10
            [3] => Count(5)=10
        )

)
obtaining testcases for qId = 91
building the ques object (temp1)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
    [tests] => Array
        (
            [0] => Triple(2)=6
            [1] => Triple(3)=9
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:20pm
executing quesObject() with qId = 91
obtaining testcases for qId = 91
building the ques object (temp1)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
    [tests] => Array
        (
            [0] => Triple(2)=6
            [1] => Triple(3)=9
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:20pm
executing quesObject() with qId = 94
obtaining testcases for qId = 94
building the ques object (temp1)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
    [tests] => Array
        (
            [0] => Run(5)=5
            [1] => Run(6)=6
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:20pm
executing quesObject() with qId = 94
obtaining testcases for qId = 94
building the ques object (temp1)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
    [tests] => Array
        (
            [0] => Run(5)=5
            [1] => Run(6)=6
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:25pm
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => Sub(3,2)=1
            [1] => Sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:25pm
executing quesObject() with qId = 2
obtaining testcases for qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:25pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:25pm
executing quesObject() with qId = 70
obtaining testcases for qId = 70
building the ques object (temp1)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
    [tests] => Array
        (
            [0] => Count(20)=20
            [1] => Count(50)=50
            [2] => Count(10)=10
            [3] => Count(5)=10
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:25pm
executing quesObject() with qId = 91
obtaining testcases for qId = 91
building the ques object (temp1)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
    [tests] => Array
        (
            [0] => Triple(2)=6
            [1] => Triple(3)=9
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:25pm
executing quesObject() with qId = 94
obtaining testcases for qId = 94
building the ques object (temp1)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
    [tests] => Array
        (
            [0] => Run(5)=5
            [1] => Run(6)=6
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:26pm
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => Sub(3,2)=1
            [1] => Sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:26pm
executing quesObject() with qId = 2
obtaining testcases for qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:26pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:26pm
executing quesObject() with qId = 70
obtaining testcases for qId = 70
building the ques object (temp1)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
    [tests] => Array
        (
            [0] => Count(20)=20
            [1] => Count(50)=50
            [2] => Count(10)=10
            [3] => Count(5)=10
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:26pm
executing quesObject() with qId = 91
obtaining testcases for qId = 91
building the ques object (temp1)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
    [tests] => Array
        (
            [0] => Triple(2)=6
            [1] => Triple(3)=9
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:26pm
executing quesObject() with qId = 94
obtaining testcases for qId = 94
building the ques object (temp1)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
    [tests] => Array
        (
            [0] => Run(5)=5
            [1] => Run(6)=6
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:28pm
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => Sub(3,2)=1
            [1] => Sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:28pm
executing quesObject() with qId = 2
obtaining testcases for qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:28pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:28pm
executing quesObject() with qId = 70
obtaining testcases for qId = 70
building the ques object (temp1)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
    [tests] => Array
        (
            [0] => Count(20)=20
            [1] => Count(50)=50
            [2] => Count(10)=10
            [3] => Count(5)=10
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:28pm
executing quesObject() with qId = 91
obtaining testcases for qId = 91
building the ques object (temp1)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
    [tests] => Array
        (
            [0] => Triple(2)=6
            [1] => Triple(3)=9
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:28pm
executing quesObject() with qId = 94
obtaining testcases for qId = 94
building the ques object (temp1)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
    [tests] => Array
        (
            [0] => Run(5)=5
            [1] => Run(6)=6
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:32pm
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => Sub(3,2)=1
            [1] => Sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:32pm
executing quesObject() with qId = 2
obtaining testcases for qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:32pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:32pm
executing quesObject() with qId = 70
obtaining testcases for qId = 70
building the ques object (temp1)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
    [tests] => Array
        (
            [0] => Count(20)=20
            [1] => Count(50)=50
            [2] => Count(10)=10
            [3] => Count(5)=10
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:32pm
executing quesObject() with qId = 91
obtaining testcases for qId = 91
building the ques object (temp1)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
    [tests] => Array
        (
            [0] => Triple(2)=6
            [1] => Triple(3)=9
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:32pm
executing quesObject() with qId = 94
obtaining testcases for qId = 94
building the ques object (temp1)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
    [tests] => Array
        (
            [0] => Run(5)=5
            [1] => Run(6)=6
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:35pm
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => Sub(3,2)=1
            [1] => Sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:35pm
executing quesObject() with qId = 2
obtaining testcases for qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:35pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:35pm
executing quesObject() with qId = 70
obtaining testcases for qId = 70
building the ques object (temp1)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
    [tests] => Array
        (
            [0] => Count(20)=20
            [1] => Count(50)=50
            [2] => Count(10)=10
            [3] => Count(5)=10
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:35pm
executing quesObject() with qId = 91
obtaining testcases for qId = 91
building the ques object (temp1)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
    [tests] => Array
        (
            [0] => Triple(2)=6
            [1] => Triple(3)=9
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:35pm
executing quesObject() with qId = 94
obtaining testcases for qId = 94
building the ques object (temp1)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
    [tests] => Array
        (
            [0] => Run(5)=5
            [1] => Run(6)=6
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:37pm
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => Sub(3,2)=1
            [1] => Sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:37pm
executing quesObject() with qId = 2
obtaining testcases for qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:37pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:37pm
executing quesObject() with qId = 70
obtaining testcases for qId = 70
building the ques object (temp1)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
    [tests] => Array
        (
            [0] => Count(20)=20
            [1] => Count(50)=50
            [2] => Count(10)=10
            [3] => Count(5)=10
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:37pm
executing quesObject() with qId = 91
obtaining testcases for qId = 91
building the ques object (temp1)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
    [tests] => Array
        (
            [0] => Triple(2)=6
            [1] => Triple(3)=9
        )

)
[ + ] page accessed quesB 2019-04-11 10:43:37pm
executing quesObject() with qId = 94
obtaining testcases for qId = 94
building the ques object (temp1)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
    [tests] => Array
        (
            [0] => Run(5)=5
            [1] => Run(6)=6
        )

)
[ + ] page accessed quesB 2019-04-11 10:44:07pm
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => Sub(3,2)=1
            [1] => Sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-11 10:44:07pm
executing quesObject() with qId = 2
obtaining testcases for qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:44:07pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:44:07pm
executing quesObject() with qId = 70
obtaining testcases for qId = 70
building the ques object (temp1)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
    [tests] => Array
        (
            [0] => Count(20)=20
            [1] => Count(50)=50
            [2] => Count(10)=10
            [3] => Count(5)=10
        )

)
[ + ] page accessed quesB 2019-04-11 10:44:07pm
executing quesObject() with qId = 91
obtaining testcases for qId = 91
building the ques object (temp1)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
    [tests] => Array
        (
            [0] => Triple(2)=6
            [1] => Triple(3)=9
        )

)
[ + ] page accessed quesB 2019-04-11 10:44:07pm
executing quesObject() with qId = 94
obtaining testcases for qId = 94
building the ques object (temp1)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
    [tests] => Array
        (
            [0] => Run(5)=5
            [1] => Run(6)=6
        )

)
[ + ] page accessed quesB 2019-04-11 10:44:31pm
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => Sub(3,2)=1
            [1] => Sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-11 10:44:31pm
executing quesObject() with qId = 2
obtaining testcases for qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:44:31pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-11 10:44:31pm
executing quesObject() with qId = 70
obtaining testcases for qId = 70
building the ques object (temp1)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 70
    [desc] => please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. 
    [topic] => count
    [diff] => 2
    [tests] => Array
        (
            [0] => Count(20)=20
            [1] => Count(50)=50
            [2] => Count(10)=10
            [3] => Count(5)=10
        )

)
[ + ] page accessed quesB 2019-04-11 10:44:31pm
executing quesObject() with qId = 91
obtaining testcases for qId = 91
building the ques object (temp1)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 91
    [desc] => please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. 
    [topic] => triple
    [diff] => 2
    [tests] => Array
        (
            [0] => Triple(2)=6
            [1] => Triple(3)=9
        )

)
[ + ] page accessed quesB 2019-04-11 10:44:31pm
executing quesObject() with qId = 94
obtaining testcases for qId = 94
building the ques object (temp1)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 94
    [desc] => run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. 
    [topic] => while
    [diff] => 3
    [tests] => Array
        (
            [0] => Run(5)=5
            [1] => Run(6)=6
        )

)
