
+ the log reached 10 mb; it has been cleared 
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-10 04:42:17pm
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => sub(3,2)=1
            [1] => sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-10 04:42:17pm
executing quesObject() with qId = 2
obtaining testcases for qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-10 04:42:17pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-10 04:57:43pm
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => sub(3,2)=1
            [1] => sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-10 04:57:43pm
executing quesObject() with qId = 2
obtaining testcases for qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-10 04:57:43pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
[ + ] page accessed quesB 2019-04-10 05:03:00pm
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => create a function called Sub which takes 2 parameters and subtracts and returns the difference.
    [topic] => Sub
    [diff] => 3
    [tests] => Array
        (
            [0] => sub(3,2)=1
            [1] => sub(4,2)=2
        )

)
[ + ] page accessed quesB 2019-04-10 05:03:00pm
executing quesObject() with qId = 2
obtaining testcases for qId = 2
building the ques object (temp1)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 2
    [desc] => create a function called Mult() that takes 2 parameters and returns their product. 
    [topic] => multi
    [diff] => 3
    [tests] => Array
        (
            [0] => Mult(2,4)=8
        )

)
[ + ] page accessed quesB 2019-04-10 05:03:00pm
executing quesObject() with qId = 1
obtaining testcases for qId = 1
building the ques object (temp1)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 1
    [desc] => create a function add which takes 2 parameters and returns the sum.
    [topic] => add
    [diff] => 1
    [tests] => Array
        (
            [0] => add(2,3)=5
            [1] => add(4,4)=8
        )

)
