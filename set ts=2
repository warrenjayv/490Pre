[1mdiff --git a/autogradermid2.php b/autogradermid2.php[m
[1mindex 4e880db..3acf9db 100755[m
[1m--- a/autogradermid2.php[m
[1m+++ b/autogradermid2.php[m
[36m@@ -139,9 +139,9 @@[m [mfunction grade() {[m
 [m
       /* TASK F2: check for colon */ [m
       if ($constat == true) {[m
[31m-             $colperc = '0.05'; [m
[32m+[m[32m             $colperc = '0.066';[m[41m [m
       } else {[m
[31m-             $colperc = '0.10'; [m
[32m+[m[32m             $colperc = '0.20';[m[41m [m
       }[m
       if ($ext = colonfixer($text)) {[m
 					$write = "+ colon was not found in user answer\n"; [m
[36m@@ -182,7 +182,13 @@[m [mfunction grade() {[m
 				$function = getFunc($b); $write .= "+ current function : " . $function . "\n"; [m
 				$printout = "print(" . $function . ")"; $write .= "+ printout : " . $printout . "\n"; [m
 				$write .= "+ obtaining the output part to be compared later.  \n"; [m
[31m-				$output = getOut($b); array_push($arrayofOuts, $output);[m
[32m+[m[32m        $output = getOut($b);[m
[32m+[m[32m        if (empty($output)) {[m
[32m+[m[32m            $write = "+ output was was detected empty at testcase: " . $b . "\n";[m[41m [m
[32m+[m[32m            autolog($write, $target);[m
[32m+[m[32m            $output = "0";[m[41m [m
[32m+[m[32m        }[m
[32m+[m[32m        array_push($arrayofOuts, $output);[m
 				$write .= "+ formed the arrayofOuts : \n" . print_r($arrayofOuts, true) . "\n"; [m
 				$write .= "+ now we are writing the testcase function " . $function . " on the python file : \n"; 			   [m
 				autolog($write, $target); append($source, $printout); 		 		[m
[36m@@ -265,10 +271,16 @@[m [mfunction grade() {[m
 [m
   function colonkiller($text, $start) {[m
       /*destroys colons anywhere in the python body*/ [m
[31m-      $target = substr($text, $start);[m
[31m-      $clearbody = str_replace(":", " ", $target);[m
[31m-      $newtext = substr_replace($text, $clearbody, $start);[m
[31m-      return $newtext; [m
[32m+[m[32m      $target = substr($text, $start);[m[41m [m
[32m+[m[32m      $for = strpos($target, 'for', 0);[m
[32m+[m[32m      $while = strpos($target, 'while', 0);[m
[32m+[m[32m      if ((!$for) && (!$while)) {[m
[32m+[m[32m         $clearbody = str_replace(":", " ", $target);[m
[32m+[m[32m         $newtext = substr_replace($text, $clearbody, $start);[m
[32m+[m[32m         return $newtext;[m
[32m+[m[32m      } else {[m
[32m+[m[32m         return $text;[m[41m [m
[32m+[m[32m      }[m
   }[m
   [m
 	function getCons($qId) {[m
[36m@@ -392,16 +404,18 @@[m [mfunction grade() {[m
             autolog($write, $target); [m
 		$exec = exec($test, $array, $status); [m
 		if (! $status ) { [m
[31m-			foreach($array as $key=>$c) {[m
[32m+[m[32m        foreach($array as $key=>$c) {[m
[32m+[m
 				$write .= "+ comparing " . $tests[$key] . " with output : " . $arrayofOuts[$key] . "\n"; [m
 				$write .= "+ comparing c: " . $c . " with output : " . $arrayofOuts[$key] . "\n"; [m
 				$function = getFunc($tests[$key]);[m
 				$output = getOut($tests[$key]);[m
[31m-[m
[31m-				if (empty($c)) {[m
[32m+[m[41m        [m
[32m+[m				[32mif (! isset($c)) {[m
 					$write = "+ ".$c." is an empty or null output. skipping!\n"; autolog($write, $target); [m
 					continue; [m
[31m-				}[m
[32m+[m[32m        }[m
[32m+[m[41m       [m
 				autolog($write, $target); [m
 				if ($c ===  $arrayofOuts[$key]) {[m
 					$write = "pass!\n"; autolog($write, $target); [m
[36m@@ -452,11 +466,11 @@[m [mfunction grade() {[m
   function funcom($text , $tests, $id, $qId, $constat) {[m
 [m
     if ($constat) {[m
[31m-        $max = 0.05 ; [m
[31m-        $subpoints = 0.05; [m
[32m+[m[32m        $max = 0.066;[m[41m [m
[32m+[m[32m        $subpoints = 0.066 ;[m[41m [m
     } else {[m
[31m-        $max = 0.1; [m
[31m-        $subpoints = 0.1; [m
[32m+[m[32m        $max = 0.2;[m[41m [m
[32m+[m[32m        $subpoints = 0.2;[m[41m [m
     }[m
 		$target = targetIs('auto'); [m
 		/* go through each test and obtain the function, string search the text for the function */[m
